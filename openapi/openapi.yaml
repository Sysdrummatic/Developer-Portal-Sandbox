openapi: 3.0.0
info:
  description: >-
    This API provides services to upload, manipulate and download
    businesspartner data in the CDL Cloud
  version: '4.0'
  title: Data Exchange API
  contact:
    name: Michal Malinka
    url: https://www.cdq.ch/team
    email: michal.malinka@cdq.ch
  x-wsdl-contentEncoding: base64
tags:
  - name: Business Partner Storages
    description: Business Partner Storage Public Webservice
  - name: Data Mapping
    description: Data Mapping Public Webservice
  - name: Data Transformation
    description: Data Transformation Public Webservice
  - name: Subscriptions
    description: Everything about Subscriptions
paths:
  /jobs/dnbimportjobs:
    post:
      x-public: true
      x-wsdl: true
      tags:
        - DNB Storages
      summary: Start DNB Import Job
      description: >
        To start a DNB Import Job use the following request

        ```

        curl -X POST \
          --url 'https://api.corporate-data-league.ch/data-exchange/rest/jobs/dnbimportjobs?dnbUser=optional&dnbPassword=optional' \
          -u 'BasicAuthUserName:your_credentials'\
          -H 'Accept: application/json' \
          -F 'file=@your_file.csv'
        ```

        with using this sample file:

        ```

        DUNS

        DNB-E:J1XLSOXJCSIO6IH

        305211311

        DNB:305211311

        ```

        The file can be a `csv` or `xlsx`. The file should contain only one
        column with the DUNS number.

        In the first row should the header `DUNS`. The DUNS number can be in
        following forms:

        - As CDQ-ID. Example `DNB-E:J1XLSOXJCSIO6IH` or `DNB:305211311`

        - as raw DUNS `305211311`


        The DUNS consist of 9 digits. When the input DUNS does not consists of 9
        digids, leadings zeros are added.
      parameters:
        - name: dnbUser
          in: query
          description: >-
            Optional, if credentials are available in user or organization
            settings
          schema:
            type: string
        - name: dnbPassword
          in: query
          description: >-
            Optional, if credentials are available in user or organization
            settings
          schema:
            type: string
        - name: featuresOn
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/DnbImportJobFeature'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnbImportJob'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  description: >-
                    XLSX or CSV file to be uploaded, containing mandatory DUNS
                    column (SOAP currently only supports CSV)
                  type: string
                  format: binary
  /jobs/dnbimportjobs/{id}:
    get:
      x-public: true
      x-wsdl: true
      tags:
        - DNB Storages
      summary: Poll DNB Import Job
      description: >
        After you have started a D&B import job, you will receive a job id in
        the response. ``` {
          "id" : "<ID>"
        } ```

        Use this ID to poll for the status of the job using this endpoint. Once
        the status is FINISHED, you can see the results in the D&B storage.
      parameters:
        - name: id
          in: path
          description: id of the DNB import job
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnbImportJob'
  /jobs/dnbreportjobs:
    post:
      x-public: true
      x-wsdl: false
      tags:
        - DNB Storages
      summary: Start DNB Report Job
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnbReportJob'
  /jobs/dnbreportjobs/{id}:
    get:
      x-public: true
      x-wsdl: false
      tags:
        - DNB Storages
      summary: Poll DNB Report Job
      parameters:
        - name: id
          in: path
          description: id of the DNB report job
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnbReportJob'
  /jobs/dnbcreatelodjobs:
    post:
      x-public: true
      x-wsdl: false
      tags:
        - DNB Storages
      summary: Create LOD File
      description: >
        For all data mirrors configured for an organization read Business
        Partners identifiers with type DUNS_ID and cerate a List

        fd DUNS file. This file is used the initialization of the DNB Monitoring
        process
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnbCreateLODJob'
  /jobs/dnbcreatelodjobs/{id}:
    get:
      x-public: true
      x-wsdl: false
      tags:
        - DNB Storages
      summary: Poll DNB LOD Job
      parameters:
        - name: id
          in: path
          description: id of the DNB Create LOD job
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnbCreateLODJob'
  /dnbstorages/fetch:
    post:
      x-public: true
      x-wsdl: false
      tags:
        - DNB Storages
      summary: Fetch DNB Record
      description: Fetch a D&B record by providing the DUNS
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchDnbRecordRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchDnbRecordResult'
          description: OK
  /jobs/datadumpjobs:
    post:
      x-public: true
      x-wsdl: false
      tags:
        - Data Dump Job
      summary: Start Data Dump Job
      description: Create CSV data dump out of the whole storage.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataDumpJobRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataDumpJob'
  /jobs/datadumpjobs/{id}:
    get:
      x-public: true
      x-wsdl: false
      tags:
        - Data Dump Job
      summary: Poll Data Dump Job
      parameters:
        - name: id
          in: path
          description: id of the data dump job
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataDumpJob'
  /v2/storages/{storageId}:
    parameters:
      - name: storageId
        description: Unique ID of a business partner storage
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - Business Partner Storages
      parameters:
        - name: featuresOn
          in: query
          description: |
            Feature(s) to be used during reading the metadata:
             * `WITH_COUNTRY_STATISTICS` - Recalculates and retrieves country statistics information.
             * `ONLY_ISO_COUNTRY_STATISTICS` - Forces only valid ISO 3166-2 country codes.
          schema:
            type: array
            items:
              type: string
              enum:
                - WITH_COUNTRY_STATISTICS
                - ONLY_ISO_COUNTRY_STATISTICS
        - name: dataSource
          in: query
          schema:
            type: string
          description: >-
            Data Source (name or ID) to be measured during calculating
            statistics. By default, all Data Sources are measured.
      summary: Read Storage
      description: Read metadata of a storage
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPartnerStorageMetadata'
          description: OK
  /v3/storages/{storageId}:
    parameters:
      - name: storageId
        description: Unique ID of a business partner storage
        in: path
        required: true
        schema:
          type: string
  /storages/{storageId}/businesspartners/profiles/minorityindicator/update:
    parameters:
      - name: storageId
        in: path
        required: true
        schema:
          type: string
        description: storageId
  /v4/storages/{storageId}/events:
    parameters:
      - name: storageId
        in: path
        required: true
        schema:
          type: string
        description: storageId
  /v4/storages/{storageId}/checkAccess:
    parameters:
      - name: storageId
        description: Unique ID of a storage
        in: path
        required: true
        schema:
          type: string
  /v4/storages/{storageId}/events/flatten:
    parameters:
      - name: storageId
        in: path
        required: true
        schema:
          type: string
        description: storageId
  /v4/dnbstorages/dnbrecords:
    get:
      x-public: true
      x-wsdl: false
      tags:
        - DNB Storages
      summary: Read DNB Records
      description: Read a page of records from the D&B storage of your organization
      parameters:
        - $ref: '#/components/parameters/startAfterQueryParam'
        - $ref: '#/components/parameters/limitQueryParam'
        - $ref: '#/components/parameters/dnbRecordsReadFeatureOnQueryParam'
        - $ref: '#/components/parameters/dnbRecordsReadFeatureOffQueryParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnbRecordPage'
          description: OK
  /v4/storages/{storageId}/businesspartners:
    parameters:
      - name: storageId
        in: path
        required: true
        schema:
          type: string
        description: storageId
    get:
      x-public: true
      x-wsdl: true
      tags:
        - Business Partners
      summary: Read Business Partners
      parameters:
        - $ref: '#/components/parameters/startAfterQueryParam'
        - $ref: '#/components/parameters/limitQueryParam'
        - name: dataSource
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          description: >-
            Data source (names or IDs) used to filter the result of business
            partners returned.
        - name: countryCode
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          description: >-
            Country short names used to filter the result of business partners
            returned.
        - name: hasRawData
          in: query
          required: false
          schema:
            type: boolean
            default: false
          description: >-
            Flag to filter result of business partners based on the existence of
            the record attribute (raw data).
        - name: updateMonitoring
          in: query
          required: false
          schema:
            type: boolean
          description: >-
            Flag to filter business partners by the value of updateMonitoring
            attribute
        - name: modifiedBefore
          in: query
          required: false
          schema:
            type: string
          description: >-
            Return entries which were modified before given data. The given date
            should support ISO-8601 representation
          example: '2020-07-06T12:14:03.204Z'
        - name: modifiedAfter
          in: query
          required: false
          schema:
            type: string
          description: >-
            Return entries which were modified after given data. The given date
            should support ISO-8601 representation
          example: '2020-07-06T12:14:03.204Z'
        - name: businessPartnerId
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          description: Business Partner IDs which should be filtered.
        - name: externalId
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          description: Business Partner externalIDs which should be filtered.
        - name: sharingStatus
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          description: |
            Business Partner Sharing Status which should be filtered.

            Sharing Statuses which can be filtered out:
            * `UNDER_CONSIDERATION`
            * `UNDISCLOSED_RECORD`
            * `MISSING_INFORMATION_FOR_LINKAGE`
            * `ERRONEOUS_INFORMATION_FOR_LINKAGE`
            * `ERRONEOUS_RECORD`
            * `PENDING_LINKAGE_DECISION`
            * `PROCESS_ISSUE`
            * `SHARED_WITH_NO_MATCH`
            * `SHARED_WITH_CONFIDENT_MATCH`
            * `SHARED_WITH_NO_MATCH_BY_REVIEW`
            * `SHARED_BY_REVIEW`
        - name: featuresOn
          in: query
          required: false
          description: >
            Features to be turned on:

            * `APPLY_CURATION_DECISIONS` - Applies curation decisions from
            Decision Log to business partners if any decisions found. By default
            turned off.

            * `FETCH_RECORD` - Allows to switch fetching record field to reduce
            data size. By default turned on.

            * `FETCH_RELATIONS` - Allows to switch fetching relations of
            Business Partners. By default turned off. Only for storages with
            RELATIONS feature enabled.

            * `NUMBER_OF_TOTAL` - Allows to switch fetching the total number of
            Business Partners to improve performance. By default turned on.

            * `USE_NEXT_START_AFTER` - Allows to automatically calculate
            pagination indicator in `nextStartAfter` field. By default turned
            off.
          schema:
            type: array
            items:
              x-apimatic-facade: '#/components/schemas/BusinessPartnersReadFeatureParam'
              $ref: '#/components/schemas/BusinessPartnersReadFeatureParam'
        - name: featuresOff
          description: >
            Features to be turned off:

            * `APPLY_CURATION_DECISIONS` - Applies curation decisions from
            Decision Log to business partners if any decisions found. By default
            turned off.

            * `FETCH_RECORD` - Allows to switch fetching record field to reduce
            data size. By default turned on.

            * `FETCH_RELATIONS` - Allows to switch fetching relations of
            Business Partners. By default turned off. Only for storages with
            RELATIONS feature enabled.

            * `NUMBER_OF_TOTAL` - Allows to switch fetching the total number of
            Business Partners to improve performance. By default turned on.

            * `USE_NEXT_START_AFTER` - Allows to automatically calculate
            pagination indicator in `nextStartAfter` field. By default turned
            off.
          in: query
          schema:
            type: array
            items:
              x-apimatic-facade: '#/components/schemas/BusinessPartnersReadFeatureParam'
              $ref: '#/components/schemas/BusinessPartnersReadFeatureParam'
        - name: validationLogResultStatus
          in: query
          required: false
          description: |
            Violation level of validation result.
          schema:
            type: array
            items:
              x-apimatic-facade: '#/components/schemas/ValidationLevelParam'
              $ref: '#/components/schemas/ValidationLevelParam'
        - name: validationSharingLogResultStatus
          in: query
          required: false
          description: |
            Violation level of sharing validation result.
          schema:
            type: array
            items:
              x-apimatic-facade: '#/components/schemas/ValidationLevelParam'
              $ref: '#/components/schemas/ValidationLevelParam'
        - name: curationLogResultStatus
          in: query
          required: false
          description: |
            Curation log of curation result.
          schema:
            type: array
            items:
              x-apimatic-facade: '#/components/schemas/CurationLevelParam'
              $ref: '#/components/schemas/CurationLevelParam'
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: reviewStatus
          in: query
          required: false
          description: |
            Review status used for filtering the result data.
          schema:
            x-apimatic-facade: '#/components/schemas/ReviewStatusParam'
            $ref: '#/components/schemas/ReviewStatusParam'
        - name: fromJobProcessedAt
          in: query
          required: false
          schema:
            type: string
          example: '2022-04-04T12:44:03.240Z'
          description: >-
            Returns the results which have one of the log result status ->
            jobProcessedAt after given date. The given date should support
            ISO-8601 representation.
        - name: toJobProcessedAt
          in: query
          required: false
          schema:
            type: string
          example: '2022-04-04T12:44:03.240Z'
          description: >-
            Returns the results which have one of the log result status ->
            jobProcessedAt before given date. The given date should support
            ISO-8601 representation.
        - name: fromTriggerProcessedAt
          in: query
          required: false
          schema:
            type: string
          example: '2022-04-04T12:44:03.240Z'
          description: >-
            Returns the results which have one of the log result status ->
            triggerProcessedAt after given date. The given date should support
            ISO-8601 representation.
        - name: toTriggerProcessedAt
          in: query
          required: false
          schema:
            type: string
          example: '2022-04-04T12:44:03.240Z'
          description: >-
            Returns the results which have one of the log result status ->
            triggerProcessedAt before given date. The given date should support
            ISO-8601 representation.
        - name: logResultTriggerType
          in: query
          required: false
          schema:
            type: array
            items:
              x-apimatic-facade: >-
                #/components/schemas/ProcessingLogResultStatusTriggerTypeTechnicalKeyParam
              $ref: >-
                #/components/schemas/ProcessingLogResultStatusTriggerTypeTechnicalKeyParam
          description: >
            Trigger type used for filtering the result which should match with
            at least one of any log result status -> triggerType fields.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPartnerPage'
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
    put:
      x-public: true
      x-wsdl: true
      tags:
        - Business Partners
      summary: Upsert Business Partners
      description: >
        Upsert business partners in a business partner storage in batches.
        Maximum of 1000 business partners are allowed per batch.


        If no data source (via field: `dataSource`) is provided and the storage
        has only one, than this data source will be used/set. Other options are
        to provide an

        existing data source in the request, which will then be taken for all
        the business partner or to provide a data source for each business
        partner

        individually.


        In the following cases an API error will be thrown:
          1) given data source in the Request or the BusinessPartner is unknown
          2) no data source given and more than one data source is attached to the storage

        To start upserting business partners into a storage, use the following
        request.


        ```

        PUT
        https://api.corporate-data-league.ch/data-exchange/rest/v4/storages/{YOUR
        STORAGE ID}/businesspartners

        {
          "dataSource": "{YOUR DATA SOURCE}",
          "featuresOn": ["UPSERT_BY_EXTERNAL_ID"],
          "businessPartners": [
           {
             "externalId": "123",
             "record": "{\"MyId\":\"123\", \"City\":\"St. Gallen\"}"
           }]
        }

        ```


        The response is shown below.


        ```

        {
           "numberOfAccepted": "1",
           "numberOfFailed": "0",
        }


        ```


        Upserting business partners enables automated data transformation from
        the `record` field to the business partner model.

        It requires a data mapper definition and assigned to
        `dataMapperDefinitionId` field

        of a data source business partner is being upserted to.


        `record` field requires stringified JSON. Characters: backslash `\` and
        double quote `"` must be escaped (respectively: `\\\\` and `\"`). Fields
        containing `.` are unallowed."


        To enable automated data transformation, one of the following features
        is required:

        - TRANSFORM_RECORD - synchronous transformation, limited for batch size
        <= 250,

        - ENABLE_ASYNC - asynchronous transformation. Enabled by default when
        TRANSFORM_RECORD is not requested.


        Automated data transformation can be executed together with the
        UPSERT_BY_EXTERNAL_ID feature,

        but it requires to provide external ID as a field `externalId` of a
        business partner,

        which is preserved during the transformation.


        If there is no name typed
        [LOCAL](https://meta.cdq.com/Business_partner/name/type/local) in
        `businessPartner.names`

        and exists any name with empty type or not filled `type.technicalKey`,
        it becomes name of type LOCAL.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessPartnersUpsertRequest'
            examples:
              Example1:
                summary: Single record update
                value:
                  dataSource: YOUR_DATASOURCE_ID
                  featuresOn:
                    - UPSERT_BY_EXTERNAL_ID
                  businessPartners:
                    - externalId: YOUR_EXTERNAL_ID
                      record: >-
                        {"Customer number":"YOUR_EXTERNAL_ID",
                        "Name":"COMPANY_NAME", "Country":"COUNTRY_CODE",
                        "City":"CITY", "Street":"STREET", "Postal
                        code":"POSTAL_CODE"}
              Example2:
                summary: Update the City of the Business Partner
                value:
                  dataSource: YOUR_DATASOURCE_ID
                  featuresOn:
                    - UPSERT_BY_EXTERNAL_ID
                  businessPartners:
                    - externalId: '123'
                      record: '{"MyId":"123", "City":"St. Gallen"}'
              Example3:
                summary: Full request example
                value:
                  dataSource: string
                  businessPartners:
                    - id: string
                      externalId: string
                      dataSource: string
                      disclosed: true
                      updateMonitoring: true
                      record: '{}'
                      additionalInformation:
                        - key: KEY
                          value: 1
                      names:
                        - type:
                            url: string
                            name: string
                            technicalKey: string
                          value: string
                          shortName: string
                          language:
                            name: German
                            technicalKey: DE
                      legalForm:
                        name: string
                        url: >-
                          https://meta.cdq.com/Business_partner/legal_form/technical_key/DE_9866
                        technicalKey: DE_9866
                        language:
                          name: German
                          technicalKey: DE
                        mainAbbreviation: string
                      identifiers:
                        - type:
                            url: string
                            name: string
                            technicalKey: string
                          value: string
                          issuingBody:
                            name: string
                            url: string
                            technicalKey: string
                          status:
                            name: string
                            technicalKey: string
                      categories:
                        - name: string
                          url: string
                          technicalKey: string
                      status:
                        type:
                          name: string
                          url: string
                          technicalKey: string
                        officialDenotation: string
                        validFrom: string
                        validUntil: string
                      profile:
                        minorityIndicator:
                          value: string
                        classifications:
                          - value: string
                            code: string
                            type:
                              name: string
                              url: string
                              technicalKey: string
                        phoneNumbers:
                          - countryPrefix: string
                            number: string
                            type:
                              name: string
                              url: string
                              technicalKey: string
                            value: string
                        websites:
                          - url: string
                            type:
                              name: string
                              url: string
                              technicalKey: string
                        contactEmails:
                          - value: string
                      relations:
                        - startedAt: 2019-08-31T16:47+00:00
                          endedAt: 2019-08-31T16:47+00:00
                          type:
                            name: Organizational Unit
                            technicalKey: BRANCH
                          class:
                            name: CDQ Hierarchy
                            technicalKey: BUSINESS_PARTNER_RELATION_CLASS_CDQ_HIERARCHY
                          startNode: FR.RC:5664645
                          startNodeDataSource: string
                          startNodeBusinessPartner:
                            names:
                              - {}
                            addresses:
                              - postCodes: []
                                localities: []
                                thoroughfares: []
                          endNode: FR.RC:5664645
                          endNodeDataSource: string
                          endNodeBusinessPartner:
                            names:
                              - {}
                            addresses:
                              - postCodes: []
                                localities: []
                                thoroughfares: []
                      types:
                        - name: string
                          url: string
                          technicalKey: string
                      addresses:
                        - id: string
                          externalId: string
                          cdqId: string
                          version:
                            language:
                              name: German
                              technicalKey: DE
                            characterSet:
                              name: International
                              technicalKey: INTERNATIONAL
                          identifyingName:
                            value: string
                          careOf:
                            value: string
                          contexts:
                            - value: string
                          country:
                            shortName: CH
                            value: Switzerland
                          administrativeAreas:
                            - value: string
                              shortName: string
                              type: {}
                              language: {}
                          postCodes:
                            - value: string
                              type: {}
                          localities:
                            - type: {}
                              shortName: string
                              value: string
                              language: {}
                          thoroughfares:
                            - type: {}
                              shortName: string
                              number: string
                              value: string
                              name: string
                              direction: string
                              language: {}
                          premises:
                            - value: string
                              shortName: string
                              number: string
                              type: {}
                              language: {}
                          postalDeliveryPoints:
                            - type: {}
                              shortName: string
                              number: string
                              value: string
                              language: {}
                          geographicCoordinates:
                            latitude: 0
                            longitude: 0
                          types:
                            - name: string
                              url: string
                              technicalKey: string
                      bankAccounts:
                        - internationalBankAccountIdentifier: string
                          internationalBankIdentifier: string
                          nationalBankAccountIdentifier: string
                          nationalBankIdentifier: string
                          countryCode: string
                  featuresOn:
                    - FEATURE_1
                  featuresOff:
                    - FEATURE_2
        description: BusinessPartnersUpsertRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPartnersUpsertResult'
  /public/v4/storages/{storageId}/sharingscopes/refresh:
    parameters:
      - name: storageId
        description: Unique ID of a storage
        in: path
        required: true
        schema:
          type: string
  /storages/{storageId}:
    parameters:
      - name: storageId
        description: Unique ID of a storage
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
        - Business Partner Storages
      parameters: []
      summary: Update Storage
      description: Update a storage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessPartnerStorageMetadataUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPartnerStorageMetadata'
          description: OK
    delete:
      x-wsdl: true
      tags:
        - Business Partner Storages
      summary: Delete Storage
      description: Delete a storage
      parameters:
        - name: featuresOn
          in: query
          required: false
          x-hide: true
          schema:
            type: array
            items:
              x-apimatic-facade: '#/components/schemas/StorageDeleteFeatureParam'
              $ref: '#/components/schemas/StorageDeleteFeatureParam'
      responses:
        '200':
          description: OK
  /storages/{storageId}/clear:
    parameters:
      - name: storageId
        description: Unique ID of a storage
        in: path
        required: true
        schema:
          type: string
    post:
      x-wsdl: true
      tags:
        - Business Partner Storages
      summary: Clear Storage
      description: Remove all business partners from given storage.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPartnersClearResult'
          description: OK
  /storages/{storageId}/datamonitors/{dataMonitorId}:
    parameters:
      - name: storageId
        description: Unique ID of a storage
        in: path
        required: true
        schema:
          type: string
      - name: dataMonitorId
        description: Unique ID of a data monitor
        in: path
        required: true
        schema:
          type: string
    delete:
      parameters: []
      tags:
        - Business Partner Storages
      summary: Delete Data Monitor
      description: Delete a data monitor
      responses:
        '201':
          description: OK
  /storages/{storageId}/datasources:
    parameters:
      - name: storageId
        description: Unique ID of business partner storage
        in: path
        required: true
        schema:
          type: string
    post:
      parameters: []
      tags:
        - Business Partner Storages
      summary: Create Data Source
      description: >
        Create a new data source. Max 100 data sources are allowed.


        Warn: If you have an integration with one data source, please check if

        data source id is included in the upsert request before adding a new
        data source.

        Otherwise, adding new data source may lead to upsert failures visible as
        bad request

        containing message "No DataSource was provided for the given business
        partners

        and the storage has more than one attached to it.".
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSourceCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceParam'
          description: OK
        '400':
          description: Bad Request
  /storages/{storageId}/datasources/{dataSourceId}:
    parameters:
      - name: storageId
        description: Unique ID of the business partner storage
        in: path
        required: true
        schema:
          type: string
      - name: dataSourceId
        description: Unique ID of the data source
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
        - Business Partner Storages
      summary: Update Data Source
      description: Update a data source
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSourceUpdate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceUpdateResult'
        '400':
          description: Bad Request
    delete:
      tags:
        - Business Partner Storages
      summary: Delete Data Source
      description: >
        Delete a data source and its dependencies:

        * business partners from a storage,

        * update monitors, data monitors and sharing scopes for that data source
        are adjusted (data source is removed from

        the data sources list of a resource and resource is removed if data
        source was the only one assigned).
      parameters: []
      responses:
        '200':
          description: OK
  /storages/{storageId}/datasources/{dataSourceId}/clear:
    parameters:
      - name: storageId
        description: Unqiue ID of the business partner storage
        in: path
        required: true
        schema:
          type: string
      - name: dataSourceId
        description: Unique ID of the data source
        in: path
        required: true
        schema:
          type: string
    post:
      x-wsdl: false
      x-public: true
      tags:
        - Business Partner Storages
      summary: Clear Data Source
      description: Clear all business partners of a data source
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPartnersDeleteResult'
          description: OK
  /storages/{storageId}/businesspartners/delete:
    post:
      x-wsdl: true
      tags:
        - Business Partners
      summary: Delete Business Partners
      description: >
        Delete batches of business partners by ID or a combination of DataSource
        and External ID. Maximum of 1000 business partners are allowed per
        batch.

        In case only a data source is provided in the request, all business
        partners related to this data source will be delete, but the data source
        itself

        will not be deleted.
      parameters:
        - name: storageId
          in: path
          description: storageId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessPartnersDeleteRequest'
            examples:
              Example1:
                summary: Delete Business Partner Based on External Id
                value:
                  dataSource: YOUR_DATASOURCE_ID
                  businessPartners:
                    - externalId: BP_EXTERNAL_ID
                  featuresOn:
                    - DELETE_BY_EXTERNAL_ID
              Example2:
                summary: Full request body
                value:
                  dataSource: string
                  businessPartners:
                    - id: string
                      externalId: string
                      dataSource: string
                  featuresOn:
                    - DELETE_BY_EXTERNAL_ID
        required: true
        description: cmd
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPartnersDeleteResult'
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /storages/{storageId}/updatemonitors:
    parameters:
      - name: storageId
        description: Unique ID of business partner storage
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
        - Business Partner Storages
      summary: Update Update Monitors
      description: >
        Update all update monitors of a given storage.


        * When a new update monitor without id is added to the list, it is
        created.

        * When existing update monitor is provided on a list with id included,
        it is updated.

        * When update monitor identified by id is not included in a list, it is
        deleted.


        Note: all update monitors that are expected to remain in the storage
        must be included on a list.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMonitorUpserts'
            examples:
              Example1:
                summary: Update sigle Update Monitor
                value:
                  updateMonitors:
                    - id: string
                      referenceDataSource: VIES
                      affectedProperties:
                        - MINORITY_INDICATOR_VALUE
                      affectedDataSourceIds:
                        - string
              Example2:
                summary: Update multiple Update Monitors
                value:
                  updateMonitors:
                    - id: YOUR_DATA_MONITOR_ID
                      referenceDataSource: PL_NOBR
                      affectedProperties: []
                      affectedDataSourceIds:
                        - YOUR_DATASOURCE_ID
                    - id: YOUR_DATA_MONITOR_ID
                      referenceDataSource: VIES
                      affectedProperties: []
                      affectedDataSourceIds:
                        - YOUR_DATASOURCE_ID
                    - id: YOUR_DATA_MONITOR_ID
                      referenceDataSource: CDQ_POOL
                      affectedProperties: []
                      affectedDataSourceIds:
                        - YOUR_DATASOURCE_ID
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMonitorUpsertsResult'
          description: OK
  /storages/{storageId}/businesspartners/toggleUpdateMonitoring:
    parameters:
      - name: storageId
        in: path
        required: true
        schema:
          type: string
        description: storageId
    put:
      tags:
        - Business Partners
      summary: Toggle Update Monitoring of Business Partners
      description: >
        To toggle update monitoring on multiple BusinessPartners, the permission
        can be changed

        via a list of Business Partners, identified by their ID.


        After the job is finished, the following actions are taken for business
        partners which match the businessPartnerIds criteria:

        * businessPartner.updateMonitoring fields takes a value of
        ToggleUpdateMonitoringJobRequest#enable

        * if enable is true then:
          * an attempt is taken to find business partner in all configured [update monitors for reference data sources](#/rest/api-endpoints/business-partner-storages/update-update-monitors) and links are created if matches are found via defined [linkage strategies](https://meta.cdq.com/Feature/Business_Partner_Update_Monitoring)
          * if the storage has UPDATES feature enabled, updates for linked business partners from reference data sources are propagated to [business partner updates](#/rest/api-endpoints/business-partners/read-business-partner-updates)
        * if enable is false then:
          * all existing links of a business partner to business partners in reference data sources are removed
          * updates are no more propagated for this business partner
          * linkage is not performed for any reference data source

        For toggling a complete Data Source or for a certain Country of a Data
        Source,

        please go to [Start Toggle Update Monitoring
        Job](#/rest/api-endpoints/business-partners/start-toggle-update-monitoring-job).
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToggleUpdateMonitoringRequest'
        required: true
      responses:
        '204':
          description: OK
  /jobs/toggleUpdateMonitoringJobs:
    post:
      x-wsdl: false
      tags:
        - Business Partners
      summary: Start Toggle Update Monitoring Job
      description: >
        To toggle update monitoring on multiple BusinessPartners, the permission
        can be changed in two ways:


        1. A complete Data Source identified by the parameter 'dataSourceId'

        2. Or for a certain Country of a Data Source. This requires both
        parameters 'dataSourceId' and 'countryShortName' to be set


        After the job is finished, the following actions are taken for business
        partners which match the dataSourceId and countryShortName criteria:

        * businessPartner.updateMonitoring fields takes a value of
        ToggleUpdateMonitoringJobRequest#enable

        * if enable is true then:
          * an attempt is taken to find business partner in all configured [update monitors for reference data sources](#/rest/api-endpoints/business-partner-storages/update-update-monitors) and links are created if matches are found via defined [linkage strategies](https://meta.cdq.com/Feature/Business_Partner_Update_Monitoring)
          * if the storage has UPDATES feature enabled, updates for linked business partners from reference data sources are propagated to [business partner updates](#/rest/api-endpoints/business-partners/read-business-partner-updates)
        * if enable is false then:
          * all existing links of a business partner to business partners in reference data sources are removed
          * updates are no more propagated for this business partner
          * linkage is not performed for any reference data source

        For toggling via a list of Business Partners, identified by their ID,
        please go to [Toggle Update Monitoring of Business
        Partners](#/rest/api-endpoints/business-partners/toggle-update-monitoring-of-business-partners).
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToggleUpdateMonitoringJobRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToggleUpdateMonitoringJob'
  /jobs/toggleUpdateMonitoringJobs/{jobId}:
    get:
      x-wsdl: false
      tags:
        - Business Partners
      summary: Poll Toggle Update Monitoring Job
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
          description: jobId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToggleUpdateMonitoringJobResult'
  /jobs/importjobs:
    post:
      x-wsdl: true
      tags:
        - Data Import
      summary: Start Import Job
      description: >
        To start importing a file into a storage, use the following request.


        ```

        POST
        https://api.corporate-data-league.ch/data-exchange/rest/jobs/importjobs
          ?file=@{YOUR FILE}
          ?storageId={YOUR STORAGE ID}
          ?dataSource={YOUR DATASOURCE ID}
        ```


        Fields (cells) in a file, that contain a special character (comma,
        semicolon, CR, LF, or double quote), must be "escaped" by enclosing them
        in double quotes. Header names can not contain any dot.


        In order to successfully perform file upload use file upload for `files`
        up to 10MB or Upload via Upload Request approach for `files` larger than
        10MB. `file` and `url` are not allowed to be present together.


        Use one of the below instructions for your case:

        1) File size < 10MB : [File
        Upload](https://developer.cdq.com/documentation/instructions/uploading-cvs-xls-data/)

        2) File size > 10MB : [Request
        Upload](https://developer.cdq.com/documentation/instructions/url-upload/)


        Including this sample CSV file in the default configuration.


        ```

        Customer Number;City

        123;St. Gallen

        ```


        Supported columns (matched by ignoring letter case) with their mappings
        are the following:


        | Column Name | Target Path in the latest Business Partner Model | Wiki
        Page of Attribute in CDQ Data Model |

        | ------- | -------- | -------- |

        | CUSTOMER NUMBER | $.externalId | [Business Partner External
        ID](https://meta.cdq.com/Business_partner/external_id) |

        | VENDOR NUMBER | $.externalId when `CUSTOMER NUMBER` is not available |
        [Business Partner External
        ID](https://meta.cdq.com/Business_partner/external_id) |

        | NAME | $.names\[0\].value, $.names\[0\].type.technicalKey =
        [LOCAL](https://meta.cdq.com/Business_partner/name/type/local) |
        [Business Partner Name
        Value](https://meta.cdq.com/Business_partner/name/value) |

        | TAX NUMBER 1 | $.identifiers\[identifierId\].value in identifierId of
        `TAX NUMBER 1 TYPE` if exists, otherwise, new identifier of
        [STCD1](https://meta.cdq.com/Data_source/SAP.FLAT/data_model/RECORD/STCD1)
        type mapping, applied for `COUNTRY` | [Identifier
        Value](https://meta.cdq.com/Business_partner/identifier/value) |

        | TAX NUMBER 1 TYPE | $.identifiers\[identifierId\].type | [Identifier
        Type](https://meta.cdq.com/Business_partner/identifier/type) |

        | TAX NUMBER 2 | $.identifiers\[identifierId\].value in identifierId of
        `TAX NUMBER 2 TYPE` if exists, otherwise, new identifier of
        [STCD2](https://meta.cdq.com/Data_source/SAP.FLAT/data_model/RECORD/STCD2)
        type mapping, applied for `COUNTRY` | [Identifier
        Value](https://meta.cdq.com/Business_partner/identifier/value) |

        | TAX NUMBER 2 TYPE | $.identifiers\[identifierId\].type | [Identifier
        Type](https://meta.cdq.com/Business_partner/identifier/type) |

        | TAX NUMBER 3 | $.identifiers\[identifierId\].value in identifierId of
        `TAX NUMBER 3 TYPE` if exists, otherwise, new identifier of
        [STCD3](https://meta.cdq.com/Data_source/SAP.FLAT/data_model/RECORD/STCD3)
        type mapping, applied for `COUNTRY` | [Identifier
        Value](https://meta.cdq.com/Business_partner/identifier/value) |

        | TAX NUMBER 3 TYPE | $.identifiers\[identifierId\].type | [Identifier
        Type](https://meta.cdq.com/Business_partner/identifier/type) |

        | TAX NUMBER 4 | $.identifiers\[identifierId\].value in identifierId of
        `TAX NUMBER 4 TYPE` if exists, otherwise, new identifier of
        [STCD4](https://meta.cdq.com/Data_source/SAP.FLAT/data_model/RECORD/STCD4)
        type mapping, applied for `COUNTRY` | [Identifier
        Value](https://meta.cdq.com/Business_partner/identifier/value) |

        | TAX NUMBER 4 TYPE | $.identifiers\[identifierId\].type | [Identifier
        Type](https://meta.cdq.com/Business_partner/identifier/type) |

        | TAX NUMBER 5 | $.identifiers\[identifierId\].value in identifierId of
        `TAX NUMBER 5 TYPE` if exists, otherwise, new identifier of
        [STCD5](https://meta.cdq.com/Data_source/SAP.FLAT/data_model/RECORD/STCD5)
        type mapping, applied for `COUNTRY` | [Identifier
        Value](https://meta.cdq.com/Business_partner/identifier/value) |

        | TAX NUMBER 5 TYPE | $.identifiers\[identifierId\].type | [Identifier
        Type](https://meta.cdq.com/Business_partner/identifier/type) |

        | VAT NUMBER | $.identifiers\[identifierId\].value in identifierId of
        `VAT NUMBER TYPE` if exists, otherwise, new identifier of
        [STCEG](https://meta.cdq.com/Data_source/SAP.FLAT/data_model/RECORD/STCEG)
        type mapping, applied for `COUNTRY` | [Identifier
        Value](https://meta.cdq.com/Business_partner/identifier/value) |

        | VAT NUMBER TYPE | $.identifiers\[identifierId\].type | [Identifier
        Type](https://meta.cdq.com/Business_partner/identifier/type) |

        | COUNTRY | address.country.(value, shortName) in $.addresses\[0\] (+ in
        $.addresses\[1\] when `PO BOX` exists for non-France) |
        [Country](https://meta.cdq.com/Address/country) |

        | REGION | address.administrativeAreas\[0\].value in $.addresses\[0\] (+
        in $.addresses\[1\] when `PO BOX` exists for non-France) |
        [Administrative Area
        Value](https://meta.cdq.com/Address/administrative_area/value) |

        | POSTAL CODE | address.postCodes\[0\].value in $.addresses\[0\] (+ in
        $.addresses\[1\] when `PO BOX` exists for non-France) | [Post Code
        Value](https://meta.cdq.com/Address/post_code/value) |

        | CITY | address.localities\[0\].value in $.addresses\[0\] (+ in
        $.addresses\[1\] when `PO BOX` exists for non-France) | [Locality
        Value](https://meta.cdq.com/Address/locality/value) |

        | STREET | address.thoroughfares\[0\].value | [Thoroughfare
        Value](https://meta.cdq.com/Address/thoroughfare/value) |

        | HOUSE NUMBER | address.thoroughfares\[0\].number | [Thoroughfare
        Number](https://meta.cdq.com/Address/thoroughfare/number) |

        | PO BOX | address.postalDeliveryPoints\[0\].value,
        address.postalDeliveryPoints\[0\].type.technicalKey =
        [POST_OFFICE_BOX](https://meta.cdq.com/Address/postal_delivery_point/type/post_office_box)
        in $.addresses\[0\] in
        [France](https://meta.cdq.com/Address/country/FR), in $.addresses\[1\]
        for non-France | https://meta.cdq.com/Business_partner/external_id |



        Alternatively, CUSTOM_DATA_MAPPER feature can be used to enable record
        transformation based on the data mapper definition

        provided either via a `dataMapperDefinitionId` field or fetched from the
        configuration of provided data source.


        Input file could contain customized columns naming effectively mapped to
        the business partner model via data mapper, shown in this sample CSV.


        ```

        MyId;Country;City;Name

        123;CH;St. Gallen;

        124;CH;;Quote "Example"

        "125";"CH";"";"""Quote """"Example""""  """

        ```


        Input file for CUSTOM_DATA_MAPPER feature can also contain only one
        `Record` column with a stringified JSON representation of a record.

        Based on the data mapper definition, data is transformed to the business
        partner model.

        In case UPSERT_BY_EXTERNAL_ID feature is used, external ID value needs
        to be included:

        * in a column which name is provided via a `extenalIdColumn` request
        property

        * in the JSON representation in the attribute mapped to externalId via
        data mapper


        Below is the sample CSV file for `Record`-based configuration containing
        external ID column named MyId.


        ```

        MyId,Record

        123,"{""MyId"": ""123"", ""Country"": ""CH"", ""City"": ""St. Gallen""}"

        124,"{""MyId"": ""124"", ""Country"": ""CH"", ""Name"": ""Quote
        \""Example\""""}"

        125,"{""MyId"": ""125"", ""Country"": ""CH"", ""Name"": ""\""Quote
        \""\""Example\""\""  \""""}"

        ```


        The maximum number of columns is 512


        The response is shown below. Use the returned `id` to
        [poll](#/rest/api-endpoints/data-import/poll-import-job) the import job
        status.


        ```

        {
            "id" : "{YOUR IMPORT JOB ID}"
            ...
        }

        ```


        These imports, in default import samples, lead to the following business
        partners in the storage. The imported rows are represented as
        stringified JSONs.


        ```

        {
           "id" : "{AUTO GENERATED}",
           "externalId" : "123",
           "dataSource": "{YOUR DATASOURCE ID}",
           "record" : "{ \"MyId\" : \"123\", \"Country\" : \"CH\", \"City\" : \"St. Gallen\" }",
           "addresses": [{
              "country": {
                 "shortName": "CH"
              },
              "localities": [{
                 "value": "St. Gallen"
              }]
           }],
           ...
        },

        {
           "id" : "{AUTO GENERATED}",
           "externalId" : "124",
           "dataSource": "{YOUR DATASOURCE ID}",
           "record" : "{ \"MyId\" : \"124\", \"Country\" : \"CH\", \"Name\" : \"Quote \\\"Example\\\"\" }",
           "names": [{
              "value": "Quote \"Example\""
              ...
           }],
           "addresses": [{
              "country": {
                 "shortName": "CH"
              }
           }],
           ...
        },

        {
           "id" : "{AUTO GENERATED}",
           "externalId" : "125",
           "dataSource": "{YOUR DATASOURCE ID}",
           "record" : "{ \"MyId\" : \"125\", \"Country\" : \"CH\", \"Name\" : \"\\\"Quote \\\"\\\"Example\\\"\\\"  \\\"\" }",
           "names": [{
              "value": "\"Quote \"\"Example\"\"  \""
              ...
           }],
           "addresses": [{
              "country": {
                 "shortName": "CH"
              }
           }],
           ...
        }

        ```
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  description: >-
                    XLSX or CSV file to be uploaded (SOAP currently only
                    supports CSV). Supports up to 10MB of file size. For the
                    file size greater than 10MB use Upload via Upload Request
                    approach.
                  type: string
                  format: binary
                url:
                  type: string
                  description: >-
                    Url to file which will be used to import data from.
                    Recommended. The file can be uploaded via [File
                    Upload](#/rest/api-endpoints/files/request-file-upload)
                    passing through `url` from the result object.
                  example: customer-uploads/CH-import.csv
                storageId:
                  description: Target storage ID for this import
                  type: string
                dataSource:
                  description: Target data source ID for this import
                  type: string
                externalIdColumn:
                  description: >-
                    The name of the column which will be mapped to external ID.
                    This is required if feature UPSERT_BY_EXTERNAL_ID is
                    enabled.
                  type: string
                dataMapperDefinitionId:
                  description: >-
                    The ID of data mapper to be used to transform the data
                    before importing it. This or a data source is required if
                    feature CUSTOM_DATA_MAPPER is enabled. Disabled when
                    CUSTOM_DATA_MAPPER feature is not provided in a request.
                  type: string
                featuresOn:
                  description: |
                    Feature(s) to be used during the import job:
                     * `ACCEPT_EMPTY_VALUES` - Allows to import empty values to record in business partner.
                     * `UPSERT_BY_EXTERNAL_ID` - Updates a business partners identified by external ID instead of an insert if the external ID is already present in this storage. If this feature is selected, `dataSource` and `externalIdColumn` are mandatory. When selected, id must not be provided in a business partner.
                     * `FULL_UPDATE` - Forces the job to delete existing records which are not included in the import file. Records to be updated or to be deleted are identified by external IDs, i.e. not by the internal database IDs. To confirm this understanding, UPSERT_BY_EXTERNAL_ID feature must be activated in addition. When a FULL_UPDATE import job is completed, new records from the import file are created, existing ones are updated by keeping their internal database IDs and their external IDs, and records which are not provided by the file are deleted. If this feature is selected, dataSource and `UPSERT_BY_EXTERNAL_ID` feature are mandatory. Whenever import errors occur then this action is not executed.
                     * `CUSTOM_DATA_MAPPER` - Applies data transformation using data mapper identified by `dataMapperDefinitionId` field or fetched from the data source identified by `dataSource` field.
                  type: array
                  items:
                    type: string
                    enum:
                      - ACCEPT_EMPTY_VALUES
                      - UPSERT_BY_EXTERNAL_ID
                      - CUSTOM_DATA_MAPPER
                      - FULL_UPDATE
                      - LAB_USE_QUEUES
                batchSize:
                  x-hide: true
                  type: integer
                  minimum: 250
                  maximum: 1000
                  description: Defines the number of records that are processed at once.
              required:
                - storageId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportJob'
  /jobs/importjobs/{jobId}:
    get:
      x-wsdl: true
      tags:
        - Data Import
      summary: Poll Import Job
      parameters:
        - $ref: '#/components/parameters/skippedStartAfterQueryParam'
        - name: jobId
          in: path
          required: true
          schema:
            type: string
          description: jobId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportJob'
  /businesspartnerreports:
    post:
      x-wsdl: false
      x-public: true
      summary: Build Business Partner Reports
      tags:
        - Analytics
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPartnerReports'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessPartnerReportsRequest'
            examples:
              Example1:
                summary: Full example
                value:
                  storageId: string
                  reportsConfiguration:
                    subscription:
                      build: false
                      countryShortNames:
                        - DE
                      dataSource: string
                      provenanceTechnicalKeys:
                        - LEI
                        - VIES
                      featuresOn:
                        - FETCH_VALIDATION_RESULTS
                    updates:
                      build: false
                      from: 2019-12-31T08:35
                      to: 2019-12-31T16:47
                      dataSourceIds:
                        - string
                        - string
                      countryShortNames:
                        - PL
                        - DE
                        - CZ
                        - SK
                      provenanceTechnicalKeys:
                        - ORGANIZATION
                        - DATA_SHARING_REVIEW
                        - LEI
                        - VIES
                      propertyChangeTypeTechnicalKeys:
                        - ADDED
                        - MODIFIED
                        - DELETED
                      affectedConceptTechnicalKeys:
                        - NAME
                        - ADDRESS
                        - IDENTIFIER
              Example2:
                summary: Generate Update Report
                value:
                  storageId: YOUR_STORAGE_ID
                  reportsConfiguration:
                    updates:
                      build: true
                      from: START_DATE
                      to: END_DATE
                      dataSourceIds:
                        - YOUR_DATASOURCE_ID
                      countryShortNames:
                        - CH
                      propertyChangeTypeTechnicalKeys:
                        - ADDED
                        - MODIFIED
                        - DELETED
                      affectedConceptTechnicalKeys:
                        - NAME
                        - ADDRESS
                        - IDENTIFIER
              Example3:
                summary: Generate Subscription Report
                value:
                  storageId: YOUR_STORAGE_ID
                  reportsConfiguration:
                    subscription:
                      build: true
                      countryShortNames:
                        - CH
                      dataSource: YOUR_DATASOURCE_ID
                      provenanceTechnicalKeys:
                        - VIES
        description: BusinessPartnerReportsRequest
        required: true
  /businesspartnerreports/{id}:
    get:
      x-wsdl: false
      x-public: true
      summary: Poll Business Partner Reports
      tags:
        - Analytics
      parameters:
        - name: id
          in: path
          description: ID of the business partner reports job
          example: null
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPartnerReports'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /storagedumpreports:
    post:
      x-wsdl: false
      x-public: true
      summary: Build Storage Dump Reports
      description: >
        Build storage dump reports.

        Validation of the request can be found in description of
        StorageDumpReportsRequest below.
      tags:
        - Analytics
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageDumpReportsRequest'
        description: >
          StorageDumpReportsRequest

          Request requirements:

          * expect that either storadeDumpReport or dnbDumpReport has build =
          true, never both together

          * expect that storageId is not provided when dnbDumpReport has build =
          true
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageDumpReports'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /storagedumpreports/{id}:
    get:
      x-wsdl: false
      x-public: true
      summary: Poll Storage Dump Reports
      tags:
        - Analytics
      parameters:
        - name: id
          in: path
          description: ID of the storage dump reports job
          example: null
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageDumpReports'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /technicalreports:
    post:
      x-wsdl: false
      x-public: true
      summary: Build Technical Reports
      tags:
        - Analytics
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TechnicalReportsRequest'
        description: TechnicalReportsRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TechnicalReports'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /technicalreports/{id}:
    get:
      x-wsdl: false
      x-public: true
      summary: Poll Technical Reports
      tags:
        - Analytics
      parameters:
        - name: id
          in: path
          description: ID of the technical reports job
          example: null
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TechnicalReports'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /files/upload:
    post:
      x-public: true
      tags:
        - Files
      summary: Request file upload
      description: >-
        Create a file in the file storage using the url provided. Maximum
        allowed file size is 5GB.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadResult'
  /files:
    delete:
      x-public: true
      tags:
        - Files
      summary: Request files delete
      description: Delete files in the customer-uploads directory using the provided urls
      parameters:
        - name: url
          in: query
          required: true
          schema:
            type: array
            minItems: 1
            items:
              type: string
              description: File to delete from customer-uploads/ directory
              example: dq-chart.png or requestedDirectory/dq-chart.png
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileDeleteResponse'
  /files/resources:
    get:
      tags:
        - Files
      summary: List of All Resources for Specific URL Path
      description: >-
        Returns list of all resources which are available at the specific url
        path
      parameters:
        - name: url
          in: query
          description: Path of requested directory for which resources should be listed
          example: requestedDirectory/ or requestedDirectory/otherDirectory
          schema:
            type: string
        - name: startAfter
          in: query
          description: >-
            Continuation token. Encoded s3 path from which listing resources
            should be started
          example: >-
            1XUzntG%2FKE%2B5IN08GrJQgKin9OblLzlorehkIs1xlj46yyCktx%2FsZrQeTh2FvBKOLLB%2Fu%2F32Ow%2BRJfLUjMqi6gGGjsAQRPZ4u
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Allowed maximum elements
          required: false
          schema:
            type: integer
            minimum: 1
            format: int32
            default: 300
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcesListResult'
  /files/download:
    post:
      x-public: true
      tags:
        - Files
      summary: Request a File Download
      description: Download file from CDQ Cloud
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileDownloadRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileDownloadResult'
  /datamapperdefinitions:
    post:
      tags:
        - Data Mapping
      summary: Create Data Mapper Definition
      description: >
        Create a data mapper definition which is used to map data (i.e. in the
        format from the database) to the CDQ data model.


        Data mapper definition consists of:

        * `inputMapping` - definition how to map `businessPartner.record` to CDQ
        data model

        * `outputMapping` - definition how to map CDQ data model to the target
        model


        Business partner can be mapped via `businessPartnerAttributeMappings`.

        The following values of [attribute mapping
        rules](#/rest/models/structures/attribute-mapping-rule):


        - as targetAttributes for inputMapping

        - as sourceAttributes for outputMapping (please remember they are case
        sensitive)


        can be mapped to business partner attributes:


        - businessPartner.dataSource

        - businessPartner.externalId

        - businessPartner.disclosed - special attribute. When defined in a
        mapping, takes over the decision for disclosing records in data source
        this data mapper definition is assigned to. When source attribute is
        mapped from record, the mapping takes the value. If the attribute is
        missing, disclosed is set to false.

        - businessPartner.names\[0-10\].value

        - businessPartner.names\[0-10\].shortName

        - businessPartner.names\[0-10\].language

        - businessPartner.names\[0-10\].type

        - businessPartner.names

        - businessPartner.legalForm.name

        - businessPartner.categories

        - businessPartner.identifiers\[0-49\].value

        - businessPartner.identifiers\[0-49\].type

        - businessPartner.identifiers\[0-49\].issuingBody

        - businessPartner.identifiers\[0-49\].status

        - businessPartner.identifiers


        The index of typed concepts: names and identifiers, is not a final
        position of concept in the CDQ data model - this is a grouping indicator
        for a set of concept properties.


        In Names mapping, in case none of names is typed
        [LOCAL](https://meta.cdq.com/Business_partner/name/type/local)

        and exists any name with empty type or not filled type.technicalKey, it
        becomes name of type LOCAL.


        Addresses can be mapped via `addressesAttributeMappings`. Address
        receives `id` property coming from an index of the collection of
        AttributeMappingRules.

        The following values of [attribute mapping
        rules](#/rest/models/structures/attribute-mapping-rule)


        - as targetAttributes for inputMapping

        - as sourceAttributes for outputMapping


        can be mapped to address attributes:


        - address.externalId

        - address.version.language

        - address.version.characterSet

        - address.careOf.value

        - address.identifyingName.value

        - address.country.value

        - address.country.shortName

        - address.administrativeAreas

        - address.administrativeAreas\[0-4\].value

        - address.administrativeAreas\[0-4\].shortName

        - address.administrativeAreas\[0-4\].type

        - address.postCodes

        - address.postCodes\[0-4\].value

        - address.postCodes\[0-4\].type

        - address.localities

        - address.localities\[0-4\].value

        - address.localities\[0-4\].shortName

        - address.localities\[0-4\].type

        - address.thoroughfares

        - address.thoroughfares\[0-4\].value

        - address.thoroughfares\[0-4\].shortName

        - address.thoroughfares\[0-4\].number

        - address.thoroughfares\[0-4\].type

        - address.premises

        - address.premises\[0-4\].value

        - address.premises\[0-4\].shortName

        - address.premises\[0-4\].number

        - address.premises\[0-4\].type

        - address.postalDeliveryPoints

        - address.postalDeliveryPoints\[0-4\].value

        - address.postalDeliveryPoints\[0-4\].shortName

        - address.postalDeliveryPoints\[0-4\].number

        - address.postalDeliveryPoints\[0-4\].type

        - address.geographicCoordinates.latitude

        - address.geographicCoordinates.longitude

        - address.contexts

        - address.contexts\[0-4\]
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/DataMapperDefinitionRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataMapperDefinition'
    get:
      tags:
        - Data Mapping
      summary: Read Data Mapper Definition Page
      parameters:
        - $ref: '#/components/parameters/labelsQueryParam'
        - $ref: '#/components/parameters/sharedWithOrganizationParam'
        - $ref: '#/components/parameters/pageQueryParam'
        - $ref: '#/components/parameters/pageSizeQueryParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataMapperDefinitionPage'
  /datamapperdefinitions/{id}:
    get:
      tags:
        - Data Mapping
      summary: Read Data Mapper Definition
      parameters:
        - name: id
          in: path
          description: Unique ID of the data mapper definition
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataMapperDefinition'
    put:
      tags:
        - Data Mapping
      summary: Update Data Mapper Definition.
      description: >-
        Update Data Mapper Definition. For more information what are the allowed
        Data Mapper values, go to [creation
        endpoint](#/rest/api-endpoints/data-mapping/create-data-mapper-definition)
        description.
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/DataMapperDefinitionRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataMapperDefinition'
    delete:
      tags:
        - Data Mapping
      summary: Delete Data Mapper Definition
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /jobs/transformationjobs:
    post:
      tags:
        - Data Transformation
      summary: Start Transformation Job
      description: >-
        Starting a Transformation Job. In case any selected data source does not
        have a `dataMappingDefinition` an API error returned.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransformationJobRequest'
        description: cmd
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformationJob'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /jobs/transformationjobs/{id}:
    get:
      tags:
        - Data Transformation
      summary: Poll Transformation Job
      description: >
        After you have started a  transformation job, you will receive a job id
        in the response.

        ```

        {
          "id" : "<ID>"
        }

        ```


        Use this ID to poll for the status of the job using this endpoint. Once
        the status is FINISHED the transformation is done and you are able to
        verify the result in your storage.
      parameters:
        - name: id
          in: path
          description: ID of the transformation job
          example: null
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformationJob'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /businesspartners/subscriptions:
    get:
      x-wsdl: false
      x-hide: true
      tags:
        - Subscriptions
      summary: Read Subscriptions
      description: >-
        Reads a page of subscription of the users organization starting from the
        ID 'startAfter' and with a size of 'limit'
      parameters:
        - $ref: '#/components/parameters/startAfterQueryParam'
        - $ref: '#/components/parameters/limitQueryParam'
        - name: referenceDataSource
          in: query
          required: false
          schema:
            type: string
          description: >-
            Reference data source (e.g. CDQ.POOL) as ALEI prefix of the
            subscribed business partner used to filter the result of
            subscriptions returned.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPage'
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /businesspartners/subscriptions/fetchSubscription:
    post:
      x-wsdl: false
      tags:
        - Subscriptions
      summary: Read Subscription
      description: >-
        Reads a subscription related to the users organization and the given CDQ
        ID
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchSubscriptionRequest'
        required: true
        description: The CDQ ID for which the subscription should be read.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v2/storages:
    get:
      tags:
        - Business Partner Storages
      summary: List Storages
      parameters:
        - $ref: '#/components/parameters/startAfterQueryParam'
        - $ref: '#/components/parameters/limitQueryParam'
        - name: label
          in: query
          description: >-
            Filter the result by the given label. Keep in mind that labels are
            case sensitive.
          required: false
          schema:
            type: string
        - name: includeSharedStorages
          in: query
          description: >-
            Optionally extend the result with metadata for storages that have
            been shared by other users of your organization.
          required: false
          schema:
            type: boolean
            default: false
        - name: sort
          in: query
          example: '-createdAt'
          description: >-
            Defines the attributes to sort by. Supported attributes are 'id',
            'name' and 'createdAt', separated by comma (,) and the sort
            direction in front of each attribute. '+' means ascending, '-' means
            descending. Default sort, if direction is not given, is ascending.
          required: false
          schema:
            type: string
        - name: dataMonitorTypeTechnicalKey
          in: query
          x-hide: true
          description: >-
            Filter the result and Data Monitors by the given Type Technical Key
            of Data Monitor.
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/DataMonitorTypeTechnicalKeyEnum'
              x-apimatic-facade: >-
                https://files.cdq.com/rdoms/rdom-businesspartner-v1.yaml#/components/schemas/DataMonitorTypeTechnicalKeyEnum
        - name: dataMapperDefinitionId
          in: query
          description: Filter the result and Data Sources by Data Mapper Definition ID.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: havingFeatureOn
          in: query
          description: Filter the result by the given feature
          required: false
          x-hide: true
          schema:
            type: array
            items:
              type: string
            maxItems: 1
        - name: featuresOn
          in: query
          description: Features to be turned on.
          required: false
          x-hide: true
          schema:
            type: array
            items:
              x-apimatic-facade: >-
                #/components/schemas/BusinessPartnerStorageMetadataPageReadFeatureParam
              $ref: >-
                #/components/schemas/BusinessPartnerStorageMetadataPageReadFeatureParam
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPartnerStorageMetadataPage'
    post:
      tags:
        - Business Partner Storages
      summary: Create Storage
      description: >-
        If no data source is provided, a minimal data source (name=default and
        without mapping ID) is attached"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessPartnerStorageRequest'
            examples:
              Example:
                summary: Full example
                value:
                  name: string
                  dataMatchingDefinitionId: string
                  dataSources:
                    - dataSourceName: string
                      dataMapperDefinitionId: string
                  featuresOn:
                    - LOOKUP
                  sharedWithOrganization: false
                  labels:
                    - string
              Tutorial:
                summary: Create a storage
                value:
                  name: dataStorageExample
                  dataSources:
                    - dataSourceName: dataSourceExample
                      dataMapperDefinitionId: default
                  featuresOn:
                    - LOOKUP
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPartnerStorageMetadata'
        '400':
          $ref: '#/components/responses/400_BadRequest'
  /v2/storages/{storageId}/datamonitors:
    parameters:
      - name: storageId
        in: path
        required: true
        schema:
          type: string
        description: storageId
    get:
      parameters:
        - $ref: '#/components/parameters/startAfterQueryParam'
        - $ref: '#/components/parameters/limitQueryParam'
        - name: featuresOn
          x-hide: true
          in: query
          schema:
            type: array
            items:
              x-apimatic-facade: '#/components/schemas/DataMonitorsReadFeatureParam'
              $ref: '#/components/schemas/DataMonitorsReadFeatureParam'
      tags:
        - Business Partner Storages
      summary: List Data Monitors
      description: List all data monitors of the give storage
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataMonitorsPage'
          description: OK
    post:
      parameters:
        - name: featuresOn
          in: query
          x-hide: true
          schema:
            type: array
            items:
              x-apimatic-facade: '#/components/schemas/DataMonitorCreateFeatureParam'
              $ref: '#/components/schemas/DataMonitorCreateFeatureParam'
      tags:
        - Business Partner Storages
      summary: Create Data Monitor
      description: >
        Create a new data monitor.


        Data monitors should be unique by a pair: `dataSources` + `type`.


        Data monitor can be created only for storage having
        `sharedWithOrganization` set to true.


        Data monitor is a concept for retrieving processing log results in data
        curation and data validation.


        Available execution types:
          * TRIGGER - causes reevaluation of data whenever CDQ business partner model of your data has changed
                      or whenever linked reference data has changed
          * JOB - reevaluates data every speficied period of time.

        Note: creation of data monitor starts background process that populates
        processing log for all

        business partners from data monitor scope.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataMonitorCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataMonitor'
          description: OK
  /v2/storages/{storageId}/datamonitors/{dataMonitorId}:
    parameters:
      - name: storageId
        description: Unique ID of a storage
        in: path
        required: true
        schema:
          type: string
      - name: dataMonitorId
        description: Unique ID of a data monitor
        in: path
        required: true
        schema:
          type: string
    put:
      parameters: []
      tags:
        - Business Partner Storages
      summary: Update Data Monitor
      description: >
        Note: modification of `configuration.id` or set of `dataSources` starts
        background process

        that populates processing log for all business partners from data
        monitor scope.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataMonitorUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceUpsertsResult'
          description: OK
  /v2/storages/{storageId}/datamonitors/refresh:
    parameters:
      - name: storageId
        description: Unique ID of a storage
        in: path
        required: true
        schema:
          type: string
    post:
      parameters: []
      tags:
        - Business Partner Storages
      summary: Refresh Data Monitors
      description: >
        Refresh Data Monitors. When refreshing data monitor, a reevaluation is
        done

        for all business partners from the data monitor scope.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataMonitorRefreshes'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataMonitorRefreshResults'
          description: OK
  /v2/updatemonitors/referencedatasources:
    get:
      tags:
        - Business Partner Storages
      summary: List Data Sources of Update Monitors
      description: List all data sources available for update monitoring
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMonitorReferenceDataSourcesResult'
  /v3/storages/{storageId}/businesspartners/updateDisclosure:
    parameters:
      - name: storageId
        in: path
        required: true
        schema:
          type: string
        description: storageId
    post:
      tags:
        - Business Partners
      summary: Update Disclosure
      description: >
        To un-/disclose multiple BusinessPartners, the disclosure can be changed
        in three ways:


        1. A complete data source identified by the parameter 'dataSourceId'
        (deprecated - use Sharing Scopes instead. Still applicable, but can be
        overwritten by Sharing Scopes)

        2. Or for a certain country of a data source. This requires both
        parameters 'dataSourceId' and 'countryCode' to be set (deprecated - use
        Sharing Scopes instead. Still applicable, but can be overwritten by
        Sharing Scopes)

        3. Or a list of business partners, identified by their ID. The other
        parameters should be left empty. Note: disclosure set via business
        partner ID can be overwritten by creation or deletion of a Sharing
        Scope.


        Any other combination may result in a Bad Reqeust.


        For more details, you can read about [Sharing
        Scopes](https://www.apimatic.io/api-docs/data-exchange/v/4_0#/rest/api-endpoints/business-partner-storages/create-sharing-scope).
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDisclosureRequest'
        required: true
      responses:
        '200':
          description: OK
  /v4/storages/{storageId}/businesspartners/{id}:
    parameters:
      - name: storageId
        in: path
        required: true
        schema:
          type: string
        description: storageId
    get:
      x-public: true
      tags:
        - Business Partners
      summary: Read Business Partner
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
        - name: featureOn
          in: query
          required: false
          schema:
            type: array
            description: >
              Feature(s) to be used during the read business partner:

              * `APPLY_CURATION_DECISIONS` - Applies curation decisions from
              Decision Log to business partner if any decisions found. By
              default turned off.

              * `FETCH_RECORD` - Allows to switch fetching record field to
              reduce data size. By default turned on.

              * `FETCH_RELATIONS` - Allows to switch fetching relations of
              Business Partners. By default turned off. Only for storages with
              RELATIONS feature enabled
            items:
              x-apimatic-facade: '#/components/schemas/ReadBusinessPartnerFeatureParam'
              $ref: '#/components/schemas/ReadBusinessPartnerFeatureParam'
        - name: featureOff
          in: query
          required: false
          schema:
            type: array
            description: >
              Feature(s) to be used during the read business partner:

              * `APPLY_CURATION_DECISIONS` - Applies curation decisions from
              Decision Log to business partner if any decisions found. By
              default turned off.

              * `FETCH_RECORD` - Allows to switch fetching record field to
              reduce data size. By default turned on.

              * `FETCH_RELATIONS` - Allows to switch fetching relations of
              Business Partners. By default turned off. Only for storages with
              RELATIONS feature enabled
            items:
              x-apimatic-facade: '#/components/schemas/ReadBusinessPartnerFeatureParam'
              $ref: '#/components/schemas/ReadBusinessPartnerFeatureParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPartner'
  /v4/storages/{storageId}/businesspartners/updates:
    parameters:
      - name: storageId
        in: path
        required: true
        schema:
          type: string
        description: storageId
    get:
      x-wsdl: false
      x-public: true
      tags:
        - Business Partners
      summary: Read Business Partners Updates
      description: >
        Example Response:

        ```

        {
          "values": [
            {
              "businessPartner": {
                "id": "123456",
                "externalId": "EXTID-86",
                ...,
                "record": "{<JSON>}"
              },
              "provenances": [
                {
                  "name": "Supplier Gateway",
                  "technicalKey": "SGW"
                }
              ],
              "changeSet": [
                {
                  "modifiedAt": "2007-08-31T16:47",
                  "propertyChanges": [
                    {
                      "newContent": "AAB",
                      "previousContent": "XYZ",
                      "changeType": "MODIFIED",
                      "changeClassification": "MAJOR",
                      "provenance": {
                        "name": "Supplier Gateway",
                        "technicalKey": "SGW"
                      },
                      "property": {
                        "name": "Minority Indicator Value",
                        "contentSelector": "$.profile.minorityIndicator.value",
                        "technicalKey": "MINORITY_INDICATOR_VALUE"
                        "parentConcept": {
                          "name": "Minority Indicator",
                          "technicalKey": "MINORITY_INDICATOR"
                        }
                      }
                    }
                  ],
                  "provenances": [
                    {
                      "name": "Supplier Gateway",
                      "technicalKey": "SGW"
                    }
                  ]
                }
              ]
            }
          ]
        }

        ```


        In typed concepts, like Name, Identifier or Premise, type.technicalKey
        and any non-empty property are required to be filled in order to monitor
        updates.
      parameters:
        - $ref: '#/components/parameters/startAfterQueryParam'
        - $ref: '#/components/parameters/limitQueryParam'
        - name: businessPartnerIds
          in: query
          description: >
            Only show updates for listed business partner IDs.

            When providing list of business partner IDs, limit is ignored to
            provide full page.
          required: false
          schema:
            type: array
            maxItems: 500
            items:
              type: string
        - name: affectedConcepts
          in: query
          description: Only show updates which affected these concepts
          required: false
          schema:
            type: array
            items:
              x-apimatic-facade: '#/components/schemas/BusinessPartnerConceptParam'
              $ref: '#/components/schemas/BusinessPartnerConceptParam'
        - name: affectedProperties
          in: query
          description: Only show updates which affected these properties
          required: false
          schema:
            type: array
            items:
              x-apimatic-facade: '#/components/schemas/BusinessPartnerPropertyParam'
              $ref: '#/components/schemas/BusinessPartnerPropertyParam'
        - name: provenanceTechnicalKeys
          in: query
          description: Show updates for selected provenances by technical keys
          required: false
          schema:
            type: array
            items:
              type: string
        - name: exceptProvenanceTechnicalKeys
          in: query
          description: >
            Show updates for all provenances except provided by technical keys.
            By default includes ORGANIZATION if not present on
            provenanceTechnicalKeys list.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: from
          in: query
          required: false
          description: >-
            Only show updates which have been modified after this date (ISO
            8601). Default is to show the 'last seven days' and farthest in the
            past is 'since three month'
          schema:
            type: string
            example: 2019-12-31T16:47
        - $ref: '#/components/parameters/dataSourceQueryParam'
        - $ref: '#/components/parameters/countryShortnamesQueryParam'
        - $ref: '#/components/parameters/changeTypeQueryParam'
        - name: changeClassification
          in: query
          required: false
          schema:
            x-apimatic-facade: '#/components/schemas/PropertyChangeClassificationParam'
            $ref: '#/components/schemas/PropertyChangeClassificationParam'
          description: Filter for change classifications
        - name: featuresOn
          in: query
          required: false
          description: >
            Features to be used during the read business partners updates:

            * `SHOW_BUSINESS_PARTNER` - Show businss partner merged out of
            updates in `$.values[*].businessPartner. By default turned off.

            * `FETCH_STORAGE_BUSINESS_PARTNER` - Fetch business partner from a
            storage and set in `$.values[*].storageBusinessPartner`. By default
            turned off.

            * `NUMBER_OF_TOTAL` - Allows to switch fetching the total number of
            records to improve performance. By default turned on.
          schema:
            type: array
            items:
              x-apimatic-facade: '#/components/schemas/BusinessPartnerUpdatesFeatureParam'
              $ref: '#/components/schemas/BusinessPartnerUpdatesFeatureParam'
        - name: featuresOff
          in: query
          required: false
          description: >
            Features to be used during the read business partners updates:

            * `SHOW_BUSINESS_PARTNER` - Show businss partner merged out of
            updates in `$.values[*].businessPartner. By default turned off.

            * `FETCH_STORAGE_BUSINESS_PARTNER` - Fetch business partner from a
            storage and set in `$.values[*].storageBusinessPartner`. By default
            turned off.

            * `NUMBER_OF_TOTAL` - Allows to switch fetching the total number of
            records to improve performance. By default turned on.
          schema:
            type: array
            items:
              x-apimatic-facade: '#/components/schemas/BusinessPartnerUpdatesFeatureParam'
              $ref: '#/components/schemas/BusinessPartnerUpdatesFeatureParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPartnerUpdatePage'
          description: OK
  /v4/storages/{storageId}/businesspartners/lookup:
    parameters:
      - name: storageId
        in: path
        required: true
        schema:
          type: string
        description: storageId
    post:
      x-public: true
      x-wsdl: true
      tags:
        - Business Partners
      summary: Lookup Business Partner
      description: Lookup a Business Partner in this storage.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessPartnerLookupRequest'
        required: true
        description: cmd
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPartnerLookupResult'
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v4/storages/{storageId}/businesspartners/fetch:
    parameters:
      - name: storageId
        in: path
        required: true
        schema:
          type: string
        description: storageId
    post:
      x-public: true
      x-wsdl: false
      tags:
        - Business Partners
      summary: Fetch Business Partner
      description: Fetch a Business Partner from this storage
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchBusinessPartnerRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchBusinessPartnerResult'
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /v4/storages/{storageId}/businesspartners/random:
    parameters:
      - name: storageId
        in: path
        required: true
        schema:
          type: string
        description: storageId
    get:
      x-wsdl: false
      tags:
        - Business Partners
      summary: Random Business Partners
      description: Get random Business Partners from this storage
      parameters:
        - $ref: '#/components/parameters/limitRandomQueryParam'
        - name: dataSource
          in: query
          required: false
          schema:
            type: string
          description: >-
            Data source (name or ID) used to filter the result of business
            partners returned.
        - name: countryCode
          in: query
          required: false
          schema:
            type: string
          description: >-
            A country code used to filter the result of business partners
            returned.
        - name: modifiedBefore
          in: query
          required: false
          schema:
            type: string
          description: >-
            Return entries which were modified before given data. The given date
            should support ISO-8601 representation
          example: '2020-07-06T12:14:03.204Z'
        - name: modifiedAfter
          in: query
          required: false
          schema:
            type: string
          description: >-
            Return entries which were modified after given data. The given date
            should support ISO-8601 representation
          example: '2020-07-06T12:14:03.204Z'
        - name: featureOn
          in: query
          required: false
          schema:
            type: array
            description: >
              Feature(s) to be used during the fetch business partner:

              * `FETCH_RECORD` - Allows to switch fetching record field to
              reduce data size. By default turned on.

              * `FETCH_RELATIONS` - Allows to switch fetching relations of
              Business Partners. By default turned off. Only for storages with
              RELATIONS feature enabled
            items:
              x-apimatic-facade: '#/components/schemas/FetchBusinessPartnerFeatureParam'
              $ref: '#/components/schemas/FetchBusinessPartnerFeatureParam'
        - name: featureOff
          in: query
          required: false
          schema:
            type: array
            description: >
              Feature(s) to be excluded during the fetch business partner:

              * `FETCH_RECORD` - Allows to switch fetching record field to
              reduce data size. By default turned on.

              * `FETCH_RELATIONS` - Allows to switch fetching relations of
              Business Partners. By default turned off. Only for storages with
              RELATIONS feature enabled
            items:
              x-apimatic-facade: '#/components/schemas/FetchBusinessPartnerFeatureParam'
              $ref: '#/components/schemas/FetchBusinessPartnerFeatureParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPartnerRandomPage'
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /v4/datamapperdefinitions/{id}/transformBusinessPartners:
    post:
      tags:
        - Data Mappers
      summary: Transform Records
      description: Use a DataMapper to transform a list of records into Business Partners
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: Records
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessPartnersTransformationRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPartnersTransformationResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v4/datamapperdefinitions/{id}/transformFields:
    post:
      tags:
        - Data Mappers
      summary: Transform Business Partners
      description: >-
        Use a data mapper definition to transform a list of business partners
        into key-value lists.
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: Records
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldsTransformationRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldsTransformationResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v4/storages/{storageId}/relations:
    parameters:
      - name: storageId
        in: path
        required: true
        schema:
          type: string
        description: storageId
    post:
      tags:
        - Relations
      summary: Initialize Storage relations
      parameters: []
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    get:
      tags:
        - Relations
      summary: Read Relations
      parameters:
        - $ref: '#/components/parameters/startAfterQueryParam'
        - $ref: '#/components/parameters/limitQueryParam'
        - $ref: '#/components/parameters/relationsReadFeatureOnQueryParam'
        - $ref: '#/components/parameters/relationsReadFeatureOffQueryParam'
        - name: externalId
          in: query
          required: false
          schema:
            type: string
          description: Filter by externalId
        - name: dataSource
          in: query
          required: false
          schema:
            type: string
          description: Filter by dataSource name or id
        - name: type
          in: query
          required: false
          schema:
            type: string
          description: Filter by type
        - name: classTechnicalKey
          in: query
          required: false
          schema:
            type: string
          description: >-
            Filter by class technical key. List of available
            (classes)[https://meta.cdq.com/Business_partner/relation/class]
        - name: endedAfter
          in: query
          required: false
          schema:
            type: string
            example: '2019-12-31T16:47:00Z'
          description: Find relations which endedAt is after given date
        - name: endedBefore
          in: query
          required: false
          schema:
            type: string
            example: '2019-12-31T16:47:00Z'
          description: Find relations which endedAt is before given date
        - name: startedAfter
          in: query
          required: false
          schema:
            type: string
            example: '2019-12-31T16:47:00Z'
          description: Find relations which startedAt is after given date
        - name: startedBefore
          in: query
          required: false
          schema:
            type: string
            example: '2019-12-31T16:47:00Z'
          description: Find relations which startedAt is before given date
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPartnerRelationsPage'
          description: OK
    put:
      x-public: true
      tags:
        - Relations
      summary: Upsert Business Partner Relations
      description: >-
        Upsert Business Partner Relations. When inserting a new relation,
        'startedAt' date is set to current date and 'endedAt' date is set to
        null. When updating a relation, 'endedAt' date is set to current date in
        existing relation and a new relation is created.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelationsUpsertRequest'
        description: RelationsUpsertRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationsUpsertResult'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  /v4/storages/{storageId}/relations/delete:
    post:
      tags:
        - Relations
      summary: Delete relations
      parameters:
        - name: storageId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessPartnerRelationsDeleteRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPartnerRelationsDeleteResult'
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v4/businesspartners/identitylinks:
    get:
      x-wsdl: false
      x-public: true
      tags:
        - Subscriptions
      summary: Read Links
      description: >-
        Reads a page of links of the business partners starting from the
        'startAfter' and with a size of 'limit'
      parameters:
        - $ref: '#/components/parameters/startAfterQueryParam'
        - $ref: '#/components/parameters/limitQueryParam'
        - name: storageId
          in: query
          required: true
          schema:
            type: string
          description: ID of a storage which should be filtered.
        - name: referenceDataSource
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          description: >-
            Reference data source (e.g. CDQ.POOL) as ALEI prefix of the linked
            business partner used to filter the result of links returned.
        - name: businessPartnerId
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          description: Business Partner IDs in a storage which should be filtered.
        - name: externalId
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          description: Business Partner externalIDs which should be filtered.
        - name: dataSourceId
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          description: IDs of data sources which should be filtered
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPartnerIdentityLinkPage'
          description: OK
  /v4/storages/{storageId}/sharingscopes:
    parameters:
      - name: storageId
        in: path
        required: true
        schema:
          type: string
        description: storageId
    get:
      parameters:
        - $ref: '#/components/parameters/startAfterQueryParam'
        - $ref: '#/components/parameters/limitQueryParam'
        - name: featuresOn
          in: query
          required: false
          description: >
            Feature(s) to use:

            * `FETCH_JOB_DETAILS` - Fetch job status and progress. By default
            off.
          schema:
            type: array
            items:
              x-apimatic-facade: '#/components/schemas/SharingScopesReadFeatureParam'
              $ref: '#/components/schemas/SharingScopesReadFeatureParam'
      tags:
        - Business Partner Storages
      summary: List Sharing Scopes
      description: List all sharing scopes of the give storage
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingScopesPage'
          description: OK
    post:
      parameters: []
      tags:
        - Business Partner Storages
      summary: Create Sharing Scope
      description: >
        Create a new sharing scope. Max 100 sharing scopes are allowed.


        When creating sharing scope, all business partners from selecion scope
        which are covered become disclosed.


        The following table presents the source for disclosed field.


        | Mapping disclosure | Sharing Scope matches | Source for disclosed |

        | true | yes | Mapping disclosure |

        | true | no | Mapping disclosure |

        | false | yes | Sharing Scope |

        | false | no | default: false, otherwise from API request up to V4 |


        When source for disclosed field is Sharing Scope, the value is
        determined only during

        the creation of a Sharing Scope or Business Partner. Any new update of
        business partner

        doesn't overwrite the value of disclosed in the Business Partner. To
        change disclosure

        of a concrete Business Partner, it has to be [requested
        directly](#/rest/api-endpoints/business-partners/update-disclosure).
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharingScopeCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingScope'
          description: OK
        '400':
          description: Bad Request
  /v4/storages/{storageId}/sharingscopes/delete:
    parameters:
      - name: storageId
        description: Unique ID of a storage
        in: path
        required: true
        schema:
          type: string
    post:
      parameters: []
      tags:
        - Business Partner Storages
      summary: Delete Sharing Scopes
      description: >-
        Delete sharing scopes. When deleting sharing scope, all business
        partners from selecion scope who are not included in any other sharing
        scopes, become undisclosed.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharingScopeDeletes'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingScopeDeleteResults'
          description: OK
security:
  - basicAuth: []
servers:
  - url: https://api.corporate-data-league.ch/data-exchange/rest
    description: Production
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  parameters:
    usernameHeaderParam:
      name: X-Credential-Username
      in: header
      required: true
      schema:
        type: string
      description: >-
        Username that is passed as header parameter with the name
        X-Credential-Username.
    labelsQueryParam:
      name: label
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      description: >-
        Label for filtering that is passed as header parameter with the name
        label.
    sharedWithOrganizationParam:
      name: sharedWithOrganization
      in: query
      required: false
      schema:
        type: boolean
      description: Filters only mappings which are shared with organization or not.
    pageQueryParam:
      name: page
      in: query
      required: false
      schema:
        type: integer
        format: int32
        minimum: 0
        default: 0
      description: Number of the page that will be retrieved.
    pageSizeQueryParam:
      name: pageSize
      in: query
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        default: 20
      description: Number of items to be returned on the page.
    startAfterQueryParam:
      name: startAfter
      in: query
      required: false
      schema:
        type: string
      description: >
        Only items with an ID greater than the given one will be retrieved.


        When nextStartAfter provided in the response, should be used instead of
        the ID

        as an indicator for a next page.
    limitQueryParam:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        default: 500
      description: Number of items to be returned on the page.
    limitRandomQueryParam:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 10
        default: 1
      description: Number of items to be returned on the page.
    skippedStartAfterQueryParam:
      name: skippedStartAfter
      in: query
      required: false
      schema:
        type: string
      description: >-
        Next page of items will be retrieved. When skippedNextStartAfter
        provided in the response, should be used.
    dnbRecordsReadFeatureOnQueryParam:
      name: featureOn
      in: query
      required: false
      schema:
        type: array
        items:
          x-apimatic-facade: '#/components/schemas/DnbRecordsReadFeatureParam'
          $ref: '#/components/schemas/DnbRecordsReadFeatureParam'
      description: >
        Features to be turned on:

        * `NUMBER_OF_TOTAL` - Allows to switch fetching the total number of
        records to improve performance. By default turned on.

        * `SHOW_CDQ_RECORD` - Provides cmpelkV2 in CDQ data model. By default
        turned off.

        * `SHOW_FORMATTED_SAP_RECORD` - Provides formattedSapRecord field in
        result. Requires SHOW_CDQ_RECORD. By default turned off.
    dnbRecordsReadFeatureOffQueryParam:
      name: featureOff
      in: query
      required: false
      schema:
        type: array
        items:
          x-apimatic-facade: '#/components/schemas/DnbRecordsReadFeatureParam'
          $ref: '#/components/schemas/DnbRecordsReadFeatureParam'
      description: >
        Features to be turned off:

        * `NUMBER_OF_TOTAL` - Allows to switch fetching the total number of
        records to improve performance. By default turned on.

        * `SHOW_CDQ_RECORD` - Provides cmpelkV2 in CDQ data model. By default
        turned off.

        * `SHOW_FORMATTED_SAP_RECORD` - Provides formattedSapRecord field in
        result. Requires SHOW_CDQ_RECORD. By default turned off.
    relationsReadFeatureOnQueryParam:
      name: featureOn
      in: query
      required: false
      schema:
        type: array
        items:
          x-apimatic-facade: '#/components/schemas/RelationsReadFeatureParam'
          $ref: '#/components/schemas/RelationsReadFeatureParam'
      description: >
        Features to be turned on:

        * `SHOW_BUSINESS_PARTNER_INFORMATION` - Allows to switch fetching
        business partner details to improve performance. By default turned on.
    relationsReadFeatureOffQueryParam:
      name: featureOff
      in: query
      required: false
      schema:
        type: array
        items:
          x-apimatic-facade: '#/components/schemas/RelationsReadFeatureParam'
          $ref: '#/components/schemas/RelationsReadFeatureParam'
      description: >
        Features to be turned off:

        * `SHOW_BUSINESS_PARTNER_INFORMATION` - Allows to switch fetching
        business partner details to improve performance. By default turned on.
    dataSourceQueryParam:
      name: dataSource
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      description: Filter for a data source (name or id)
    countryShortnamesQueryParam:
      name: countryShortName
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      description: Filter for countries
    changeTypeQueryParam:
      name: changeType
      in: query
      required: false
      schema:
        type: string
        enum:
          - ADDED
          - MODIFIED
          - DELETED
      description: Filter for change types
  requestBodies:
    BusinessPartnersUpsertRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BusinessPartnersUpsertRequest'
      description: BusinessPartnersUpsertRequest
      required: true
    DataMapperDefinitionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DataMapperDefinitionRequest'
    BusinessPartnerEventCreatesRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BusinessPartnerEventCreatesRequest'
      description: BusinessPartnerEventCreatesRequest
      required: true
  responses:
    400_BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
      description: The sent request is malformed.
    401_Unauthorized:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
      description: Invalid authentication was sent.
    403_Forbidden:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
      description: Permission denied.
    404_NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
      description: The specified resource was not found.
  schemas:
    BusinessPartner:
      type: object
      properties:
        id:
          description: Business Partner identifier within a storage. Autogenerated.
          type: string
        createdAt:
          type: string
        lastModifiedAt:
          type: string
        externalId:
          $ref: '#/components/schemas/BusinessPartnerExternalId'
        dataSource:
          type: string
          description: >-
            Name or ID of a data source. Reflects the associated external system
            where the record originates from.
        disclosed:
          type: boolean
          description: >-
            A flag to indicate whether the Business Partner should participate
            in the sharing or not. If 'true' this Business Partner might be used
            to create a new entry or update an existing entry in the community
            pool. Otherwise it will not be considered for the sharing process.
            For more details, you can read about [Sharing
            Scopes](https://www.apimatic.io/api-docs/data-exchange/v/4_0#/rest/api-endpoints/business-partner-storages/create-sharing-scope).
        updateMonitoring:
          type: boolean
          description: >-
            A flag to indicate whether the Business Partner should receive
            updates from Reference Data Sources or not. If 'true' this Business
            Partner will receive updates since the change from 'false'. If
            'false' this Business Partner will not receive any new updates since
            the change. If not provided, the previous value will not be changed.
            By default, Update Monitoring is enabled.
        metadata:
          $ref: '#/components/schemas/BusinessPartnerMetadata'
        record:
          $ref: '#/components/schemas/BusinessPartnerRecord'
        additionalInformation:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalInformation'
        names:
          type: array
          items:
            $ref: '#/components/schemas/Name'
        legalForm:
          $ref: '#/components/schemas/LegalForm'
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/BusinessPartnerCategory'
        status:
          $ref: '#/components/schemas/BusinessPartnerStatus'
        profile:
          $ref: '#/components/schemas/PartnerProfile'
        relations:
          type: array
          items:
            $ref: '#/components/schemas/BusinessPartnerRelation'
        types:
          type: array
          items:
            $ref: '#/components/schemas/BusinessPartnerType'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        bankAccounts:
          type: array
          items:
            $ref: '#/components/schemas/BankAccount'
      title: BusinessPartner
    Name:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/NameType'
        value:
          $ref: '#/components/schemas/NameValue'
        shortName:
          $ref: '#/components/schemas/NameShortName'
        language:
          $ref: '#/components/schemas/Language'
      title: Name
    Identifier:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/IdentifierType'
        value:
          $ref: '#/components/schemas/IdentifierValue'
        issuingBody:
          $ref: '#/components/schemas/IssuingBody'
        status:
          $ref: '#/components/schemas/IdentifierStatus'
      title: Identifier
    Classification:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/ClassificationValue'
        code:
          $ref: '#/components/schemas/ClassificationCode'
        type:
          $ref: '#/components/schemas/ClassificationType'
      title: Classification
    BusinessPartnerStatus:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/BusinessPartnerStatusType'
        officialDenotation:
          $ref: '#/components/schemas/BusinessPartnerStatusOfficialDenotation'
        validFrom:
          $ref: '#/components/schemas/BusinessPartnerStatusValidFrom'
        validUntil:
          $ref: '#/components/schemas/BusinessPartnerStatusValidUntil'
      title: BusinessPartnerStatus
    Address:
      type: object
      properties:
        id:
          description: Address identifier within a Business Partner. Autogenerated.
          type: string
        externalId:
          $ref: '#/components/schemas/AddressExternalId'
        cdqId:
          $ref: '#/components/schemas/AddressCdqId'
        version:
          $ref: '#/components/schemas/AddressVersion'
        identifyingName:
          $ref: '#/components/schemas/AddressIdentifyingName'
        careOf:
          $ref: '#/components/schemas/CareOf'
        contexts:
          type: array
          items:
            $ref: '#/components/schemas/AddressContext'
        country:
          $ref: '#/components/schemas/Country'
        administrativeAreas:
          type: array
          items:
            $ref: '#/components/schemas/AdministrativeArea'
          nullable: true
        postCodes:
          type: array
          items:
            $ref: '#/components/schemas/PostCode'
        localities:
          type: array
          items:
            $ref: '#/components/schemas/Locality'
          nullable: true
        thoroughfares:
          type: array
          items:
            $ref: '#/components/schemas/Thoroughfare'
        premises:
          type: array
          items:
            $ref: '#/components/schemas/Premise'
          nullable: true
        postalDeliveryPoints:
          type: array
          items:
            $ref: '#/components/schemas/PostalDeliveryPoint'
        geographicCoordinates:
          $ref: '#/components/schemas/GeographicCoordinates'
        types:
          type: array
          items:
            $ref: '#/components/schemas/AddressType'
        metadata:
          $ref: '#/components/schemas/AddressMetadata'
      title: Address
    Country:
      description: >-
        Country consisting of the country name and country code (ISO 3166-1
        alpha-2).
      type: object
      properties:
        shortName:
          $ref: '#/components/schemas/CountryShortName'
        value:
          $ref: '#/components/schemas/CountryValue'
      title: Country
    AdministrativeArea:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/AdministrativeAreaValue'
        shortName:
          $ref: '#/components/schemas/AdministrativeAreaShortName'
        type:
          $ref: '#/components/schemas/schemas-AdministrativeAreaType'
        language:
          $ref: '#/components/schemas/Language'
      title: AdministrativeArea
    PostCode:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/PostCodeValue'
        type:
          $ref: '#/components/schemas/PostCodeType'
      title: PostCode
    Locality:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/LocalityType'
        shortName:
          $ref: '#/components/schemas/LocalityShortName'
        value:
          $ref: '#/components/schemas/LocalityValue'
        language:
          $ref: '#/components/schemas/Language'
      title: Locality
    Thoroughfare:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ThoroughfareType'
        shortName:
          $ref: '#/components/schemas/ThoroughfareShortName'
        number:
          $ref: '#/components/schemas/ThoroughfareNumber'
        value:
          $ref: '#/components/schemas/ThoroughfareValue'
        name:
          $ref: '#/components/schemas/ThoroughfareName'
        direction:
          $ref: '#/components/schemas/ThoroughfareDirection'
        language:
          $ref: '#/components/schemas/Language'
      title: Thoroughfare
    Premise:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/PremiseValue'
        shortName:
          $ref: '#/components/schemas/PremiseShortName'
        number:
          $ref: '#/components/schemas/PremiseNumber'
        type:
          $ref: '#/components/schemas/PremiseType'
        language:
          $ref: '#/components/schemas/Language'
      title: Premise
    PostalDeliveryPoint:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/PostalDeliveryPointType'
        shortName:
          $ref: '#/components/schemas/PostalDeliveryPointShortName'
        number:
          $ref: '#/components/schemas/PostalDeliveryPointNumber'
        value:
          $ref: '#/components/schemas/PostalDeliveryPointValue'
        language:
          $ref: '#/components/schemas/Language'
      title: PostalDeliveryPoint
    GeographicCoordinates:
      description: Decimal geographic coordinates (WGS 84 - reference coordinate system).
      type: object
      properties:
        latitude:
          $ref: '#/components/schemas/GeographicCoordinatesLatitude'
        longitude:
          $ref: '#/components/schemas/GeographicCoordinatesLongitude'
      title: GeographicCoordinates
    FormattedAddress:
      type: object
      properties:
        country:
          description: Switzerland
          type: string
        administrativeArea:
          description: Canton of St. Gallen
          type: string
        region:
          type: string
        regionCode:
          type: string
        district:
          type: string
        locality:
          description: St. Gallen
          type: string
        postCode:
          description: '9008'
          type: string
        thoroughfare:
          description: Lukasstrasse 4
          type: string
        premise:
          description: Main Building, Floor 1
          type: string
        mailStation:
          type: string
        mailbox:
          type: string
        interurbanDeliveryPoint:
          type: string
        postOfficeBox:
          type: string
      title: FormattedAddress
    BusinessPartnerResults:
      type: object
      deprecated: true
      properties:
        businessPartnerCurationResult:
          $ref: '#/components/schemas/BusinessPartnerCurationResult'
        categorizationResult:
          $ref: '#/components/schemas/CategorizationResult'
        validationResult:
          $ref: '#/components/schemas/ValidationResult'
      title: BusinessPartnerResults
    BusinessPartnerCurationResult:
      type: object
      deprecated: true
      properties:
        curatedBusinessPartner:
          $ref: '#/components/schemas/BusinessPartner'
      title: BusinessPartnerCurationResult
    CategorizationResult:
      type: object
      deprecated: true
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
      title: CategorizationResult
    Category:
      type: object
      deprecated: true
      properties:
        categorized:
          type: boolean
        key:
          type: string
        label:
          type: string
        score:
          type: number
          format: float
      title: Category
    AddressResults:
      type: object
      deprecated: true
      properties:
        curationResult:
          $ref: '#/components/schemas/AddressCurationResult'
        goldenRecordGenerationResult:
          $ref: '#/components/schemas/GoldenRecordGenerationResult'
        lookupResults:
          $ref: '#/components/schemas/LookupResults'
        validationResult:
          $ref: '#/components/schemas/ValidationResult'
      title: AddressResults
    AddressCurationResult:
      type: object
      deprecated: true
      properties:
        accuracyIndicator:
          type: integer
          format: int32
        changes:
          type: array
          items:
            type: string
        curatedAddress:
          $ref: '#/components/schemas/Address'
        curationLevel:
          type: string
        requestSimilarity:
          $ref: '#/components/schemas/RequestSimilarity'
        response:
          $ref: '#/components/schemas/AddressCurationResponse'
      title: AddressCurationResult
    RequestSimilarity:
      type: object
      deprecated: true
      properties:
        geoCoordinates:
          type: boolean
        locality:
          type: number
          format: double
        overall:
          type: number
          format: double
        postCode:
          type: number
          format: double
        thoroughfare:
          type: number
          format: double
      title: RequestSimilarity
    AddressCurationResponse:
      type: object
      deprecated: true
      properties:
        message:
          type: string
        status:
          type: string
        timestamp:
          type: string
      title: AddressCurationResponse
    GoldenRecordGenerationResult:
      type: object
      deprecated: true
      properties:
        explanations:
          type: array
          items:
            type: string
        goldenRecord:
          $ref: '#/components/schemas/BusinessPartner'
        originalBusinessPartner:
          $ref: '#/components/schemas/BusinessPartner'
        originalDataDefects:
          type: array
          items:
            $ref: '#/components/schemas/DataDefect'
        referenceBusinesspartners:
          type: array
          items:
            $ref: '#/components/schemas/MatchingContainer'
        remainingDataDefects:
          type: array
          items:
            $ref: '#/components/schemas/DataDefect'
      title: GoldenRecordGenerationResult
    MatchingContainer:
      type: object
      deprecated: true
      properties:
        businessPartner:
          $ref: '#/components/schemas/BusinessPartner'
        matchScore:
          type: number
          format: double
        matchingExplanation:
          type: string
        matchingSource:
          type: string
        subscribed:
          type: boolean
      title: MatchingContainer
    LookupResults:
      type: object
      deprecated: true
      properties:
        lookupMatches:
          type: array
          items:
            $ref: '#/components/schemas/LookupMatch'
      title: LookupResults
    LookupMatch:
      type: object
      deprecated: true
      properties:
        address:
          $ref: '#/components/schemas/Address'
        alei:
          type: string
        businessPartner:
          $ref: '#/components/schemas/BusinessPartner'
        cdqId:
          type: string
        inactive:
          type: boolean
        matchingExplanation:
          type: string
        matchingScore:
          type: string
        businessPartnerMatchingScore:
          type: number
          format: double
        addressMatchingScore:
          type: number
          format: double
        responseMetadata:
          $ref: '#/components/schemas/ReferenceResponseMetadata'
        source:
          type: string
      title: LookupMatch
    ReferenceResponseMetadata:
      type: object
      deprecated: true
      properties:
        responseCurated:
          type: boolean
      title: ReferenceResponseMetadata
    ValidationResult:
      type: object
      deprecated: true
      properties:
        dataDefects:
          type: array
          items:
            $ref: '#/components/schemas/DataDefect'
        fixProposals:
          type: array
          items:
            $ref: '#/components/schemas/FixProposal'
      title: ValidationResult
    FixProposal:
      type: object
      deprecated: true
      properties:
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        names:
          type: array
          items:
            $ref: '#/components/schemas/Name'
      title: FixProposal
    DataDefect:
      type: object
      deprecated: true
      properties:
        attributes:
          type: array
          items:
            type: string
        businessRule:
          type: string
        entity:
          type: string
        errorCode:
          type: integer
          format: int32
        fixProposal:
          type: string
        fixProposalJson:
          type: string
        violationLevel:
          type: string
          enum:
            - NO_DEFECT
            - INFO
            - WARNING
            - ERROR
        violationMessage:
          type: string
      title: DataDefect
    BusinessPartnerStorageRequest:
      description: Request for a new business partner storage
      type: object
      properties:
        name:
          description: Name of the business partner
          type: string
          maxLength: 50
        dataMatchingDefinitionId:
          description: Unique ID of a data matching definition
          type: string
        dataSources:
          description: >-
            List of data sources to be added to the storage that will be
            created.
          type: array
          items:
            type: object
            properties:
              dataSourceName:
                type: string
                description: Unique (inside the storage) name of the data source.
              dataMapperDefinitionId:
                type: string
                description: >-
                  The ID of an existing mapping, which should be used to
                  transform records that belong to this data source.
            required:
              - dataSourceName
        featuresOn:
          type: array
          description: >
            Available features of a storage: * `LOOKUP` - Enables search
            capabilities for the given storage * `SHARING` - Enables storage to
            participates in the CDQ sharing process * `UPDATES` - Enables
            storing and querying of updates for the given storage *
            `DATA_MIRROR` - Defines storage as a Data Mirror. Turns on:
            NEVER_EXPIRE, LOOKUP, UPDATES, SHARING features. SHARING is not
            applied when records are not disclosed. * `NEVER_EXPIRE` - Specifies
            whether a storage should never expire. Always turned on for
            `DATA_MIRROR`. Caution: don't use too often due to quota limits. *
            `RELATIONS` - Enables storage to contain relations
          items:
            type: string
            enum:
              - LOOKUP
              - UPDATES
              - LAB_USE_INDEX_API
              - SHARING
              - DATA_MIRROR
              - NEVER_EXPIRE
              - RELATIONS
        sharedWithOrganization:
          type: boolean
          default: false
          description: >-
            Indicates if this storage is shared with all users of the same
            organization
        labels:
          type: array
          maxItems: 10
          uniqueItems: true
          items:
            type: string
            minLength: 1
            maxLength: 20
      title: BusinessPartnerStorageRequest
    StorageMetadataModifyRequest:
      type: object
      properties:
        originalFileHeader:
          type: array
          items:
            type: string
        status:
          type: string
        statusMessage:
          type: string
      title: StorageMetadataModifyRequest
    BusinessPartnerStorageMetadataUpdate:
      type: object
      properties:
        name:
          type: string
          description: Name of the storage
          maxLength: 50
        labels:
          description: Labels to categorize the storage
          type: array
          maxItems: 10
          uniqueItems: true
          items:
            type: string
            minLength: 1
            maxLength: 20
        dataMatchingDefinitionId:
          description: Unique ID of a data matching definition
          type: string
        sharedWithOrganization:
          type: boolean
          description: >-
            Indicates if this storage is shared with all users of the same
            organization
      title: BusinessPartnerStorageMetadataUpdate
    BusinessPartnerStorageMetadata:
      x-hide: true
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          maxLength: 50
        user:
          type: string
        organization:
          type: string
        createdAt:
          type: string
        expiresAt:
          type: string
          description: >
            Date when storage expires.


            Possible values:

            * a date when a storage expires,

            * NEVER when storage is a Data Mirror or has been created including
            NEVER_EXPIRE feature.


            Expiry date is calculated based on the date of last write operation
            related

            to a storage (upsert of data, update of data sources, executed job)
            plus 6 months,

            refreshed as most 2 weeks before previous storage expiration date.
        dataMatchingDefinitionId:
          type: string
        dataSources:
          type: array
          items:
            $ref: '#/components/schemas/DataSource'
        updateMonitors:
          type: array
          items:
            $ref: '#/components/schemas/UpdateMonitor'
        dataMonitors:
          type: array
          items:
            $ref: '#/components/schemas/DataMonitor'
        features:
          $ref: '#/components/schemas/FeatureStatuses'
        tags:
          description: Tags to categorize the storage
          type: array
          maxItems: 10
          uniqueItems: true
          items:
            $ref: '#/components/schemas/StorageTag'
      title: BusinessPartnerStorageMetadata
    FeatureStatus:
      x-hide: true
      type: object
      properties:
        status:
          x-apimatic-facade: '#/components/schemas/FeatureStatusParam'
          $ref: '#/components/schemas/FeatureStatusParam'
      title: FeatureStatus
    DataSource:
      type: object
      nullable: false
      properties:
        id:
          type: string
          description: Unique ID of the data source
        createdAt:
          type: string
          description: Date of creation
        lastUpdatedAt:
          type: string
          description: Date of last update
        name:
          type: string
          description: Name of the data source
        dataMapperDefinitionId:
          description: >-
            ID of the data mapper definition which is attached to this data
            source
          type: string
        mappingDisclosure:
          description: >
            Determines whether disclosed field is set via data mapper definition
            (true) or via Sharing Scopes (false). For more details, you can

            read about [Data Mapper
            Definition](#/rest/api-endpoints/data-mapping/create-data-mapper-definition)
            and [Sharing
            Scopes](https://www.apimatic.io/api-docs/data-exchange/v/4_0#/rest/api-endpoints/business-partner-storages/create-sharing-scope)."
          type: boolean
      title: DataSource
    DataSourceParam:
      type: object
      nullable: false
      properties:
        id:
          type: string
          description: Unique ID of the data source
        createdAt:
          type: string
          description: Date of creation
        lastUpdatedAt:
          type: string
          description: Date of last update
        name:
          type: string
          description: Name of the data source
        dataMapperDefinitionId:
          description: >-
            ID of the data mapper definition which is attached to this data
            source
          type: string
      title: DataSourceParam
    DataSourceCreate:
      type: object
      nullable: false
      properties:
        name:
          type: string
          description: Name of the data source
        dataMapperDefinitionId:
          description: >-
            ID of the data mapper definition which is attached to this data
            source
          type: string
      title: DataSourceCreate
    DataSourceUpdate:
      type: object
      nullable: false
      properties:
        name:
          type: string
          description: Name of the data source
        dataMapperDefinitionId:
          description: >-
            ID of the data mapper definition which is attached to this data
            source
          type: string
      title: DataSourceUpdate
    DataSourceUpdateResult:
      type: object
      properties:
        dataSource:
          $ref: '#/components/schemas/DataSourceParam'
        status:
          type: string
          description: |
            * OK - the data source has been updated
            * NOT_FOUND - the data source is not found
      title: DataSourceUpdateResult
    DataSourceUpserts:
      description: List of data source upserts to be applied
      type: object
      required:
        - dataSources
      properties:
        dataSources:
          description: List of data sources
          type: array
          minItems: 1
          maxItems: 100
          items:
            $ref: '#/components/schemas/DataSourceParam'
      title: DataSourceUpserts
    DataSourceUpsertsResult:
      type: object
      properties:
        created:
          type: integer
          format: int64
        updated:
          type: integer
          format: int64
        failed:
          type: integer
          format: int64
      title: DataSourceUpsertsResult
    CountryStatistic:
      type: object
      properties:
        countryCode:
          type: string
        numberOfRecords:
          type: integer
          format: int64
      title: CountryStatistic
    Results:
      type: object
      properties:
        addressCurationReports:
          type: array
          items:
            $ref: '#/components/schemas/Report'
        goldenRecordGenerationReports:
          type: array
          items:
            $ref: '#/components/schemas/Report'
        resultItems:
          type: array
          items:
            $ref: '#/components/schemas/ResultItem'
        validationReports:
          type: array
          items:
            $ref: '#/components/schemas/Report'
      title: Results
    Report:
      type: object
      properties:
        creationTimestamp:
          type: string
        description:
          type: string
        name:
          type: string
        type:
          type: string
        url:
          type: string
      title: Report
    ResultItem:
      type: object
      properties:
        country:
          type: string
        label:
          type: string
        numberOfRecords:
          type: integer
          format: int32
        type:
          type: string
      title: ResultItem
    BusinessPartnerStorageMetadataPage:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/BusinessPartnerStorageMetadata'
        limit:
          $ref: '#/components/schemas/Limit'
        startAfter:
          $ref: '#/components/schemas/StartAfter'
        nextStartAfter:
          $ref: '#/components/schemas/NextStartAfter'
        total:
          $ref: '#/components/schemas/PageTotal'
      title: BusinessPartnerStorageMetadataPage
    BusinessPartnersUpsertRequest:
      type: object
      required:
        - businessPartners
      properties:
        dataSource:
          type: string
          description: Data source (name or ID) for all the business partners
        businessPartners:
          type: array
          minItems: 1
          maxItems: 1000
          description: Batch of business partners
          items:
            $ref: '#/components/schemas/BusinessPartner'
        featuresOn:
          type: array
          description: >
            Feature(s) to be used during the upsert:

            * `UPSERT_BY_EXTERNAL_ID` - Updates a business partners identified
            by external ID instead of an insert if the external ID is already
            present in this storage. When selected, id must not be provided in a
            business partner.

            * `API_ERROR_ON_FAILURES` - Throws exception instead of default
            Upsert Failure Log.

            * `TRANSFORM_RECORD` - Transforms record into Business Partner model
            using the dataMapperDefinition attached to the dataSource. Supported
            only for batch size up to 250 Business Partners.

            * `ENABLE_SETTINGS` - Enables usage of user and organization
            settings in upsert process. Enabled by default.

            * `ENABLE_ASYNC` - Stores data to the storage. Enables asynchronous
            data processing for transformation, updates, indexing and sharing
            processes. Requires externalId to be present in the businessPartner.
            Enabled by default when TRANSFORM_RECORD not used.
          items:
            x-apimatic-facade: '#/components/schemas/UpsertFeatureParam'
            $ref: '#/components/schemas/UpsertFeatureParam'
        featuresOff:
          type: array
          items:
            x-apimatic-facade: '#/components/schemas/UpsertFeatureParam'
            $ref: '#/components/schemas/UpsertFeatureParam'
      title: BusinessPartnersUpsertRequest
    UpsertFeature:
      type: string
      title: UpsertFeature
    BusinessPartnersUpsertResult:
      type: object
      properties:
        numberOfAccepted:
          type: integer
          description: >
            When asynchronous processing enabled (ENABLE_ASYNC or
            LAB_USE_QUEUES), then represents number of business partners to be
            processed asynchronously.

            When synchronous processing enabled, then provides number of
            business partners processed.
        numberOfFailed:
          type: integer
        failures:
          type: array
          items:
            $ref: '#/components/schemas/UpsertFailureLog'
        featuresOn:
          type: array
          items:
            $ref: '#/components/schemas/UpsertFeature'
      title: BusinessPartnersUpsertResult
    UpsertFailureLog:
      type: object
      properties:
        id:
          type: string
          example: 567326478287468740
        externalId:
          type: string
          example: LFA1.1234567
        message:
          type: string
          example: This record could not be stored due to timeout.
      title: UpsertFailureLog
    BusinessPartnerPage:
      type: object
      properties:
        startAfter:
          type: string
        limit:
          type: integer
          format: int32
        total:
          type: integer
          format: int32
        values:
          type: array
          items:
            $ref: '#/components/schemas/BusinessPartner'
        nextStartAfter:
          description: |
            Available only when you used USE_NEXT_START_AFTER feature.
            Provides a value to be used as a startAfter in next page request.
          type: string
      title: BusinessPartnerPage
    BusinessPartnersClearResult:
      type: object
      properties:
        numberOfDeletes:
          type: integer
      title: BusinessPartnersClearResult
    BusinessPartnersDeleteRequest:
      type: object
      properties:
        dataSource:
          type: string
          description: ID of a data source.
        businessPartners:
          type: array
          maxItems: 1000
          items:
            type: object
            properties:
              id:
                type: string
              externalId:
                type: string
              dataSource:
                type: string
        featuresOn:
          type: array
          items:
            $ref: '#/components/schemas/DeleteFeature'
      title: BusinessPartnersDeleteRequest
    DeleteFeature:
      type: string
      enum:
        - DELETE_BY_EXTERNAL_ID
      title: DeleteFeature
    BusinessPartnersDeleteResult:
      type: object
      properties:
        numberOfDeletes:
          type: integer
        numberOfFailures:
          type: integer
        failures:
          type: array
          items:
            $ref: '#/components/schemas/DeleteFailureLog'
      title: BusinessPartnersDeleteResult
    DeleteFailureLog:
      type: object
      properties:
        id:
          type: string
          example: 567326478287468740
        dataSource:
          type: string
        externalId:
          type: string
          example: LFA1.1234567
        message:
          type: string
          example: This record could not be stored due to timeout.
      title: DeleteFailureLog
    BusinessPartnerResultPatch:
      type: object
      properties:
        addressResultPatches:
          type: array
          items:
            $ref: '#/components/schemas/AddressResultPatch'
        businessPartnerResults:
          $ref: '#/components/schemas/BusinessPartnerResults'
        id:
          type: string
      title: BusinessPartnerResultPatch
    BusinessPartnerResultPatches:
      type: object
      properties:
        patches:
          type: array
          items:
            $ref: '#/components/schemas/BusinessPartnerResultPatch'
      title: BusinessPartnerResultPatches
    AddressResultPatch:
      type: object
      properties:
        addressResults:
          $ref: '#/components/schemas/AddressResults'
        id:
          type: string
          minLength: 1
      title: AddressResultPatch
    BusinessPartnerLookupRequest:
      type: object
      required:
        - businessPartner
      properties:
        matchingThreshold:
          type: number
          format: double
          default: 0
          minimum: 0
          maximum: 1
        pageSize:
          type: integer
          default: 10
          minimum: 1
          maximum: 1000
        page:
          type: integer
          default: 0
          minimum: 0
        dataSources:
          type: array
          items:
            description: DataSource ID or name
            type: string
        businessPartner:
          x-apimatic-facade: '#/components/schemas/BusinessPartnerLookupParam'
          $ref: '#/components/schemas/BusinessPartnerLookupParam'
        featuresOn:
          type: array
          description: >
            Feature(s) to be used during the fetch business partner:

            * `FETCH_RECORD` - Allows to switch fetching record field to reduce
            data size. By default turned on.

            * `FETCH_RELATIONS` - Allows to switch fetching relations of
            Business Partners. By default turned off. Only for storages with
            RELATIONS feature enabled
          items:
            x-apimatic-facade: '#/components/schemas/FetchBusinessPartnerFeatureParam'
            $ref: '#/components/schemas/FetchBusinessPartnerFeatureParam'
        featuresOff:
          type: array
          description: >
            Feature(s) to be excluded during the fetch business partner:

            * `FETCH_RECORD` - Allows to switch fetching record field to reduce
            data size. By default turned on.

            * `FETCH_RELATIONS` - Allows to switch fetching relations of
            Business Partners. By default turned off. Only for storages with
            RELATIONS feature enabled
          items:
            x-apimatic-facade: '#/components/schemas/FetchBusinessPartnerFeatureParam'
            $ref: '#/components/schemas/FetchBusinessPartnerFeatureParam'
      title: BusinessPartnerLookupRequest
    IdentifierTypeTechnicalKey:
      description: >-
        Allowed types are documented
        [here](https://meta.cdq.ch/Category:Business_partner/identifier/type)
        under Technical Key property.
      type: string
      enum:
        - ABN_AU
        - AD_FI_CODE
        - AE_BRN
        - AE_CCN
        - AL_BRN
        - AL_COC
        - AL_GGN
        - AL_TRN
        - AM_COC
        - AM_GGN
        - AM_TRN
        - AO_BRN
        - AR_AGENT_NO
        - AR_CUIT
        - AR_IATAIN
        - AR_NIP
        - AR_PGRTN
        - AR_SEN
        - AR_UTIK
        - AT_ARN
        - AT_TRN
        - AZ_CCN
        - AZ_GGN
        - AZ_TRN
        - BA_COC
        - BA_GGN
        - BA_TRN
        - BD_CIN
        - BD_TIN
        - BE_ARN
        - BE_BUN
        - BE_ENT_NO
        - BE_VAT_ID
        - BF_BRN
        - BG_CCN
        - BG_GGN
        - BG_SEC_ID
        - BG_TAX_ID
        - BG_UID
        - BH_BRN
        - BH_CCN
        - BIC_FI
        - BI_BRN
        - BI_US_AK
        - BI_US_CO
        - BJ_BRN
        - BN_CA
        - BN_TIN
        - BR_CNPJ
        - BR_CPF
        - BR_GRT
        - BR_ID_AT
        - BR_TAX_MUN
        - BR_TAX_STATE
        - BTW_NUMBER
        - BT_TIN
        - BUSINESS_REGISTER_ID
        - BW_BRN
        - BY_BRN
        - BY_COC
        - BY_GGN
        - BY_TRN
        - CDN_US_FL
        - CF_BRN
        - CG_BRN
        - CH_UID
        - CH_VAT_ID
        - CID_NY_US
        - CIF_ES
        - CIK_US
        - CL_RUT
        - CM_BRN
        - CM_CCN
        - CM_TRN
        - CN_BRN
        - CN_IE
        - CN_JP
        - CN_US_IA
        - CN_VAT_15
        - CN_VAT_18
        - CO_NIT
        - CR_TRN
        - CVR_DK
        - CV_BRN
        - CX_BPN
        - CY_CCN
        - CY_GGN
        - CY_TRN
        - CZ_CBN
        - CZ_DIC
        - CZ_ICO
        - CZ_TRN
        - DE_BNUM
        - DE_TAX_ID
        - DJ_BRN
        - DUNS_ID
        - DZ_BRN
        - DZ_CCN
        - EE_BRN
        - EE_COC
        - EE_GGN
        - EE_TRN
        - EG_BRN
        - EG_CCN
        - EG_TRN
        - ES_NIE
        - ES_NIF
        - ET_BRN
        - EU_VAT_ID_AT
        - EU_VAT_ID_BE
        - EU_VAT_ID_BG
        - EU_VAT_ID_CY
        - EU_VAT_ID_CZ
        - EU_VAT_ID_DE
        - EU_VAT_ID_DK
        - EU_VAT_ID_EE
        - EU_VAT_ID_EL
        - EU_VAT_ID_ES
        - EU_VAT_ID_FI
        - EU_VAT_ID_FR
        - EU_VAT_ID_HR
        - EU_VAT_ID_HU
        - EU_VAT_ID_IE
        - EU_VAT_ID_IT
        - EU_VAT_ID_LT
        - EU_VAT_ID_LU
        - EU_VAT_ID_LV
        - EU_VAT_ID_MT
        - EU_VAT_ID_NL
        - EU_VAT_ID_PL
        - EU_VAT_ID_PT
        - EU_VAT_ID_RO
        - EU_VAT_ID_SE
        - EU_VAT_ID_SI
        - EU_VAT_ID_SK
        - EU_VAT_ID_UK
        - FID_US_WY
        - FR_CCN
        - FR_SIREN
        - FR_SIRET
        - GA_CCN
        - GA_TRN
        - GE_BRN
        - GE_COC
        - GE_GGN
        - GE_TRN
        - GH_BRN
        - GH_TRN
        - GI_BRN
        - GI_CCN
        - GI_GGN
        - GI_TRN
        - GM_BRN
        - GN_BRN
        - GQ_BRN
        - GR_AFM
        - GR_BRN
        - GR_COC
        - GR_GGN
        - GR_PERS_ID
        - GR_TRN
        - GST_CA
        - GST_MY
        - HN_NTRN
        - HR_BRN
        - HR_COC
        - HR_COMP_ID
        - HR_GGN
        - HR_TRN
        - HST_CA
        - HU_TAX_ID
        - HU_TIN
        - ID_CRN
        - ID_NL_OB
        - ID_TIN
        - ID_TVA_FR
        - ID_TVA_LU
        - ID_UTR
        - ID_VAT_UK
        - IN_CIN
        - IN_DOCR
        - IN_GST
        - IN_LBT
        - IN_LSN
        - IN_MOEDU
        - IN_PAN
        - IN_SEC
        - IN_SERVICE_TAX_ID
        - IN_SRN
        - IQ_BRN
        - IR_CCN
        - IS_BRN
        - IS_CCN
        - IS_GGN
        - IT_FISC_ID
        - IT_VAT_ID
        - JO_CCN
        - KE_BRN
        - KG_BRN
        - KG_COC
        - KH_BRN
        - KH_TIN
        - KM_BRN
        - KR_CORP_ID
        - KR_CRBN
        - KR_VAT_ID
        - KVK_NL
        - KW_BRN
        - KW_CCN
        - KZ_BRN
        - KZ_CCN
        - KZ_GGN
        - KZ_TRN
        - LA_TIN
        - LB_BRN
        - LB_CCN
        - LEI_ID
        - LK_TIN
        - LR_BRN
        - LS_BRN
        - LT_BRN
        - LT_COC
        - LT_GGN
        - LT_TRN
        - LV_GGN
        - LV_TRN
        - MA_BRN
        - MA_CCN
        - MA_TRN
        - MD_BRN
        - MD_COC
        - MD_GGN
        - MD_TRN
        - ME_GGN
        - ME_TRN
        - MG_BRN
        - MK_BRN
        - MK_COC
        - MK_GGN
        - MK_TRN
        - ML_BRN
        - MM_TIN
        - MR_BRN
        - MT_BRN
        - MT_COC
        - MT_GGN
        - MT_TRN
        - MU_BRN
        - MU_TRN
        - MV_TIN
        - MW_BRN
        - MX_CURP
        - MX_FTRN
        - MX_RFC
        - MY_BRN
        - MZ_BRN
        - NA_BRN
        - NE_BRN
        - NG_BRN
        - NL_SI_ID
        - NL_TAX_ID
        - NP_TIN
        - OM_BRN
        - OM_CCN
        - PE_RUC
        - PH_TAX_ID
        - PK_TIN
        - PL_NIF
        - PL_NIP
        - PL_TAX_ID
        - PST_CA
        - PT_CCN
        - PY_UTR
        - QA_BRN
        - QA_CCN
        - RN_US_OR
        - RO_BRN
        - RO_CCN
        - RO_GGN
        - RO_TAX_ID
        - RSIN_NL
        - RS_BRN
        - RU_INN
        - RU_KPP
        - RU_OFK
        - RU_OKPO
        - RW_BRN
        - SA_BRN
        - SA_CCN
        - SC_BRN
        - SC_CCN
        - SD_BRN
        - SE_BRN
        - SE_ORG_ID
        - SI_BRN
        - SI_CCN
        - SI_GGN
        - SI_TAX_ID
        - SK_DIC
        - SK_ICO
        - SK_TRN
        - SL_BRN
        - SN_BRN
        - SN_CCN
        - SN_TRN
        - SO_BRN
        - SZ_BRN
        - TD_BRN
        - TG_BRN
        - TH_PERS_ID
        - TH_TAX_ID
        - TJ_BRN
        - TJ_COC
        - TJ_GGN
        - TJ_TRN
        - TL_TIN
        - TM_BRN
        - TM_COC
        - TM_TRN
        - TR_BRN
        - TR_CCN
        - TR_GGN
        - TR_TAX_ID
        - TR_TAX_OFFICE_ID
        - TT_TIN
        - TW_BRN
        - TW_GUID
        - TW_TAX_ID
        - TZ_BRN
        - UA_BRN
        - UA_CCN
        - UA_GGN
        - UA_TAX_ID
        - UA_USREOU
        - UBI_US_WS
        - UG_BRN
        - UK_IN_ID
        - UK_VAT_ID
        - US_BRN
        - US_EMPL_ID
        - US_FTIN
        - US_SEC_ID
        - UZ_BRN
        - UZ_COC
        - UZ_GGN
        - UZ_TRN
        - VEN_NL
        - VE_NIT
        - VE_RIF
        - VN_BRN
        - VN_TIN
        - WR_BSC
        - WR_BTRN
        - WR_CAGE
        - WR_CINS
        - WR_CUSIP
        - WR_MIN
        - XK_BRN
        - XK_GGN
        - YE_BRN
        - YE_CCN
        - ZA_TIN
        - ZM_BRN
        - ZW_BRN
        - ZW_COC
        - ZW_GGN
        - ZW_TRN
      title: IdentifierTypeTechnicalKey
    BusinessPartnerLookupResult:
      type: object
      properties:
        pageSize:
          type: integer
        total:
          type: integer
        page:
          type: integer
        values:
          type: array
          items:
            $ref: '#/components/schemas/BusinessPartnerLookupMatch'
        debugInfo:
          type: object
          properties:
            features:
              type: array
              items:
                type: object
                properties:
                  feature:
                    type: string
                  active:
                    type: boolean
            request:
              $ref: '#/components/schemas/BusinessPartnerLookupRequest'
      title: BusinessPartnerLookupResult
    BusinessPartnerLookupMatch:
      type: object
      properties:
        businessPartner:
          $ref: '#/components/schemas/BusinessPartner'
        matchingProfile:
          $ref: '#/components/schemas/MatchingProfile'
      title: BusinessPartnerLookupMatch
    LegalForm:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/LegalFormName'
        url:
          $ref: '#/components/schemas/LegalFormUrl'
        technicalKey:
          $ref: '#/components/schemas/LegalFormTechnicalKey'
        language:
          $ref: '#/components/schemas/schemas-Language'
        mainAbbreviation:
          $ref: '#/components/schemas/LegalFormMainAbbreviation'
      title: LegalForm
    ValueParam:
      type: object
      properties:
        value:
          type: string
      title: ValueParam
    DataMapperDefinition:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
        lastUpdatedAt:
          type: string
        creatorUsername:
          type: string
          description: User name of the creator of the data mapper definiton
        creatorOrganization:
          type: string
          description: Organization of the creator of the data mapper definiton
        shareWithOrganization:
          type: boolean
          description: >-
            Toggle to enable that the data mapper definition is shared with the
            whole organization
        labels:
          description: Labels to categorize the storage
          type: array
          items:
            type: string
        name:
          type: string
          description: Name of the data mapper definition
        valueMappings:
          description: Maps a cons from raw data to CDQ data model
          type: array
          items:
            $ref: '#/components/schemas/ValueMapping'
        inputMapping:
          $ref: '#/components/schemas/BusinessPartnerMappingRule'
        outputMapping:
          $ref: '#/components/schemas/BusinessPartnerMappingRule'
      title: DataMapperDefinition
    CustomTransformation:
      type: object
      properties:
        name:
          type: string
          description: >
            Name of the script. This name should be used to define in which
            mapping this transformation should be used.

            ```

            {
              "customTransformations": [
                {
                  "name": "lv_locality_transformation"
                  "code": "def transform(raw_data):\r\n                json_result = json.loads(raw_data)\r\n                return json_result[\"address\"].split(",")[0]"
                },
                {
                          "name": "lv_thoroughfare_transformation"
                          "code": "def transform(raw_data):\r\n                json_result = json.loads(raw_data)\r\n                return json_result[\"address\"].split(",")[1]"
                 }
              ]
            ...
              "inputMapping": {
                "businessPartnerAttributeMappings": [
                  {
                    "sourceAttributes": [
                      "businessPartner.record"
                    ], // when all raw data should be provided then use $
                    "targetAttributes": [
                      "businessPartner.externalId"
                    ],
                    "transformations": [
                      {
                        "type" : "CUSTOM",
                        "parameters": [
                          {
                            "key" : "transformationName",
                            "value" : "lv_locality_transformation"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "sourceAttributes": [
                        "businessPartner.record"
                    ],
                    "targetAttributes": [
                      "address.localities[0].value"
                    ],
                    "transformations": [
                      {
                        "type" : "CUSTOM",
                        "parameters": [
                          {
                            "key" : "transformationName",
                            "value" : "lv_locality_transformation"
                          }
                        ]
                      }
                    ]
                  },
                {
                  "sourceAttributes": [
                      "businessPartner.record" or "$"
                  ],
                  "targetAttributes": [
                      "address.thoroughfare[0].value",
                      "address.thoroughfare[1].value"
                  ],
                  "transformations": [
                    {
                      "type" : "CUSTOM",
                      "parameters": [
                        {
                          "key" : "transformationName",
                          "value" : "lv_thoroughfare_transformation"
                        }
                      ]
                    }
                  ]
                }
                ]
              }

            }

            ```
        code:
          type: string
          description: The code of the given script
      title: CustomTransformation
    BusinessPartnerMappingRule:
      type: object
      properties:
        businessPartnerAttributeMappings:
          description: Maps a business partner attribute from raw data to CDQ data model
          type: array
          items:
            $ref: '#/components/schemas/AttributeMappingRule'
        addressesAttributeMappings:
          description: Maps an address attribute from raw data to CDQ data model
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/AttributeMappingRule'
      title: BusinessPartnerMappingRule
    AttributeMappingRule:
      type: object
      properties:
        sourceConstant:
          type: string
        sourceAttributes:
          type: array
          items:
            type: string
        targetAttributes:
          type: array
          items:
            type: string
        targetAttributeTypes:
          type: array
          items:
            type: string
        countryScopes:
          type: array
          items:
            type: string
        selectionType:
          $ref: '#/components/schemas/SourceSelectionType'
        separationType:
          $ref: '#/components/schemas/SourceSeparationType'
        isMandatoryAttribute:
          type: boolean
        valueMapping:
          type: string
        defaultValue:
          type: string
        transformations:
          type: array
          items:
            $ref: '#/components/schemas/Transformation'
          maxItems: 10
      title: AttributeMappingRule
    Transformation:
      type: object
      properties:
        type:
          x-apimatic-facade: '#/components/schemas/TransformationTypeParam'
          $ref: '#/components/schemas/TransformationTypeParam'
        parameters:
          type: array
          description: |
            Depending on the transformation type diffrent parametrs can be givne
            * `UPPER_CASE` - no parameters
            * `LOWER_CASE` - no parameters
          items:
            $ref: '#/components/schemas/TransformationParameter'
      title: Transformation
    TransformationParameter:
      type: object
      properties:
        key:
          type: string
          description: Transformation parametery key
        value:
          type: string
          description: Value of the parameter
      title: TransformationParameter
    TransformationTypeParam:
      type: string
      enum:
        - UPPER_CASE
        - LOWER_CASE
      title: TransformationTypeParam
    TransformationType:
      type: string
      title: TransformationType
    SourceSelectionType:
      type: string
      enum:
        - COMMA
        - EMPTY
        - HYPHEN
        - SEMICOLON
        - SPACE
        - XOR
      title: SourceSelectionType
    SourceSeparationType:
      type: string
      enum:
        - LENGTH
      title: SourceSeparationType
    DataMapperDefinitionRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the data mapper definition
        labels:
          description: Labels to categorize the data mapper definition
          type: array
          items:
            type: string
            description: Label to categorize the data mapper definition
        shareWithOrganization:
          type: boolean
        valueMappings:
          type: array
          items:
            $ref: '#/components/schemas/ValueMapping'
        inputMapping:
          $ref: '#/components/schemas/BusinessPartnerMappingRule'
        outputMapping:
          $ref: '#/components/schemas/BusinessPartnerMappingRule'
      title: DataMapperDefinitionRequest
    ValueMapping:
      type: object
      properties:
        sourceValue:
          type: string
          description: The source value for a value mapping
        targetValue:
          type: string
          description: The target value for a value mapping
        targetAttribute:
          type: string
          description: >-
            The target attribute (business partner or address for a value
            mapping)
      title: ValueMapping
    DataMapperDefinitionPage:
      type: object
      properties:
        numberOfPages:
          type: integer
          format: int32
          description: Number of pages available
        page:
          type: integer
          format: int32
          description: Current page
        pageSize:
          type: integer
          format: int32
          description: Current page size
        total:
          type: integer
          format: int32
          description: Total items available
        values:
          type: array
          items:
            $ref: '#/components/schemas/DataMapperDefinition'
      title: DataMapperDefinitionPage
    TransformRequest:
      deprecated: true
      type: object
      properties:
        recordsAsJsonString:
          type: array
          items:
            type: string
      title: TransformRequest
    ImportJob:
      type: object
      properties:
        id:
          type: string
        domain:
          type: string
        createdBy:
          type: string
        createdAt:
          type: string
        modifiedAt:
          type: string
        progress:
          type: integer
        status:
          $ref: '#/components/schemas/JobStatus'
        statusMessage:
          type: string
        storageId:
          type: string
        dataSource:
          type: string
        dataMapperDefinitionId:
          type: string
        externalIdColumn:
          type: string
        featureOn:
          type: array
          items:
            type: string
        result:
          $ref: '#/components/schemas/ImportJobResult'
      title: ImportJob
    ImportJobResult:
      type: object
      properties:
        statistics:
          $ref: '#/components/schemas/ImportJobStatistics'
      title: ImportJobResult
    ImportJobStatistics:
      type: object
      properties:
        numberOfInserts:
          type: integer
          format: int32
        numberOfUpdates:
          type: integer
          format: int32
        numberOfFailed:
          type: integer
          format: int32
        skipped:
          type: array
          items:
            $ref: '#/components/schemas/CorruptedLineResult'
        skippedStartAfter:
          type: string
        skippedNextStartAfter:
          type: string
      title: ImportJobStatistics
    CorruptedLineResult:
      type: object
      properties:
        line:
          type: integer
          format: int64
        column:
          type: integer
          format: int32
      title: CorruptedLineResult
    TransformationJob:
      type: object
      properties:
        id:
          type: string
        domain:
          type: string
        createdBy:
          type: string
        createdAt:
          type: string
        modifiedAt:
          type: string
        progress:
          type: integer
        status:
          $ref: '#/components/schemas/JobStatus'
        statusMessage:
          type: string
        storageId:
          type: string
        dataSourceId:
          type: string
        dataMapperDefinitionId:
          type: string
        result:
          $ref: '#/components/schemas/TransformationJobResult'
      title: TransformationJob
    TransformationJobResult:
      type: object
      properties:
        statistics:
          $ref: '#/components/schemas/TransformationJobStatistics'
      title: TransformationJobResult
    TransformationJobStatistics:
      type: object
      properties:
        numberOfRecords:
          type: integer
          format: int64
        numberOfFailed:
          type: integer
          format: int64
      title: TransformationJobStatistics
    EventStoreInitializerRequest:
      type: object
      required:
        - storageId
      properties:
        storageId:
          type: string
        dataSourceId:
          type: string
        startAfter:
          type: string
        featuresOn:
          type: array
          description: >
            Feature(s) to be used during the upsert:

            * `INITIALIZE` - Can be used only when the storage has never had
            UPDATES feature. Creates only BusinessPartnerCreated events without
            checking for existing BusinessPartnerEvents. Goal is to speed up
            setting up UPDATES feature.

            * `NO_PERSISTENCE` - Do not persist events. Execution is performed
            for test and debug purposes to check e.g. if no events are missing.
          items:
            x-apimatic-facade: '#/components/schemas/EventCreateFeatureParam'
            $ref: '#/components/schemas/EventCreateFeatureParam'
      title: EventStoreInitializerRequest
    EventCreateFeatureParam:
      type: string
      enum:
        - INITIALIZE
        - NO_PERSISTENCE
      title: EventCreateFeatureParam
    EventCreateFeature:
      type: string
      title: EventCreateFeature
    StorageDeleteFeatureParam:
      type: string
      enum:
        - FORCE_DATA_MIRROR
      title: StorageDeleteFeatureParam
    StorageDeleteFeature:
      type: string
      title: StorageDeleteFeature
    EventStoreInitializerJob:
      type: object
      properties:
        id:
          type: string
        createdBy:
          type: string
        createdAt:
          type: string
        modifiedAt:
          type: string
        progress:
          type: integer
        status:
          $ref: '#/components/schemas/JobStatus'
        message:
          type: string
        storageId:
          type: string
        dataSourceId:
          type: string
        startAfter:
          type: string
        eventStoreId:
          type: string
      title: EventStoreInitializerJob
    ToggleUpdateMonitoringJobRequest:
      type: object
      required:
        - enable
        - storageId
        - dataSourceId
      properties:
        enable:
          $ref: '#/components/schemas/ToggleUpdateMonitoringRequestEnable'
        storageId:
          $ref: '#/components/schemas/BusinessPartnerStorageId'
        dataSourceId:
          $ref: '#/components/schemas/BusinessPartnerStorageDataSourceId'
        countryShortName:
          $ref: '#/components/schemas/CountryShortName'
      title: ToggleUpdateMonitoringJobRequest
    ToggleUpdateMonitoringJobResult:
      type: object
      properties:
        job:
          $ref: '#/components/schemas/ToggleUpdateMonitoringJob'
        status:
          type: string
          description: |
            status:
              * `OK` - Toggle Update Monitoring Job has been fetched successfully
              * `NOT_FOUND` - Toggle Update Monitoring Job with that ID has not been
            found
      title: ToggleUpdateMonitoringJobResult
    ToggleUpdateMonitoringJob:
      type: object
      properties:
        id:
          type: string
        createdBy:
          type: string
        createdAt:
          type: string
        modifiedAt:
          type: string
        progress:
          type: integer
        status:
          $ref: '#/components/schemas/JobStatus'
        statusMessage:
          type: string
        enable:
          $ref: '#/components/schemas/ToggleUpdateMonitoringRequestEnable'
        storageId:
          $ref: '#/components/schemas/BusinessPartnerStorageId'
        dataSourceId:
          $ref: '#/components/schemas/BusinessPartnerStorageDataSourceId'
        countryShortName:
          $ref: '#/components/schemas/CountryShortName'
      title: ToggleUpdateMonitoringJob
    BusinessPartnerUpdatesReportRequest:
      x-hide: true
      type: object
      required:
        - storageId
      properties:
        storageId:
          type: string
        from:
          type: string
          example: 2019-12-31T08:35
          description: >-
            Only show updates which have been modified after this date (ISO
            8601). Default is to show the 'last seven days' and farthest in the
            past is 'since three month'
        to:
          type: string
          example: 2019-12-31T16:47
          description: Only show updates which have been modified to this date (ISO 8601).
      title: BusinessPartnerUpdatesReportRequest
    BusinessPartnerUpdatesReportJob:
      x-hide: true
      type: object
      properties:
        id:
          type: string
        createdBy:
          type: string
        createdAt:
          type: string
        modifiedAt:
          type: string
        progress:
          type: integer
        status:
          $ref: '#/components/schemas/JobStatus'
        message:
          type: string
        storageId:
          type: string
        from:
          type: string
        to:
          type: string
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/FileResource'
        summary:
          $ref: '#/components/schemas/BusinessPartnerUpdatesReportSummary'
      title: BusinessPartnerUpdatesReportJob
    BusinessPartnerUpdatesReportSummary:
      type: object
      properties:
        numberOfUpdates:
          type: integer
        numberOfCountries:
          type: integer
      title: BusinessPartnerUpdatesReportSummary
    AnalysisJob:
      type: object
      properties:
        createdAt:
          type: string
        domain:
          type: string
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/Job'
        progress:
          type: integer
          format: int32
        status:
          $ref: '#/components/schemas/JobStatus'
        user:
          type: string
      title: AnalysisJob
    Job:
      type: object
      properties:
        id:
          type: string
        commands:
          type: array
          items:
            type: string
        domain:
          type: string
        user:
          type: string
        createdAt:
          type: string
        modifiedAt:
          type: string
        jobStatus:
          $ref: '#/components/schemas/JobStatus'
        lastJobStatus:
          $ref: '#/components/schemas/JobStatus'
        dockerImageUrl:
          type: string
        environmentVariables:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
        jobDependencies:
          type: array
          items:
            $ref: '#/components/schemas/JobDependency'
        resourceRequest:
          $ref: '#/components/schemas/JobResourceRequest'
        mainLabel:
          type: string
        labels:
          description: Labels to categorize the storage
          type: array
          items:
            $ref: '#/components/schemas/Label'
        inputUri:
          type: string
        reportUri:
          type: string
        progress:
          type: integer
          format: int32
      title: Job
    JobStatus:
      type: string
      enum:
        - UNKNOWN
        - CREATED
        - PERSISTED
        - SCHEDULED
        - WAITING
        - COULDNT_START
        - RUNNING
        - FINISHED
        - DIED
        - CANCELED
        - FAILED
      example: RUNNING
      description: Job execution status.
      title: JobStatus
    EnvironmentVariable:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      title: EnvironmentVariable
    JobDependency:
      type: object
      properties:
        id:
          type: string
      title: JobDependency
    Label:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      title: Label
    JobResourceRequest:
      type: object
      properties:
        cpuLimit:
          type: number
          format: float
        cpuRequest:
          type: number
          format: float
        defined:
          type: boolean
          example: false
        memoryLimit:
          type: integer
          format: int32
        memoryRequest:
          type: integer
          format: int32
      title: JobResourceRequest
    TransformationJobRequest:
      type: object
      properties:
        dataSourceId:
          type: string
          description: >-
            If set, only the records that belong to the data source identified
            by this ID are transformed. By default all records of the storage
            (means from all data sources) are transformed
        storageId:
          type: string
          description: The ID of the storage for which the records should be transformed.
        dataMapperDefinitionId:
          type: string
          description: >-
            Parameter to enforce the usage of the data mapper definition
            identified by this ID. By default the data mapper definition
            attached to the data source will be used.
        startAfter:
          type: string
          description: >-
            Processes transformation of records starting from the ID
            'startAfter'
        featuresOn:
          type: array
          items:
            x-apimatic-facade: '#/components/schemas/TransformationJobFeatureParam'
            $ref: '#/components/schemas/TransformationJobFeatureParam'
      required:
        - storageId
      title: TransformationJobRequest
    TransformationJobFeature:
      type: string
      title: TransformationJobFeature
    TransformationJobFeatureParam:
      type: string
      enum:
        - UPSERT_CHANGES_ONLY
        - LAB_USE_QUEUES
      title: TransformationJobFeatureParam
    ApiError:
      type: object
      properties:
        code:
          type: integer
        path:
          type: string
        timestamp:
          type: string
        error:
          type: string
        message:
          type: string
      title: ApiError
    DnbImportJobFeature:
      type: string
      description: Modifies behavior of a D&B Import Job.
      enum:
        - ENRICH_COMMERCIAL_ULTIMATE
        - ENABLE_PARTIAL_QUOTA_CONSUMPTION
        - SKIP_DNB_IMPORT
      x-enumDescriptions:
        ENRICH_COMMERCIAL_ULTIMATE: Enriches Commercial Ultimate.
        ENABLE_PARTIAL_QUOTA_CONSUMPTION: >-
          Enables to run import job on a remaining quota when full quota not
          available.
        SKIP_DNB_IMPORT: >-
          Skips requesting D&B data from D&B services. Can be used to enrich
          only Commercial Ultimate.
      title: DnbImportJobFeature
    DnbCreateLODJob:
      type: object
      properties:
        id:
          type: string
        progress:
          type: integer
        status:
          $ref: '#/components/schemas/JobStatus'
        statusMessage:
          type: string
        createdBy:
          type: string
        createdAt:
          type: string
        modifiedAt:
          type: string
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/FileResource'
      title: DnbCreateLODJob
    DnbImportJob:
      type: object
      properties:
        id:
          type: string
        progress:
          type: integer
        status:
          $ref: '#/components/schemas/JobStatus'
        statusMessage:
          type: string
        createdBy:
          type: string
        createdAt:
          type: string
        modifiedAt:
          type: string
        result:
          $ref: '#/components/schemas/DnbImportJobResult'
      title: DnbImportJob
    DnbImportJobResult:
      type: object
      properties:
        statistics:
          $ref: '#/components/schemas/DnbImportJobStatistics'
      title: DnbImportJobResult
    DnbImportJobStatistics:
      type: object
      properties:
        numberOfRecords:
          type: number
          description: Number of records in the input file
        numberOfDuplicates:
          type: number
          description: Number of duplicates in input file which have the same DUNS
        numberOfInserts:
          type: number
          description: Number of newly created records
        numberOfUpdates:
          type: number
          description: Number of updated records
        numberOfFailed:
          type: number
          description: Number of records updates / retrieves fails
        numberOfQuotaExceeded:
          type: integer
          format: int64
          description: Number of not processed records which exceeded defined quota limit
        numberOfUnknown:
          type: number
          description: Number of non-retrieved records from DNB service
      title: DnbImportJobStatistics
    DnbReportJob:
      type: object
      properties:
        id:
          type: string
        progress:
          type: integer
        status:
          $ref: '#/components/schemas/JobStatus'
        statusMessage:
          type: string
        createdBy:
          type: string
        createdAt:
          type: string
        modifiedAt:
          type: string
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/FileResource'
      title: DnbReportJob
    FileResource:
      type: object
      properties:
        url:
          type: string
          description: Url of file stored
          example: /customer-upload/file.xlsx
        createdBy:
          type: string
        createdAt:
          type: string
        modifiedAt:
          type: string
      title: FileResource
    RestartMonitorRequest:
      type: object
      properties:
        storageId:
          type: string
        featuresOn:
          description: |
            Features to be turned on:
            * `CDQ_POOL` - Performs CDQ.POOL restart.
          type: array
          items:
            x-apimatic-facade: '#/components/schemas/RestartMonitorJobFeatureParam'
            $ref: '#/components/schemas/RestartMonitorJobFeatureParam'
      title: RestartMonitorRequest
    RestartMonitorJobs:
      type: object
      properties:
        monitorStorageCleanupJob:
          $ref: '#/components/schemas/MonitorStorageCleanupJob'
        sharingJob:
          $ref: '#/components/schemas/SharingJob'
      title: RestartMonitorJobs
    MonitorStorageCleanupJob:
      type: object
      properties:
        id:
          type: string
        progress:
          type: integer
        status:
          $ref: '#/components/schemas/JobStatus'
        statusMessage:
          type: string
        storageId:
          type: string
        createdBy:
          type: string
        createdAt:
          type: string
        modifiedAt:
          type: string
      title: MonitorStorageCleanupJob
    SharingJob:
      type: object
      properties:
        id:
          type: string
        progress:
          type: integer
        status:
          $ref: '#/components/schemas/JobStatus'
        statusMessage:
          type: string
        storageId:
          type: string
        createdBy:
          type: string
        createdAt:
          type: string
        modifiedAt:
          type: string
      title: SharingJob
    RestartMonitorJobFeatureParam:
      type: string
      enum:
        - CDQ_POOL
      title: RestartMonitorJobFeatureParam
    RestartMonitorJobFeature:
      type: string
      title: RestartMonitorJobFeature
    StorageSharingRequest:
      x-hide: true
      type: object
      required:
        - disclose
        - storageId
      properties:
        storageId:
          type: string
        disclose:
          type: boolean
        businessPartnerIds:
          type: array
          items:
            type: string
        dataSourceIds:
          type: array
          items:
            type: string
        countryShortNames:
          type: array
          items:
            $ref: '#/components/schemas/CountryShortName'
        sharingStatuses:
          type: array
          items:
            type: string
          description: |
            Business Partner Sharing Statuses which should be filtered.

            Sharing Statuses which can be filtered out:
            * `UNDER_CONSIDERATION`
            * `UNDISCLOSED_RECORD`
            * `MISSING_INFORMATION_FOR_LINKAGE`
            * `ERRONEOUS_INFORMATION_FOR_LINKAGE`
            * `ERRONEOUS_RECORD`
            * `PENDING_LINKAGE_DECISION`
            * `PROCESS_ISSUE`
            * `SHARED_WITH_NO_MATCH`
            * `SHARED_WITH_CONFIDENT_MATCH`
            * `SHARED_WITH_NO_MATCH_BY_REVIEW`
            * `SHARED_BY_REVIEW`
      title: StorageSharingRequest
    StorageSharingJob:
      x-hide: true
      type: object
      properties:
        id:
          type: string
        progress:
          type: integer
        status:
          $ref: '#/components/schemas/JobStatus'
        statusMessage:
          type: string
        storageId:
          type: string
        createdBy:
          type: string
        createdAt:
          type: string
        modifiedAt:
          type: string
      title: StorageSharingJob
    DataDumpJobRequest:
      type: object
      properties:
        storageId:
          type: string
        dataMapperDefinitionId:
          type: string
        optionCountriesFilter:
          type: array
          items:
            type: string
        dataSource:
          type: string
          description: Data source for do be dumped
        featuresOn:
          description: >
            Features to be turned on:

            * `FETCH_RECORD` - Allows to switch including record field to reduce
            data size. By default turned on.
          type: array
          items:
            x-apimatic-facade: '#/components/schemas/DataDumpJobFeatureParam'
            $ref: '#/components/schemas/DataDumpJobFeatureParam'
        featuresOff:
          description: >
            Features to be turned off:

            * `FETCH_RECORD` - Allows to switch including record field to reduce
            data size. By default turned on.
          type: array
          items:
            x-apimatic-facade: '#/components/schemas/DataDumpJobFeatureParam'
            $ref: '#/components/schemas/DataDumpJobFeatureParam'
      required:
        - storageId
      title: DataDumpJobRequest
    DataDumpJobFeatureParam:
      type: string
      enum:
        - FETCH_RECORD
      title: DataDumpJobFeatureParam
    DataDumpJobFeature:
      type: string
      title: DataDumpJobFeature
    DataDumpJob:
      type: object
      properties:
        id:
          type: string
        progress:
          type: integer
        status:
          $ref: '#/components/schemas/JobStatus'
        statusMessage:
          type: string
        storageId:
          type: string
        createdBy:
          type: string
        createdAt:
          type: string
        modifiedAt:
          type: string
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/FileResource'
      title: DataDumpJob
    FileUploadRequest:
      type: object
      properties:
        url:
          type: string
          description: File name which will be uploaded in `customer-uploads/` directory
          example: dq-chart.png or requestedDirectory/dq-chart.png
      required:
        - url
      title: FileUploadRequest
    FileUploadResult:
      type: object
      properties:
        uploadLink:
          type: string
          description: ''
          example: ''
        uploadMethod:
          type: string
          description: Method of uploading file
          example: PUT
        expiresAt:
          type: string
          description: How long this link will be active
          example: ISO date format, when link expires
        url:
          type: string
          description: Url to file, place where it is stored
          example: customer-uploads/cdlbot/dq-chart.png
      title: FileUploadResult
    FileDeleteResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/FileDeleteResult'
      title: FileDeleteResponse
    FileDeleteResult:
      type: object
      properties:
        url:
          type: string
        status:
          type: string
        message:
          type: string
      title: FileDeleteResult
    FileDownloadResult:
      allOf:
        - $ref: '#/components/schemas/FileResource'
        - type: object
          properties:
            expiresAt:
              type: string
            downloadLink:
              type: string
            downloadMethod:
              type: string
      title: FileDownloadResult
    FileDownloadRequest:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          description: ID of the file
          example: customer-upload/user/file.xlsx
        downloadLinkAge:
          description: Number of days the download link is active
          type: integer
          format: int64
          default: 0
          example: 0
      title: FileDownloadRequest
    ResourcesListResult:
      type: object
      properties:
        startAfter:
          type: string
          description: Value of continuation token from the request
        limit:
          type: integer
          format: int32
        nextStartAfter:
          type: string
          description: >-
            Value of continuation token requeired to retrieve results from next
            page. Should be passed in the next request as "startAfter" parameter
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileResource'
          description: Array of FileResource objects
      title: ResourcesListResult
    FetchDnbRecordRequest:
      type: object
      required:
        - duns
      properties:
        duns:
          type: string
        featuresOn:
          type: array
          description: >
            Feature(s) to be used during the dnb storage creation:

            * `USE_DNB_MASTER_DATA_BASIC` - Use storage for
            DNB_MASTER_DATA_BASIC

            * `USE_DNB_MASTER_DATA_EXTENDED` - Use storage for
            DNB_MASTER_DATA_EXTENDED

            * `USE_DNB_LINKAGE_LNKELI` - Use storage for DNB_LINKAGE_LNKELI
          items:
            x-apimatic-facade: '#/components/schemas/DnbStorageFeatureParam'
            $ref: '#/components/schemas/DnbStorageFeatureParam'
      title: FetchDnbRecordRequest
    FetchDnbRecordResult:
      type: object
      properties:
        dnbRecord:
          $ref: '#/components/schemas/DnbRecord'
        status:
          type: string
          description: |
            status:
              * `OK` - DNB Record has been fetched successfully
              * `NOT_FOUND` - DNB Record with that DUNS does not exist in storage
        message:
          type: string
      title: FetchDnbRecordResult
    DnbRecordsUpsertRequest:
      type: object
      properties:
        dnbRecords:
          type: array
          minItems: 1
          maxItems: 1000
          items:
            $ref: '#/components/schemas/DnbRecord'
        featuresOn:
          type: array
          description: >
            Feature(s) to be used during the dnb storage creation:

            * `USE_DNB_MASTER_DATA_BASIC` - Create storage for
            DNB_MASTER_DATA_BASIC

            * `USE_DNB_MASTER_DATA_EXTENDED` - Create storage for
            DNB_MASTER_DATA_EXTENDED

            * `USE_DNB_LINKAGE_LNKELI` - Create storage for DNB_LINKAGE_LNKELI
          items:
            x-apimatic-facade: '#/components/schemas/DnbStorageFeatureParam'
            $ref: '#/components/schemas/DnbStorageFeatureParam'
      required:
        - dnbRecords
      title: DnbRecordsUpsertRequest
    DnbRecordsUpsertResult:
      type: object
      properties:
        numberOfInserts:
          type: integer
          format: int32
        numberOfUpdates:
          type: integer
          format: int32
        numberOfFailed:
          type: integer
          format: int32
        failures:
          type: array
          items:
            $ref: '#/components/schemas/DnbRecordFailureLog'
      title: DnbRecordsUpsertResult
    DnbRecordFailureLog:
      type: object
      properties:
        id:
          type: string
        duns:
          type: string
        message:
          type: string
      title: DnbRecordFailureLog
    DnbRecord:
      type: object
      properties:
        duns:
          type: string
        cmpelkV2:
          $ref: '#/components/schemas/CmpelkV2'
        dataBlock:
          $ref: '#/components/schemas/DataBlock'
        cdqRecord:
          $ref: '#/components/schemas/BusinessPartner'
        formattedSapRecord:
          $ref: '#/components/schemas/FormattedSapRecord'
        commercialUltimate:
          $ref: '#/components/schemas/CommercialUltimate'
      title: DnbRecord
    DnbRecordsReadFeatureParam:
      type: string
      enum:
        - NUMBER_OF_TOTAL
        - SHOW_CDQ_RECORD
        - SHOW_FORMATTED_SAP_RECORD
        - USE_DNB_MASTER_DATA_BASIC
        - USE_DNB_MASTER_DATA_EXTENDED
        - USE_DNB_LINKAGE_LNKELI
      title: DnbRecordsReadFeatureParam
    DnbRecordsReadFeature:
      type: string
      title: DnbRecordsReadFeature
    DnbRecordPage:
      type: object
      properties:
        startAfter:
          type: string
        limit:
          type: integer
          format: int32
        total:
          type: integer
          format: int32
        values:
          type: array
          items:
            $ref: '#/components/schemas/DnbRecord'
        nextStartAfter:
          type: string
      title: DnbRecordPage
    CommercialUltimate:
      type: object
      properties:
        duns:
          type: string
        primaryName:
          type: string
        primaryAddress:
          $ref: '#/components/schemas/DnBAddress'
        path:
          type: array
          items:
            type: object
            properties:
              duns:
                type: string
              primaryName:
                type: string
              parentDuns:
                type: string
      title: CommercialUltimate
    DnBAddress:
      type: object
      example: ''
      description: >-
        The details of the single primary or physical address at which the
        entity is located.
      properties:
        language:
          type: object
          example: ''
          description: The details of the language in which this address was recorded.
          properties:
            description:
              type: string
              example: English
              description: The name of the language in which this address was recorded.
            dnbCode:
              type: integer
              example: 39
              description: >-
                A unique code assigned by Dun & Bradstreet to identify the
                language in which this address was recorded.
        addressCountry:
          type: object
          example: ''
          description: The details of the country in which this address is located.
          properties:
            name:
              type: string
              example: United States
              description: The name of the country in which this address is located.
            isoAlpha2Code:
              type: string
              example: US
              description: >-
                The two-letter country code, defined by the International
                Organization for Standardization (ISO) ISO 3166-1 scheme
                identifying the country in which this address is located.
            fipsCode:
              type: string
              example: US
              description: >-
                The Federal Information Processing Standards (FIPS) code value
                that identifies the country in which this address is located.
        continentalRegion:
          type: object
          example: ''
          description: >-
            The details of the continental region in which this address is
            located.
          properties:
            name:
              type: string
              example: North America
              description: >-
                The name of the continental region for this
                address.<br/><br/>Possible values:<br/>- Africa<br/>- Asia
                Pacific<br/>- Europe<br/>- Latin America<br/>- Middle East<br/>-
                North America
        addressLocality:
          type: object
          example: ''
          description: >-
            The details of the city, town, township, village, borough, etc. in
            which this address is located.
          properties:
            name:
              type: string
              example: SAN FRANCISCO
              description: >-
                The name of the city, town, township, village, borough, etc. in
                which this address is located.
        minorTownName:
          type: string
          example: Booker
          description: >-
            The name of the village, town or suburb when it is not a Primary
            Town or City (e.g., the Booker in Booker, High Wycombe).
        addressRegion:
          type: object
          example: ''
          description: >-
            The details of the locally governed area that forms part of a
            centrally governed nation to identify where this address is located.
          properties:
            name:
              type: string
              example: California
              description: >-
                The name of the locally governed area that forms part of a
                centrally governed nation to identify where this address is
                located.
            abbreviatedName:
              type: string
              example: CA
              description: >-
                The shortened name of the locally governed area that forms part
                of a centrally governed nation. For example 'NJ' for the US
                State New Jersey within Country United States.
            fipsCode:
              type: string
              example: '06'
              description: >-
                The Federal Information Processing Standards (FIPS) code value
                that identifies the region in which this address is located.
        addressCounty:
          type: object
          example: ''
          description: The details of the county in which this address is located.
          properties:
            name:
              type: string
              example: SAN MATEO
              description: The name of the county in which this address is located.
            fipsCode:
              type: string
              example: 81
              description: >-
                The Federal Information Processing Standards (FIPS) code value
                that identifies the county in which this address is located.
        postalCode:
          type: string
          example: 941109999
          description: >-
            An identifier used by the local country's postal authority to
            identify where this address is located.
        postalCodePosition:
          type: object
          example: ''
          description: >-
            The details of the position of the Postal Code when presenting the
            address.
          properties:
            description:
              type: string
              example: Post code presented before Town/City name
              description: >-
                The position of the Postal Code when presenting the address
                (e.g., before the Primary Town/City).
            dnbCode:
              type: integer
              example: 1009
              description: >-
                A unique code assigned by Dun & Bradstreet to identify the
                position of the Postal Code when presenting the address.
        streetNumber:
          type: string
          example: 492
          description: >-
            The number part of the street address where the entity is located.
            <br/><br/>This may be a single number, a number with an appendix, or
            a range of street numbers. <br/><br/>For example, the &quot;51 -
            59C&quot; in the address 51 - 59C Wall Street.
        streetName:
          type: string
          example: KOLLER ST
          description: >-
            The name of the street where the entity is located. <br/><br/>For
            example, &quot;Wall Street&quot; in the address 51 - 59C Wall
            Street.
        streetAddress:
          type: object
          example: ''
          description: The details of the street address where the entity is located.
          properties:
            line1:
              type: string
              example: 492 KOLLER ST
              description: >-
                The first line of the address where the entity is
                located.<br/><br/>For example, &quot;41 Central Chambers&quot;
                in the address <br/>41 Central Chambers<br/>Dame
                Court<br/>Dublin 2
            line2:
              type: string
              example: Suite 100
              description: >-
                The second line of the address where the entity is
                located.<br/><br/>For example, &quot;Dame Court&quot; in the
                address <br/>41 Central Chambers<br/>Dame Court<br/>Dublin 2
        postOfficeBox:
          type: object
          example: ''
          description: >-
            The details of the identifier issued to the entity by a private or
            public Postal Office for the purposes of collecting mail for the
            entity for subsequent collection or delivery.
          properties:
            postOfficeBoxNumber:
              type: string
              example: 5309
              description: >-
                An identifier issued to the entity by a private or public postal
                office for the purposes of collecting mail for the entity for
                subsequent collection or delivery.<br/><br/>This includes only
                the identifying number (or text) and not the textual description
                of the PO Box type. For example the contents would be just the
                number 12 from &quot;PO Box 12&quot;, or just the number 57 from
                &quot;PMB 57&quot;.
            typeDescription:
              type: string
              example: Supplied by public Post Office authority
              description: The type of the PO Box (e.g., Post Office Box, PMB).
            typeDnBCode:
              type: integer
              example: 120
              description: >-
                A unique code assigned by Dun & Bradstreet to identify the type
                of PO Box.
        latitude:
          type: number
          example: 37.777709
          description: >-
            The latitude component of the entity's location defined as the
            angular distance of the primary physical address north or south from
            the Earth's equator expressed in decimal numbers. <br/><br/>Positive
            numbers indicate degrees north. Negative numbers indicate degrees
            south.
        longitude:
          type: number
          example: -122.404624
          description: >-
            The longitude component of the entity's location defined as the
            angular distance of the primary physical address east or west from
            an imaginary line (called the prime meridian) that goes from the
            North Pole to the South Pole expressed in decimal numbers.
            <br/><br/>Positive numbers indicate degrees east. Negative numbers
            indicate degrees west.
        geographicalPrecision:
          type: object
          example: ''
          description: >-
            The details on how close the latitude and longitude coordinates for
            a location are to rooftop level.
          properties:
            description:
              type: string
              example: Street Segment Centroid
              description: >-
                The description of how close the latitude and longitude
                coordinates for a location are to rooftop level.
            dnbCode:
              type: integer
              example: 30256
              description: >-
                A unique code assigned by Dun & Bradstreet to identify how close
                the latitude and longitude coordinates for a location are to
                &quot;rooftop&quot; level.
        isRegisteredAddress:
          type: boolean
          example: 'true'
          description: >-
            Indicates if the primary address is the same as the address of the
            entity as registered with a legal entity.  <br/>  <br/>- If true,
            the primary address is the same as the address of the entity as
            registered with a legal entity.<br/>- If false, the primary address
            is the not same as the address of the entity as registered with a
            legal entity.
        isResidentialAddress:
          type: boolean
          example: 'false'
          description: >-
            Indicates whether or not the Primary Address is classified as
            residential by the governing postal authority<br/><br/>- If true,
            the primary address is classified as residential.<br/>- If false,
            the primary address is not classified as residential.
        statisticalArea:
          type: object
          example: ''
          description: >-
            The details of the various statistical facts associated with this
            address.
          properties:
            cbsaName:
              type: string
              example: San Francisco-Oakland-Hayward CA
              description: >-
                The name assigned to the 5-digit CBSA (Core Based Statistical
                Area) assigned by US Census board to denote a geographical
                region with a relatively high population density at its core and
                close economic ties throughout the area.
            cbsaCode:
              type: string
              example: 41860
              description: >-
                The 5-digit CBSA (Core Based Statistical Area) code assigned by
                US Census board to denote a geographical region with a
                relatively high population density at its core and close
                economic ties throughout the area.
            economicAreaOfInfluenceCode:
              type: string
              example: 146
              description: >-
                A code assigned by the U.S Bureau of Economic Analysis to
                identify the entity's regional market that surrounds a
                metropolitan or micropolitan statistical area serving as a
                regional center of economic activity.
            populationRank:
              type: object
              example: ''
              description: >-
                The details of the statistical facts about population based on
                region's rank.
              properties:
                rankNumber:
                  type: string
                  example: 9
                  description: >-
                    A number classifying the geographic area in which the entity
                    is located based on the resident
                    population.<br/><br/>Values: 0 to 9<br/>0 denotes the lowest
                    population range; 9 denotes the highest.
                rankDnBCode:
                  type: integer
                  example: 10961
                  description: >-
                    A unique code assigned by Dun & Bradstreet to identify the
                    population for the geographical area in which this address
                    is located.
                rankDescription:
                  type: string
                  example: 500,000 +
                  description: >-
                    A range of the population for the geographical area where
                    the entity is located.
        locationOwnership:
          type: object
          example: ''
          description: >-
            The details of the terms under which the entity occupies the
            premises.
          properties:
            description:
              type: string
              example: Rents
              description: >-
                Description of the terms under which the entity occupies the
                premises (e.g., owned, rented, leased).
            dnbCode:
              type: integer
              example: 1129
              description: >-
                A unique code assigned by Dun & Bradstreet to identify the terms
                under which the entity occupies the premises.
        premisesArea:
          type: object
          example: ''
          description: The details of space the entity utilizes at this address.
          properties:
            measurement:
              type: number
              example: 10034
              description: >-
                A number portion of the amount to of space the entity occupies
                at this address (e.g., the 2000 in 2000 square meters).
            unitDescription:
              type: string
              example: square foot
              description: >-
                The measurement unit used to express the premises area
                measurement (e.g., acre, square meters, square feet).
            unitDnBCode:
              type: integer
              example: 3848
              description: >-
                A unique code assigned by Dun & Bradstreet to identify the
                measurement unit used to express the premises area measurement.
            reliabilityDescription:
              type: string
              example: Actual
              description: >-
                The accuracy of the measurement (e.g., actual, estimated,
                modeled).
            reliabilityDnBCode:
              type: integer
              example: 9092
              description: >-
                A unique code assigned by Dun & Bradstreet to identify the
                accuracy of the measurement.
        isManufacturingLocation:
          type: boolean
          example: 'true'
          description: >-
            Indicates if manufacturing activity is performed at this facility by
            the entity.<br/><br/>- If true, the entity performs manufacturing
            activity at this facility.<br/>- If false, the entity does not
            performs manufacturing activity at this facility.
      title: DnBAddress
    SubscriptionUpserts:
      type: object
      properties:
        subscriptions:
          type: array
          minItems: 1
          maxItems: 1000
          items:
            $ref: '#/components/schemas/SubscriptionUpsert'
      required:
        - subscriptions
      title: SubscriptionUpserts
    SubscriptionUpsertsResult:
      type: object
      properties:
        numberOfInserts:
          type: integer
          format: int32
        numberOfUpdates:
          type: integer
          format: int32
        numberOfFailed:
          type: integer
          format: int32
        failures:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionFailureLog'
      title: SubscriptionUpsertsResult
    SubscriptionUpsert:
      type: object
      properties:
        id:
          type: string
        cdqId:
          type: string
        types:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionType'
          minItems: 1
          uniqueItems: true
      required:
        - cdqId
        - types
      title: SubscriptionUpsert
    Subscription:
      type: object
      properties:
        id:
          type: string
        cdqId:
          type: string
        types:
          type: array
          items:
            type: string
          minItems: 1
          uniqueItems: true
        organization:
          type: string
          readOnly: true
        createdAt:
          type: string
          readOnly: true
      required:
        - cdqId
        - types
      title: Subscription
    SubscriptionType:
      type: string
      enum:
        - UPDATES
      title: SubscriptionType
    SubscriptionPage:
      type: object
      properties:
        startAfter:
          type: string
        nextStartAfter:
          type: string
        limit:
          type: integer
          format: int32
        total:
          type: integer
          format: int32
        values:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
      title: SubscriptionPage
    SubscriptionDeletes:
      type: object
      properties:
        cdqIds:
          type: array
          minItems: 1
          maxItems: 1000
          items:
            type: string
            example: CDQ.POOL:5E580DD08E8B454820E8F67E0
      required:
        - cdqIds
      title: SubscriptionDeletes
    SubscriptionDeletesResult:
      type: object
      properties:
        numberOfDeleted:
          type: integer
          format: int32
        numberOfFailed:
          type: integer
          format: int32
        failures:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionFailureLog'
      title: SubscriptionDeletesResult
    SubscriptionFailureLog:
      type: object
      properties:
        id:
          type: string
        cdqId:
          type: string
        message:
          type: string
      title: SubscriptionFailureLog
    FetchSubscriptionRequest:
      type: object
      properties:
        cdqId:
          type: string
          example: CDQ.POOL:5E580DD08E8B454820E8F67E0
      required:
        - cdqId
      title: FetchSubscriptionRequest
    FetchSubscriptionsMetadataRequest:
      type: object
      properties:
        cdqIds:
          type: array
          items:
            type: string
            example: CDQ.POOL:5E580DD08E8B454820E8F67E0
          minItems: 1
          maxItems: 1000
      required:
        - cdqIds
      title: FetchSubscriptionsMetadataRequest
    FetchSubscriptionsMetadataResponse:
      type: object
      properties:
        subscriptionsMetadata:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionMetadata'
      title: FetchSubscriptionsMetadataResponse
    SubscriptionMetadata:
      type: object
      properties:
        cdqId:
          type: string
        subscribed:
          type: boolean
        numberOfSubscribers:
          type: integer
      title: SubscriptionMetadata
    BusinessPartnerIdentityLinkCreate:
      type: object
      properties:
        organization:
          type: string
        storageId:
          type: string
        businessPartnerId:
          type: string
        dataSourceId:
          type: string
        addressId:
          type: string
        addressVersion:
          $ref: '#/components/schemas/BusinessPartnerIdentityLinkAddressVersion'
        externalBusinessPartnerId:
          type: string
        externalAddressId:
          type: string
        cdqBusinessPartnerId:
          deprecated: true
          type: string
        cdqAddressId:
          deprecated: true
          type: string
        cdqId:
          type: string
        referenceAddressVersion:
          $ref: '#/components/schemas/BusinessPartnerIdentityLinkAddressVersion'
        overAllConfidenceScore:
          type: number
          format: double
        businessPartnerConfidenceScore:
          type: number
          format: double
        addressConfidenceScore:
          type: number
          format: double
        matchingExplanation:
          type: string
      title: BusinessPartnerIdentityLinkCreate
    BusinessPartnerIdentityLink:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
        organization:
          type: string
        storageId:
          type: string
        businessPartnerId:
          type: string
        addressId:
          type: string
        addressVersion:
          $ref: '#/components/schemas/BusinessPartnerIdentityLinkAddressVersion'
        externalBusinessPartnerId:
          type: string
        externalAddressId:
          type: string
        referenceAddressVersion:
          $ref: '#/components/schemas/BusinessPartnerIdentityLinkAddressVersion'
        cdqId:
          type: string
        linkageParameter:
          $ref: '#/components/schemas/BusinessPartner'
        linkageStatus:
          type: string
        referenceDataSource:
          type: string
      title: BusinessPartnerIdentityLink
    BusinessPartnerIdentityLinkAddressVersion:
      type: object
      properties:
        languageTechnicalKey:
          $ref: '#/components/schemas/LanguageTechnicalKey'
        characterSetTechnicalKey:
          $ref: '#/components/schemas/CharacterSetTechnicalKey'
      title: BusinessPartnerIdentityLinkAddressVersion
    UpdateMonitor:
      type: object
      nullable: false
      properties:
        id:
          type: string
        referenceDataSource:
          description: 'The monitored Reference Data Source. Available values: SGW'
          type: string
        affectedProperties:
          type: array
          items:
            $ref: '#/components/schemas/BusinessPartnerProperty'
        affectedDataSourceIds:
          type: array
          items:
            type: string
      title: UpdateMonitor
    UpdateMonitorParam:
      type: object
      required:
        - referenceDataSource
      nullable: false
      properties:
        id:
          description: >-
            ID of an update monitor. To be filled if update monitor is being
            updated.
          type: string
        referenceDataSource:
          description: >-
            The monitored Reference Data Source. Available values can be found
            via [List Data Sources of Update
            Monitors](#/rest/api-endpoints/business-partner-storages/list-data-sources-of-update-monitors).
          type: string
          example: VIES
        affectedProperties:
          description: >-
            If the list is empty, then listening to updates of a whole business
            partner.
          type: array
          items:
            x-apimatic-facade: '#/components/schemas/BusinessPartnerPropertyParam'
            $ref: '#/components/schemas/BusinessPartnerPropertyParam'
        affectedDataSourceIds:
          description: Data Source IDs within this storage.
          type: array
          items:
            type: string
      title: UpdateMonitorParam
    UpdateMonitorUpserts:
      type: object
      required:
        - updateMonitors
      properties:
        updateMonitors:
          type: array
          minItems: 0
          maxItems: 100
          items:
            $ref: '#/components/schemas/UpdateMonitorParam'
      title: UpdateMonitorUpserts
    UpdateMonitorUpsertsResult:
      type: object
      properties:
        numberOfInserts:
          type: integer
          format: int64
        numberOfUpdates:
          type: integer
          format: int64
        numberOfFailed:
          type: integer
          format: int64
      title: UpdateMonitorUpsertsResult
    UpdateMonitorMode:
      type: string
      x-hide: true
      title: UpdateMonitorMode
    UpdateMonitorModeParam:
      type: string
      x-hide: true
      example: UPDATE_EVENT_ONLY
      description: In UPSERT_AND_UPDATE_EVENT mode affectedProperties are not supported.
      enum:
        - UPDATE_EVENT_ONLY
        - UPSERT_AND_UPDATE_EVENT
      title: UpdateMonitorModeParam
    BusinessPartnerStorageId:
      type: string
      title: BusinessPartnerStorageId
    BusinessPartnerPropertyParam:
      type: string
      example: MINORITY_INDICATOR_VALUE
      enum:
        - NAME_VALUE
        - IDENTIFIER_VALUE
        - MINORITY_INDICATOR_VALUE
        - ADMINISTRATIVE_AREA_VALUE
        - LOCALITY_VALUE
        - POST_CODE_VALUE
        - THOROUGHFARE_VALUE
        - THOROUGHFARE_NUMBER
        - BUSINESS_PARTNER_STATUS_TYPE
        - LEGAL_FORM_NAME
      title: BusinessPartnerPropertyParam
    BusinessPartnerProperty:
      type: string
      example: MINORITY_INDICATOR_VALUE
      enum:
        - NAME_VALUE
        - IDENTIFIER_VALUE
        - MINORITY_INDICATOR_VALUE
        - ADMINISTRATIVE_AREA_VALUE
        - LOCALITY_VALUE
      title: BusinessPartnerProperty
    BusinessPartnerReportsRequest:
      type: object
      properties:
        storageId:
          $ref: '#/components/schemas/BusinessPartnerStorageId'
        reportsConfiguration:
          $ref: '#/components/schemas/BusinessPartnerReportsConfiguration'
      title: BusinessPartnerReportsRequest
    TechnicalReportsRequest:
      type: object
      properties:
        reportsConfiguration:
          $ref: '#/components/schemas/TechnicalReportsConfiguration'
      title: TechnicalReportsRequest
    StorageDumpReportsRequest:
      type: object
      properties:
        storageId:
          $ref: '#/components/schemas/BusinessPartnerStorageId'
        reportsConfiguration:
          $ref: '#/components/schemas/StorageDumpReportsConfiguration'
      title: StorageDumpReportsRequest
    JobTags:
      x-hide: true
      type: array
      maxItems: 10
      uniqueItems: true
      items:
        $ref: '#/components/schemas/JobTag'
      title: JobTags
    JobTag:
      type: string
      maxLength: 100
      title: JobTag
    BusinessPartnerReports:
      allOf:
        - $ref: '#/components/schemas/schemas-Job'
        - $ref: '#/components/schemas/BusinessPartnerReportsRequest'
      properties:
        summary:
          $ref: '#/components/schemas/BusinessPartnerReportsSummary'
      title: BusinessPartnerReports
    TechnicalReports:
      allOf:
        - $ref: '#/components/schemas/schemas-Job'
        - $ref: '#/components/schemas/TechnicalReportsRequest'
      title: TechnicalReports
    StorageDumpReports:
      allOf:
        - $ref: '#/components/schemas/schemas-Job'
        - $ref: '#/components/schemas/StorageDumpReportsRequest'
      title: StorageDumpReports
    UpdateMonitorDataSourcesResult:
      type: object
      properties:
        dataSources:
          type: array
          items:
            type: string
      title: UpdateMonitorDataSourcesResult
    ToggleUpdateMonitoringRequest:
      type: object
      required:
        - enable
        - businessPartnerIds
      properties:
        enable:
          $ref: '#/components/schemas/ToggleUpdateMonitoringRequestEnable'
        businessPartnerIds:
          type: array
          items:
            type: string
            minLength: 1
          minItems: 1
          maxItems: 1000
          description: >-
            List of Business Partner IDs to identify all those Business Partners
            that should be enabled/disabled.
      title: ToggleUpdateMonitoringRequest
    ToggleUpdateMonitoringRequestEnable:
      type: boolean
      description: >-
        Parameter to describe if the Business Partners should be enabled for
        update monitoring (true) or disabled (false).
      title: ToggleUpdateMonitoringRequestEnable
    DataMonitor:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/DataMonitorId'
        type:
          $ref: '#/components/schemas/DataMonitorType'
        dataSources:
          items:
            $ref: '#/components/schemas/BusinessPartnerStorageDataSource'
        enabled:
          $ref: '#/components/schemas/DataMonitorToggle'
        configuration:
          $ref: '#/components/schemas/DataMonitorConfiguration'
        executions:
          type: array
          items:
            $ref: '#/components/schemas/DataMonitorExecution'
      title: DataMonitor
    DataMonitorCreate:
      type: object
      description: >-
        Frequency is deprecated and moved to executions. When executions
        provided, frequency is disabled. When frequency is provided, executions
        are disabled.
      required:
        - type
        - dataSources
        - executions
      properties:
        type:
          $ref: '#/components/schemas/DataMonitorTypeParam'
        dataSources:
          minItems: 1
          maxItems: 7
          items:
            $ref: '#/components/schemas/BusinessPartnerStorageDataSourceParam'
        enabled:
          $ref: '#/components/schemas/DataMonitorToggle'
        configuration:
          $ref: '#/components/schemas/DataMonitorConfigurationParam'
        executions:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/DataMonitorExecutionParam'
      title: DataMonitorCreate
    DataMonitorTypeParam:
      type: object
      required:
        - technicalKey
      properties:
        technicalKey:
          $ref: '#/components/schemas/DataMonitorTypeTechnicalKeyEnum'
          x-apimatic-facade: >-
            https://files.cdq.com/rdoms/rdom-businesspartner-v1.yaml#/components/schemas/DataMonitorTypeTechnicalKeyEnum
      title: DataMonitorTypeParam
    DataMonitorUpdate:
      type: object
      description: >-
        Frequency is deprecated and moved to executions. When executions
        provided, frequency is disabled. When frequency is provided, executions
        are disabled.
      required:
        - dataSources
        - executions
      properties:
        dataSources:
          minItems: 1
          maxItems: 7
          items:
            $ref: '#/components/schemas/BusinessPartnerStorageDataSourceParam'
        enabled:
          $ref: '#/components/schemas/DataMonitorToggle'
        configuration:
          $ref: '#/components/schemas/DataMonitorConfigurationParam'
        executions:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/DataMonitorExecutionParam'
      title: DataMonitorUpdate
    DataMonitorsPage:
      type: object
      properties:
        values:
          items:
            $ref: '#/components/schemas/DataMonitorSearchResult'
        limit:
          $ref: '#/components/schemas/Limit'
        startAfter:
          $ref: '#/components/schemas/StartAfter'
        nextStartAfter:
          $ref: '#/components/schemas/NextStartAfter'
        total:
          $ref: '#/components/schemas/PageTotal'
      title: DataMonitorsPage
    DataMonitorSearchResult:
      properties:
        id:
          $ref: '#/components/schemas/DataMonitorId'
        type:
          $ref: '#/components/schemas/DataMonitorType'
        dataSources:
          items:
            $ref: '#/components/schemas/BusinessPartnerStorageDataSource'
        enabled:
          $ref: '#/components/schemas/DataMonitorToggle'
        configuration:
          $ref: '#/components/schemas/DataMonitorConfiguration'
        executions:
          type: array
          items:
            $ref: '#/components/schemas/DataMonitorExecution'
      title: DataMonitorSearchResult
    BusinessPartnerStorageDataSource:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/BusinessPartnerStorageDataSourceId'
        name:
          $ref: '#/components/schemas/BusinessPartnerStorageDataSourceName'
      title: BusinessPartnerStorageDataSource
    BusinessPartnerStorageDataSourceParam:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/BusinessPartnerStorageDataSourceId'
      title: BusinessPartnerStorageDataSourceParam
    DataMonitorType:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/DataMonitorTypeName'
        technicalKey:
          $ref: '#/components/schemas/DataMonitorTypeTechnicalKey'
      title: DataMonitorType
    DataMonitorConfigurationParam:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/ConfigurationId'
      title: DataMonitorConfigurationParam
    DataMonitorConfiguration:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ConfigurationId'
      title: DataMonitorConfiguration
    CreateOrRetrieveDnbStorageRequest:
      type: object
      properties:
        featuresOn:
          type: array
          description: >
            Feature(s) to be used during the dnb storage creation:

            * `USE_DNB_MASTER_DATA_BASIC` - Create storage for
            DNB_MASTER_DATA_BASIC

            * `USE_DNB_MASTER_DATA_EXTENDED` - Create storage for
            DNB_MASTER_DATA_EXTENDED

            * `USE_DNB_LINKAGE_LNKELI` - Create storage for DNB_LINKAGE_LNKELI
          items:
            x-apimatic-facade: '#/components/schemas/DnbStorageFeatureParam'
            $ref: '#/components/schemas/DnbStorageFeatureParam'
      title: CreateOrRetrieveDnbStorageRequest
    DnbStorageFeatureParam:
      type: string
      enum:
        - USE_DNB_MASTER_DATA_BASIC
        - USE_DNB_MASTER_DATA_EXTENDED
        - USE_DNB_LINKAGE_LNKELI
      title: DnbStorageFeatureParam
    DnbStorageFeature:
      type: string
      title: DnbStorageFeature
    DnbStorageResult:
      type: object
      properties:
        id:
          type: string
      title: DnbStorageResult
    ReferenceDataStorageCreate:
      x-hide: true
      type: object
      required:
        - name
        - prefix
      properties:
        name:
          type: string
          maxLength: 50
        dataMapperDefinitionId:
          type: string
          description: >-
            The ID of an existing mapping, which should be used to transform
            records that belong to this data source.
        prefix:
          type: string
        tags:
          type: array
          maxItems: 10
          uniqueItems: true
          items:
            type: string
            minLength: 1
            maxLength: 20
        system:
          type: boolean
          default: true
          description: Indicator if is a system storage. Needed for tests.
        relations:
          type: boolean
          default: false
          description: Indicator if storage should have relations feature.
      title: ReferenceDataStorageCreate
    BusinessPartnerStorageMetadataPageReadFeatureParam:
      type: string
      enum:
        - NUMBER_OF_TOTAL
      title: BusinessPartnerStorageMetadataPageReadFeatureParam
    BusinessPartnerStorageMetadataPageReadFeature:
      type: string
      title: BusinessPartnerStorageMetadataPageReadFeature
    DataMonitorCreateFeatureParam:
      type: string
      enum:
        - LAB_USE_CLIENT_ID
      title: DataMonitorCreateFeatureParam
    DataMonitorCreateFeature:
      type: string
      title: DataMonitorCreateFeature
    DataMonitorsReadFeatureParam:
      type: string
      enum:
        - NUMBER_OF_TOTAL
      title: DataMonitorsReadFeatureParam
    DataMonitorsReadFeature:
      type: string
      title: DataMonitorsReadFeature
    DataMonitorPopulationJob:
      description: |
        Last job that was scheduled during:
         * data monitor creation,
         * edit of configurationId in data monitor

        in order to populate data monitor.
      type: object
      x-hide: true
      properties:
        id:
          $ref: '#/components/schemas/JobId'
      title: DataMonitorPopulationJob
    DataMonitorRefreshes:
      type: object
      properties:
        dataMonitors:
          type: array
          items:
            $ref: '#/components/schemas/DataMonitorRefresh'
          maxItems: 1
      title: DataMonitorRefreshes
    DataMonitorRefresh:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/DataMonitorId'
      title: DataMonitorRefresh
    DataMonitorRefreshResults:
      type: object
      properties:
        dataMonitors:
          type: array
          items:
            $ref: '#/components/schemas/DataMonitorRefreshResult'
      title: DataMonitorRefreshResults
    DataMonitorRefreshResult:
      type: object
      properties:
        dataMonitor:
          $ref: '#/components/schemas/DataMonitorRefresh'
        status:
          type: string
          description: >
            * OK - the data monitor reevaluation has been started

            * NOT_FOUND - the data monitor is not found

            * APPLICATION_IN_PROGRESS - the data monitor reevaluation is not
            started because of currently running reevaluation
      title: DataMonitorRefreshResult
    DataMonitorWithPopulationJob:
      type: object
      x-hide: true
      properties:
        id:
          $ref: '#/components/schemas/DataMonitorId'
        populationJob:
          $ref: '#/components/schemas/DataMonitorPopulationJob'
      title: DataMonitorWithPopulationJob
    DataMonitorExecutionParam:
      type: object
      description: Execution of data monitor. Frequency required in JOB execution type.
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/DataMonitorExecutionTypeParam'
        frequency:
          $ref: '#/components/schemas/DataMonitorFrequencyEnum'
          x-apimatic-facade: >-
            https://files.cdq.com/rdoms/rdom-businesspartner-v1.yaml#/components/schemas/DataMonitorFrequencyEnum
      title: DataMonitorExecutionParam
    DataMonitorExecutionTypeParam:
      type: object
      required:
        - technicalKey
      properties:
        technicalKey:
          $ref: '#/components/schemas/DataMonitorExecutionTypeTechnicalKeyEnum'
          x-apimatic-facade: >-
            https://files.cdq.com/rdoms/rdom-businesspartner-v1.yaml#/components/schemas/DataMonitorExecutionTypeTechnicalKeyEnum
      title: DataMonitorExecutionTypeParam
    DataMonitorExecution:
      type: object
      description: Execution of data monitor. Frequency required in JOB execution type.
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/DataMonitorExecutionType'
        frequency:
          $ref: '#/components/schemas/DataMonitorFrequency'
      title: DataMonitorExecution
    DataMonitorClientId:
      x-hide: true
      type: string
      title: DataMonitorClientId
    DataMonitorExecutionType:
      type: object
      required:
        - technicalKey
      properties:
        technicalKey:
          $ref: '#/components/schemas/DataMonitorExecutionTypeTechnicalKey'
      title: DataMonitorExecutionType
    UpdateMonitorReferenceDataSourcesResult:
      type: object
      properties:
        referenceDataSources:
          type: array
          items:
            $ref: '#/components/schemas/ReferenceDataSource'
      title: UpdateMonitorReferenceDataSourcesResult
    ReferenceDataSource:
      type: object
      properties:
        aleiPrefix:
          type: string
        technicalKey:
          type: string
      title: ReferenceDataSource
    BusinessPartnerStorageMetadataPatch:
      type: object
      properties:
        decisionLogId:
          type: string
        workspaceId:
          type: string
        sharingClientId:
          type: string
      title: BusinessPartnerStorageMetadataPatch
    BusinessPartnerCreate:
      type: object
      properties:
        businessPartner:
          $ref: '#/components/schemas/BusinessPartner'
      title: BusinessPartnerCreate
    MinorityIndicatorUpdateRequest:
      x-hide: true
      type: object
      required:
        - externalId
      properties:
        externalId:
          type: string
        dataSource:
          type: string
      title: MinorityIndicatorUpdateRequest
    AddressContext:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/AddressContextValue'
      title: AddressContext
    FetchBusinessPartnerRequest:
      type: object
      required:
        - externalId
      properties:
        externalId:
          $ref: '#/components/schemas/BusinessPartnerExternalId'
        dataSource:
          type: string
        featuresOn:
          type: array
          description: >
            Feature(s) to be used during the fetch business partner:

            * `FETCH_RECORD` - Allows to switch fetching record field to reduce
            data size. By default turned on.

            * `FETCH_RELATIONS` - Allows to switch fetching relations of
            Business Partners. By default turned off. Only for storages with
            RELATIONS feature enabled
          items:
            x-apimatic-facade: '#/components/schemas/FetchBusinessPartnerFeatureParam'
            $ref: '#/components/schemas/FetchBusinessPartnerFeatureParam'
        featuresOff:
          type: array
          description: >
            Feature(s) to be excluded during the fetch business partner:

            * `FETCH_RECORD` - Allows to switch fetching record field to reduce
            data size. By default turned on.

            * `FETCH_RELATIONS` - Allows to switch fetching relations of
            Business Partners. By default turned off. Only for storages with
            RELATIONS feature enabled
          items:
            x-apimatic-facade: '#/components/schemas/FetchBusinessPartnerFeatureParam'
            $ref: '#/components/schemas/FetchBusinessPartnerFeatureParam'
      title: FetchBusinessPartnerRequest
    FetchBusinessPartnerResult:
      type: object
      properties:
        businessPartner:
          $ref: '#/components/schemas/BusinessPartner'
        status:
          type: string
          description: |
            status:
              * `OK` - Business Partner has been fetched successfully
              * `NOT_FOUND` - Business Partner with that externalId+dataSource does
            not exist in storage
        message:
          type: string
      title: FetchBusinessPartnerResult
    MatchingProfile:
      type: object
      properties:
        matchingScores:
          $ref: '#/components/schemas/MatchingScores'
      title: MatchingProfile
    MatchingScores:
      type: object
      properties:
        overall:
          $ref: '#/components/schemas/MatchingScore'
        businessPartner:
          $ref: '#/components/schemas/MatchingScore'
        address:
          $ref: '#/components/schemas/MatchingScore'
      title: MatchingScores
    MatchingScore:
      type: object
      properties:
        classification:
          $ref: '#/components/schemas/MatchingClassification'
        value:
          type: number
      title: MatchingScore
    MatchingClassification:
      type: object
      properties:
        technicalKey:
          type: string
        name:
          type: string
      title: MatchingClassification
    ClassificationType:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ClassificationTypeName'
        url:
          $ref: '#/components/schemas/ClassificationTypeUrl'
        technicalKey:
          type: string
      title: ClassificationType
    IdentifierType:
      type: object
      properties:
        url:
          $ref: '#/components/schemas/IdentifierTypeUrl'
        name:
          $ref: '#/components/schemas/IdentifierTypeName'
        technicalKey:
          $ref: '#/components/schemas/schemas-IdentifierTypeTechnicalKey'
      title: IdentifierType
    NameType:
      type: object
      properties:
        url:
          $ref: '#/components/schemas/NameTypeUrl'
        name:
          $ref: '#/components/schemas/NameTypeName'
        technicalKey:
          $ref: '#/components/schemas/NameTypeTechnicalKey'
      title: NameType
    PartnerProfile:
      description: >-
        Additional documentation can be found
        [here](https://meta.cdq.ch/Partner_profile).
      type: object
      properties:
        minorityIndicator:
          $ref: '#/components/schemas/MinorityIndicator'
        classifications:
          type: array
          items:
            $ref: '#/components/schemas/Classification'
        phoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        websites:
          type: array
          items:
            $ref: '#/components/schemas/Website'
        contactEmails:
          type: array
          items:
            $ref: '#/components/schemas/ContactEmail'
      title: PartnerProfile
    MinorityIndicator:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/MinorityIndicatorValue'
      title: MinorityIndicator
    ThoroughfareType:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ThoroughfareTypeName'
        url:
          $ref: '#/components/schemas/ThoroughfareTypeUrl'
        technicalKey:
          $ref: '#/components/schemas/ThoroughfareTypeTechnicalKey'
      title: ThoroughfareType
    LocalityType:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/LocalityTypeName'
        url:
          $ref: '#/components/schemas/LocalityTypeUrl'
        technicalKey:
          $ref: '#/components/schemas/LocalityTypeTechnicalKey'
      title: LocalityType
    PremiseType:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/PremiseTypeName'
        url:
          $ref: '#/components/schemas/PremiseTypeUrl'
        technicalKey:
          $ref: '#/components/schemas/PremiseTypeTechnicalKey'
      title: PremiseType
    AdministrativeAreaType:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
        technicalKey:
          type: string
      title: AdministrativeAreaType
    PostCodeType:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/PostCodeTypeName'
        url:
          $ref: '#/components/schemas/PostCodeTypeUrl'
        technicalKey:
          $ref: '#/components/schemas/PostCodeTypeTechnicalKey'
      title: PostCodeType
    PostalDeliveryPointType:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/PostalDeliveryPointTypeName'
        url:
          $ref: '#/components/schemas/PostalDeliveryPointTypeUrl'
        technicalKey:
          $ref: '#/components/schemas/PostalDeliveryPointTypeTechnicalKey'
      title: PostalDeliveryPointType
    AddressType:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/AddressTypeName'
        url:
          $ref: '#/components/schemas/AddressTypeUrl'
        technicalKey:
          $ref: '#/components/schemas/AddressTypeTechnicalKey'
      title: AddressType
    BusinessPartnerCategory:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/BusinessPartnerCategoryName'
        url:
          $ref: '#/components/schemas/BusinessPartnerCategoryUrl'
        technicalKey:
          $ref: '#/components/schemas/BusinessPartnerCategoryTechnicalKey'
      title: BusinessPartnerCategory
    BusinessPartnerMetadata:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/BusinessPartnerDocumentStatus'
        sharingStatus:
          $ref: '#/components/schemas/SharingStatus'
        identityLinks:
          type: array
          items:
            $ref: '#/components/schemas/IdentityLink'
        logResultStatuses:
          type: array
          items:
            $ref: '#/components/schemas/ProcessingLogResultStatus'
        decisionLogResult:
          $ref: '#/components/schemas/DecisionLogResult'
      title: BusinessPartnerMetadata
    BusinessPartnerDocumentStatus:
      type: object
      properties:
        recordStatus:
          type: string
          description: |
            Record Status
             * `ACCEPTED`
             * `REJECTED`
        explanations:
          type: array
          items:
            type: string
      title: BusinessPartnerDocumentStatus
    SharingStatus:
      type: object
      properties:
        status:
          type: string
          description: >
            Sharing Status
             * `UNDER_CONSIDERATION` (The business partner will be considered for
            the sharing process.)
             * `UNDISCLOSED_RECORD` (During the last attempt to share the business
            partner it was marked as 'undisclosed' and for that reason not
            considered.)
             * `MISSING_INFORMATION_FOR_LINKAGE` (The business partner has missing
            at least one of required parameters defined by collaboration linkage
            strategy so can not be shared.)
             * `ERRONEOUS_INFORMATION_FOR_LINKAGE` (The business partner violates
            at least one rule for required parameters defined by collaboration
            linkage strategy so can not be shared.)
             * `ERRONEOUS_RECORD` (The business partner violates at least one rule
            that leads to an overall data validation result of ERROR, and can
            not be shared.)
             * `NATURAL_PERSON` (The record was identified as natural person and is
            therefore excluded from the sharing.)
             * `PENDING_LINKAGE_DECISION` (As the matching result was uncertain the
            business partner is currently waiting to be reviewed before it can
            be shared.)
             * `SHARED_WITH_NO_MATCH` (No match could be found and therefore the business
            partner was added to the community pool as a new business partner.)
             * `SHARED_WITH_CONFIDENT_MATCH` (A confident match was found and therefore
            the business partner was linked to an existing business partner in
            the community pool.)
             * `SHARED_WITH_NO_MATCH_BY_REVIEW` (Review decision has been made and
            the business partner was added to the community pool as a new
            business partner.)
             * `SHARED_BY_REVIEW` (Review decision has been made and the business
            partner was linked to an existing business partner in the community
            pool.)
             * `PROCESS_ISSUE` (During the last attempt to share the business partner
            process issue occurred. This business partner will be processed
            again.)
        description:
          type: string
      title: SharingStatus
    IdentityLink:
      type: object
      properties:
        linkId:
          type: string
        cdqId:
          type: string
        addressId:
          type: string
        externalAddressId:
          type: string
      title: IdentityLink
    BusinessPartnerStatusType:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/BusinessPartnerStatusTypeName'
        url:
          $ref: '#/components/schemas/BusinessPartnerStatusTypeUrl'
        technicalKey:
          $ref: '#/components/schemas/BusinessPartnerStatusTypeTechnicalKey'
      title: BusinessPartnerStatusType
    CareOf:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/CareOfValue'
      title: CareOf
    BusinessPartnerUpdatePage:
      type: object
      properties:
        limit:
          type: integer
        total:
          type: integer
        startAfter:
          type: string
        nextStartAfter:
          type: string
        values:
          type: array
          items:
            $ref: '#/components/schemas/BusinessPartnerUpdate'
      title: BusinessPartnerUpdatePage
    BusinessPartnerUpdate:
      type: object
      description: >
        A Business Partner Update comprises a list of Change Sets which belong
        to this Business Partner


        `businessPartner` contains a BusinessPartner model built out of all
        updates.

        `storageBusinessPartner` contains an current business partner from the
        storage.
      properties:
        businessPartnerId:
          type: string
        externalBusinessPartnerId:
          type: string
        changeSets:
          type: array
          description: List of Change Sets
          items:
            $ref: '#/components/schemas/ChangeSet'
        businessPartner:
          $ref: '#/components/schemas/BusinessPartner'
        storageBusinessPartner:
          $ref: '#/components/schemas/BusinessPartner'
        provenances:
          type: array
          description: Set of all provenances from change sets.
          items:
            $ref: '#/components/schemas/Provenance2'
      title: BusinessPartnerUpdate
    ChangeSet:
      type: object
      description: >
        A Change Set is a list of PropertyChanges that have been applied in one
        transaction by a user or reference data source update.
      properties:
        modifiedAt:
          type: string
          example: 2007-08-31T16:47+00:00
        propertyChanges:
          type: array
          items:
            $ref: '#/components/schemas/PropertyChange2'
        provenances:
          type: array
          description: Set of all provenances from property changes.
          items:
            $ref: '#/components/schemas/Provenance2'
      title: ChangeSet
    PropertyChange:
      type: object
      properties:
        externalIds:
          type: array
          items:
            $ref: '#/components/schemas/ExternalId'
        property:
          $ref: '#/components/schemas/Property'
        newContent:
          type: string
          example: AAB
          description: New value after change
        previousContent:
          type: string
          example: AAB
          description: Value before change
        provenance:
          $ref: '#/components/schemas/Provenance'
        changeType:
          type: string
          example: MODIFIED
          description: |
            Change Type
             * `ADDED` - Property has been added
             * `MODIFIED` - Property has been modified
             * `DELETED` - Property has been deleted
        changeClassification:
          type: string
          example: MAJOR
          description: >
            Gives a user an indicator how "much" the attribute was changed OR
            how important the change was. Allowed values are
             * `MINOR` - Minor change
             * `MAJOR` - Major change
      title: PropertyChange
    ExternalId:
      type: object
      properties:
        externalId:
          $ref: '#/components/schemas/ExternalIdValue'
        dataSourceId:
          $ref: '#/components/schemas/ProvenanceTechnicalKey'
        id:
          type: string
        concept:
          $ref: '#/components/schemas/Concept'
        language:
          $ref: '#/components/schemas/Language'
        characterSet:
          $ref: '#/components/schemas/CharacterSet1'
      title: ExternalId
    Property:
      type: object
      properties:
        parentConcept:
          $ref: '#/components/schemas/Concept'
        name:
          $ref: '#/components/schemas/PropertyName'
        technicalKey:
          $ref: '#/components/schemas/PropertyTechnicalKey'
        contentSelector:
          $ref: '#/components/schemas/PropertyContentSelector'
        instanceSelectors:
          type: array
          items:
            $ref: '#/components/schemas/PropertyContentInstanceSelector'
      title: Property
    Concept:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ConceptName'
        technicalKey:
          $ref: '#/components/schemas/ConceptTechnicalKey'
      title: Concept
    Provenance:
      type: object
      properties:
        name:
          type: string
          example: Supplier Gateway
          description: Name of Provenance
        technicalKey:
          type: string
          example: SGW
          description: >
            Provenance of the change * `ORGANIZATION` - Customer updates *
            `DATA_SHARING_REVIEW` - From the peer reviews in data sharing *
            `DERIVATION` - Enriched by curation without external sources, but
            deriving it from existing attributes * `DNB` - Dun & Bradstreet *
            `GOOGLE_PLACES` - Google Places API * `LEI` - * `VIES` - * `PL_NOBR`
            - * `BZST` - * `CH_UIDR` - * `CH_CR` - * `BR_RF` - * `GB_EAW_CR` - *
            `BE_CCD` - * `FR_RC` - * `AU_BR` - * `CA_CR` - * `MX_SBI` - *
            `US_FL_BER` - * `US_IO_BER` - * `US_NY_BER` - * `US_SEC` - *
            `US_WA_BER` - * `NL_BR` - * `JP_CR` - * `SGW` - Supplier Gateway
      title: Provenance
    BusinessPartnerUpdatesFeature:
      type: string
      title: BusinessPartnerUpdatesFeature
    BusinessPartnerConcept:
      type: string
      title: BusinessPartnerConcept
    FieldsTransformationRequest:
      type: object
      properties:
        businessPartners:
          type: array
          items:
            $ref: '#/components/schemas/BusinessPartner'
      title: FieldsTransformationRequest
    FieldsTransformationResult:
      type: object
      properties:
        businessPartners:
          type: array
          items:
            $ref: '#/components/schemas/BusinessPartner'
        fieldBusinessPartners:
          type: array
          items:
            $ref: '#/components/schemas/FieldBusinessPartner'
      title: FieldsTransformationResult
    BusinessPartnersTransformationRequest:
      type: object
      properties:
        businessPartners:
          type: array
          items:
            type: string
      title: BusinessPartnersTransformationRequest
    BusinessPartnersTransformationResult:
      type: object
      properties:
        businessPartners:
          type: array
          items:
            $ref: '#/components/schemas/BusinessPartner'
      title: BusinessPartnersTransformationResult
    FieldBusinessPartner:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
      title: FieldBusinessPartner
    Field:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      title: Field
    UpdateDisclosureRequest:
      type: object
      required:
        - disclosed
      properties:
        disclosed:
          type: boolean
          description: >-
            Parameter to describe if the BusinessPartners should be disclosed
            (true) or undisclosed (false).
        dataSourceId:
          deprecated: true
          type: string
          description: >-
            A DataSource ID for which all related BusinessPartners should be
            un-/disclose 
        countryCode:
          deprecated: true
          type: string
          description: >-
            A country code (ISO 3166-2), to be used in combination with a
            DataSource ID to un-/disclose all matching BusinessPartners.
        businessPartnerIds:
          type: array
          items:
            type: string
          minLength: 1
          description: >-
            List of BusinessPartner IDs to identify all those BusinessPartners
            that should be un-/disclose.
      title: UpdateDisclosureRequest
    BusinessPartnerStorageCreateRequest:
      x-hide: true
      description: Request for a new business partner storage
      type: object
      properties:
        name:
          description: Name of the business partner
          type: string
          maxLength: 50
        dataMatchingDefinitionId:
          description: Unique ID of a data matching definition
          type: string
        dataSources:
          description: >-
            List of data sources to be added to the storage that will be
            created.
          type: array
          items:
            $ref: '#/components/schemas/BusinessPartnerStorageDataSourceCreate'
        featuresOn:
          type: array
          description: >
            Available features of a storage: * `LOOKUP` - Enables search
            capabilities for the given storage * `SHARING` - Enables storage to
            participates in the CDQ sharing process * `UPDATES` - Enables
            storing and querying of updates for the given storage *
            `DATA_MIRROR` - Defines storage as a Data Mirror. Turns on:
            NEVER_EXPIRE, LOOKUP, UPDATES, SHARING features. SHARING is not
            applied when records are not disclosed. * `NEVER_EXPIRE` - Specifies
            whether a storage should never expire. Always turned on for
            `DATA_MIRROR`. Caution: don't use too often due to quota limits. *
            `RELATIONS` - Enables storage to contain relations
          items:
            x-apimatic-facade: '#/components/schemas/BusinessPartnerStorageFeatureParam'
            $ref: '#/components/schemas/BusinessPartnerStorageFeatureParam'
        tags:
          type: array
          maxItems: 10
          uniqueItems: true
          items:
            $ref: '#/components/schemas/StorageTag'
      title: BusinessPartnerStorageCreateRequest
    BusinessPartnerStorageFeature:
      type: string
      title: BusinessPartnerStorageFeature
    BusinessPartnerStorageFeatureParam:
      type: string
      enum:
        - LOOKUP
        - UPDATES
        - LAB_USE_INDEX_API
        - SHARING
        - DATA_MIRROR
        - NEVER_EXPIRE
        - RELATIONS
      title: BusinessPartnerStorageFeatureParam
    BusinessPartnerStorageDataSourceCreate:
      x-hide: true
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/BusinessPartnerStorageDataSourceName'
        dataMapperDefinitionId:
          type: string
          description: >-
            The ID of an existing mapping, which should be used to transform
            records that belong to this data source.
      title: BusinessPartnerStorageDataSourceCreate
    BusinessPartnerStorageMetadataResult:
      x-hide: true
      type: object
      properties:
        status:
          type: string
          description: |
            status:
              * `OK` - Business Partner Storage Metadata has been fetched successfully
              * `NOT_FOUND` - Business Partner Storage Metadata with that id does
            not exist in storage
        metadata:
          $ref: '#/components/schemas/BusinessPartnerStorageMetadata'
      title: BusinessPartnerStorageMetadataResult
    StorageTag:
      x-hide: true
      type: string
      minLength: 1
      maxLength: 20
      title: StorageTag
    FeatureStatuses:
      x-hide: true
      type: object
      properties:
        lookup:
          $ref: '#/components/schemas/FeatureStatus'
        updates:
          $ref: '#/components/schemas/FeatureStatus'
        sharing:
          $ref: '#/components/schemas/FeatureStatus'
        neverExpire:
          $ref: '#/components/schemas/FeatureStatus'
        dataMirror:
          $ref: '#/components/schemas/FeatureStatus'
      title: FeatureStatuses
    FeatureStatusStatus:
      x-hide: true
      type: string
      title: FeatureStatusStatus
    FeatureStatusParam:
      x-hide: true
      type: string
      enum:
        - ENABLED
        - DISABLED
      title: FeatureStatusParam
    BusinessPartnerMetadataReadFeatureParam:
      x-hide: true
      type: string
      enum:
        - RELOAD_EXPIRES_AT
      title: BusinessPartnerMetadataReadFeatureParam
    BusinessPartnerMetadataReadFeature:
      x-hide: true
      type: string
      title: BusinessPartnerMetadataReadFeature
    BankAccount:
      type: object
      properties:
        internationalBankAccountIdentifier:
          $ref: '#/components/schemas/InternationalBankAccountIdentifier'
        internationalBankIdentifier:
          $ref: '#/components/schemas/InternationalBankIdentifier'
        nationalBankAccountIdentifier:
          $ref: '#/components/schemas/NationalBankAccountIdentifier'
        nationalBankIdentifier:
          $ref: '#/components/schemas/NationalBankIdentifier'
        countryCode:
          $ref: '#/components/schemas/BankAccountCountryCode'
      title: BankAccount
    BusinessPartnerRecord:
      type: string
      description: >
        Stringified JSON of an individual business partner record. Characters:
        backslash `\` and double quote `"` must be escaped (respectively: `\\\\`
        and `\"`). Fields containing `.` are unallowed. Maximum size: 15MB.
      title: BusinessPartnerRecord
    BusinessPartnerRelation:
      type: object
      properties:
        startedAt:
          $ref: '#/components/schemas/BusinessPartnerRelationStartedAt'
        endedAt:
          $ref: '#/components/schemas/BusinessPartnerRelationEndedAt'
        type:
          $ref: '#/components/schemas/BusinessPartnerRelationType'
        class:
          $ref: '#/components/schemas/BusinessPartnerRelationClass'
        startNode:
          $ref: '#/components/schemas/BusinessPartnerRelationStartNode'
        startNodeDataSource:
          type: string
        startNodeBusinessPartner:
          $ref: '#/components/schemas/RelationBusinessPartner'
        endNode:
          $ref: '#/components/schemas/BusinessPartnerRelationEndNode'
        endNodeDataSource:
          type: string
        endNodeBusinessPartner:
          $ref: '#/components/schemas/RelationBusinessPartner'
      title: BusinessPartnerRelation
    RelationBusinessPartner:
      type: object
      properties:
        names:
          type: array
          items:
            $ref: '#/components/schemas/Name'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/RelationAddress'
      title: RelationBusinessPartner
    RelationAddress:
      type: object
      properties:
        country:
          $ref: '#/components/schemas/Country'
        postCodes:
          type: array
          items:
            $ref: '#/components/schemas/PostCode'
        localities:
          type: array
          items:
            $ref: '#/components/schemas/Locality'
        thoroughfares:
          type: array
          items:
            $ref: '#/components/schemas/Thoroughfare'
      title: RelationAddress
    BusinessPartnerRelationType:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/BusinessPartnerRelationTypeName'
        technicalKey:
          $ref: '#/components/schemas/BusinessPartnerRelationTypeTechnicalKey'
      title: BusinessPartnerRelationType
    BusinessPartnerRelationClass:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/BusinessPartnerRelationClassName'
        technicalKey:
          $ref: '#/components/schemas/BusinessPartnerRelationClassTechnicalKey'
      title: BusinessPartnerRelationClass
    BusinessPartnerType:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/BusinessPartnerTypeName'
        url:
          $ref: '#/components/schemas/BusinessPartnerTypeUrl'
        technicalKey:
          $ref: '#/components/schemas/BusinessPartnerTypeTechnicalKey'
      title: BusinessPartnerType
    ProcessingLogResultStatus:
      description: >
        Summary of processing log result processed for this business partner.


        To enable processing log results, you need to [create data
        monitors](https://developer.cdq.com/reference-docs/data-exchange/V4/tag/Business-Partner-Storages/#tag/Business-Partner-Storages/paths/~1v2~1storages~1{storageId}~1datamonitors/post)
        for this storage.
      type: object
      properties:
        processingLogId:
          $ref: '#/components/schemas/ProcessingLogId'
        triggerProcessedAt:
          $ref: '#/components/schemas/ProcessingLogResultStatusTriggerProcessedAt'
        triggerType:
          $ref: '#/components/schemas/ProcessingLogResultStatusTriggerType'
        jobProcessedAt:
          $ref: '#/components/schemas/ProcessingLogResultStatusJobProcessedAt'
        status:
          $ref: '#/components/schemas/ProcessingLogResultStatusStatus'
        description:
          $ref: '#/components/schemas/ProcessingLogResultStatusDescription'
      title: ProcessingLogResultStatus
    ProcessingLogResultStatusTriggerProcessedAt:
      description: Time when this log result has been processed by trigger.
      type: string
      title: ProcessingLogResultStatusTriggerProcessedAt
    ProcessingLogResultStatusJobProcessedAt:
      description: Time when this log result has been processed by job.
      type: string
      title: ProcessingLogResultStatusJobProcessedAt
    ProcessingLogResultStatusTriggerType:
      description: |
        Processing trigger reason.

        Possible values:
         * CREATED - business partner has been created
         * UPDATED - property in BusinessPartner data model has changed
         * REFERENCE_DATA_CHANGED - there was a change in referenced business partner from external data source
         * JOB - evaluated via a job
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ProcessingLogResultStatusTriggerTypeName'
        technicalKey:
          $ref: >-
            #/components/schemas/ProcessingLogResultStatusTriggerTypeTechnicalKey
      title: ProcessingLogResultStatusTriggerType
    ProcessingLogResultStatusTriggerTypeName:
      type: string
      title: ProcessingLogResultStatusTriggerTypeName
    ProcessingLogResultStatusTriggerTypeTechnicalKey:
      type: string
      title: ProcessingLogResultStatusTriggerTypeTechnicalKey
    ProcessingLogResultStatusTriggerTypeTechnicalKeyParam:
      type: string
      enum:
        - CREATED
        - UPDATED
        - REFERENCE_DATA_CHANGED
        - JOB
      title: ProcessingLogResultStatusTriggerTypeTechnicalKeyParam
    ProcessingLogResultStatusStatus:
      description: Status of log result.
      type: string
      title: ProcessingLogResultStatusStatus
    ProcessingLogResultStatusDescription:
      description: Description of log result.
      type: string
      title: ProcessingLogResultStatusDescription
    Language:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/LanguageName'
        technicalKey:
          $ref: '#/components/schemas/LanguageTechnicalKey'
      title: Language
    IssuingBody:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/IssuingBodyName'
        url:
          $ref: '#/components/schemas/IssuingBodyUrl'
        technicalKey:
          $ref: '#/components/schemas/IssuingBodyTechnicalKey'
      title: IssuingBody
    IdentifierStatus:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/IdentifierStatusName'
        technicalKey:
          $ref: '#/components/schemas/IdentifierStatusTechnicalKey'
      title: IdentifierStatus
    PhoneNumber:
      type: object
      properties:
        countryPrefix:
          $ref: '#/components/schemas/PhoneNumberCountryPrefix'
        number:
          $ref: '#/components/schemas/PhoneNumberNumber'
        type:
          $ref: '#/components/schemas/PhoneNumberType'
        value:
          $ref: '#/components/schemas/PhoneNumberValue'
      title: PhoneNumber
    PhoneNumberType:
      type: object
      description: >-
        Allowed types are documented
        [here](https://www.corporate-data-league.ch/meta/Partner_profile/phone_number/type).
      properties:
        name:
          $ref: '#/components/schemas/PhoneNumberTypeName'
        url:
          $ref: '#/components/schemas/PhoneNumberTypeUrl'
        technicalKey:
          type: string
      title: PhoneNumberType
    Website:
      type: object
      properties:
        url:
          $ref: '#/components/schemas/WebsiteUrl'
        type:
          $ref: '#/components/schemas/WebsiteType'
      title: Website
    WebsiteType:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/WebsiteTypeName'
        url:
          $ref: '#/components/schemas/WebsiteTypeUrl'
        technicalKey:
          $ref: '#/components/schemas/WebsiteTypeTechnicalKey'
      title: WebsiteType
    ContactEmail:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/ContactEmailValue'
      title: ContactEmail
    AddressCdqId:
      type: string
      title: AddressCdqId
    AddressVersion:
      type: object
      properties:
        language:
          $ref: '#/components/schemas/Language'
        characterSet:
          $ref: '#/components/schemas/CharacterSet'
      title: AddressVersion
    CharacterSet:
      type: object
      description: >-
        Available values can be found
        [here](https://meta.cdq.com/Address/version/character_set).
      properties:
        name:
          $ref: '#/components/schemas/CharacterSetName'
        technicalKey:
          $ref: '#/components/schemas/CharacterSetTechnicalKey'
      title: CharacterSet
    AddressIdentifyingName:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/AddressIdentifyingNameValue'
      title: AddressIdentifyingName
    BusinessPartnerLookupParam:
      type: object
      properties:
        externalId:
          $ref: '#/components/schemas/BusinessPartnerExternalId'
        record:
          $ref: '#/components/schemas/BusinessPartnerRecord'
        names:
          type: array
          items:
            $ref: '#/components/schemas/NameLookupParam'
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/IdentifierLookupParam'
        legalForm:
          $ref: '#/components/schemas/LegalFormLookupParam'
        addresses:
          type: array
          maxItems: 1
          items:
            $ref: '#/components/schemas/AddressLookupParam'
      title: BusinessPartnerLookupParam
    NameLookupParam:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/NameValue'
      title: NameLookupParam
    IdentifierLookupParam:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/IdentifierValue'
        type:
          $ref: '#/components/schemas/IdentifierTypeLookupParam'
      title: IdentifierLookupParam
    IdentifierTypeLookupParam:
      type: object
      properties:
        technicalKey:
          $ref: '#/components/schemas/IdentifierTypeTechnicalKey'
      title: IdentifierTypeLookupParam
    LegalFormLookupParam:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/LegalFormName'
      title: LegalFormLookupParam
    AddressLookupParam:
      type: object
      properties:
        country:
          $ref: '#/components/schemas/CountryLookupParam'
        administrativeAreas:
          type: array
          items:
            $ref: '#/components/schemas/AdministrativeAreaLookupParam'
        localities:
          type: array
          items:
            $ref: '#/components/schemas/LocalityLookupParam'
        postCodes:
          type: array
          items:
            $ref: '#/components/schemas/PostCodeLookupParam'
        thoroughfares:
          type: array
          items:
            $ref: '#/components/schemas/ThoroughfareLookupParam'
      title: AddressLookupParam
    CountryLookupParam:
      type: object
      properties:
        shortName:
          $ref: '#/components/schemas/CountryShortName'
      title: CountryLookupParam
    AdministrativeAreaLookupParam:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/AdministrativeAreaValue'
      title: AdministrativeAreaLookupParam
    LocalityLookupParam:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/LocalityValue'
      title: LocalityLookupParam
    PostCodeLookupParam:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/PostCodeValue'
      title: PostCodeLookupParam
    ThoroughfareLookupParam:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/ThoroughfareValue'
        number:
          $ref: '#/components/schemas/ThoroughfareNumber'
      title: ThoroughfareLookupParam
    UpsertFeatureParam:
      type: string
      enum:
        - UPSERT_BY_EXTERNAL_ID
        - API_ERROR_ON_FAILURES
        - LAB_USE_QUEUES
        - ENABLE_PRECURATION
        - TRANSFORM_RECORD
        - ENABLE_SETTINGS
        - ENABLE_ASYNC
      title: UpsertFeatureParam
    RelationsUpsertRequest:
      type: object
      required:
        - relations
      properties:
        relations:
          type: array
          minItems: 1
          maxItems: 1000
          description: Batch of business partner relations
          items:
            $ref: '#/components/schemas/BusinessPartnerRelation'
      title: RelationsUpsertRequest
    RelationsUpsertResult:
      type: object
      properties:
        numberOfProvidedRelations:
          type: integer
        numberOfInserts:
          type: integer
        numberOfUpdates:
          type: integer
        numberOfFailed:
          type: integer
        failures:
          type: array
          items:
            $ref: '#/components/schemas/RelationUpsertFailureLog'
      title: RelationsUpsertResult
    RelationUpsertFailureLog:
      type: object
      properties:
        startNodeExternalId:
          $ref: '#/components/schemas/RelationUpsertFailureLogExternalId'
        endNodeExternalId:
          $ref: '#/components/schemas/RelationUpsertFailureLogExternalId'
        message:
          $ref: '#/components/schemas/RelationUpsertFailureLogMessage'
      title: RelationUpsertFailureLog
    RelationUpsertFailureLogExternalId:
      type: string
      example: 78643267348
      title: RelationUpsertFailureLogExternalId
    RelationUpsertFailureLogMessage:
      type: string
      example: Missing data source ID.
      title: RelationUpsertFailureLogMessage
    FetchBusinessPartnerFeatureParam:
      type: string
      enum:
        - FETCH_RECORD
        - FETCH_RELATIONS
      title: FetchBusinessPartnerFeatureParam
    FetchBusinessPartnerFeature:
      type: string
      title: FetchBusinessPartnerFeature
    ReadBusinessPartnerFeatureParam:
      type: string
      enum:
        - APPLY_CURATION_DECISIONS
        - FETCH_RECORD
        - FETCH_RELATIONS
      title: ReadBusinessPartnerFeatureParam
    ReadBusinessPartnerFeature:
      type: string
      title: ReadBusinessPartnerFeature
    BusinessPartnerEventCreatesRequest:
      type: object
      required:
        - businessPartners
      properties:
        businessPartners:
          type: array
          minItems: 1
          maxItems: 500
          items:
            $ref: '#/components/schemas/BusinessPartner'
        featuresOn:
          type: array
          description: >
            Feature(s) to be used during the upsert:

            * `INITIALIZE` - Can be used only when the storage has never had
            UPDATES feature. Creates only BusinessPartnerCreated events without
            checking for existing BusinessPartnerEvents. Goal is to speed up
            setting up UPDATES feature.

            * `NO_PERSISTENCE` - Do not persist events. Execution is performed
            for test and debug purposes to check e.g. if no events are missing.
          items:
            x-apimatic-facade: '#/components/schemas/EventCreateFeatureParam'
            $ref: '#/components/schemas/EventCreateFeatureParam'
      title: BusinessPartnerEventCreatesRequest
    BusinessPartnerEventFlattenRequest:
      type: object
      required:
        - businessPartners
      properties:
        businessPartnerIds:
          type: array
          minItems: 1
          maxItems: 500
          items:
            type: string
        featuresOn:
          type: array
          description: >
            Feature(s) to be used during the flattening:

            * `DELETE_WHEN_DELETED` - Deletes all events of a business partner
            if a business partner doesn't exist anymore.

            * `FLATTEN_ALL_UPDATED_TO_ONE_LATEST` - Flattens all update events
            to one with the date of the latest update event.

            * `FLATTEN_ALL_EVENTS_TO_CREATED_WITH_LATEST_DATE` - Flattens all
            events to one created with the date of the latest update event.

            *
            `FLATTEN_ALL_EVENTS_TO_CREATED_WITH_LATEST_DATE_OR_REBUILD_CREATED`
            - Flattens all events to one created even if there is only one
            created, with the date of the latest update event or created event.

            * `FLATTEN_OVER_6_MONTHS` - For the future, has no actions behind.
          items:
            x-apimatic-facade: '#/components/schemas/BusinessPartnerEventFlattenFeatureParam'
            $ref: '#/components/schemas/BusinessPartnerEventFlattenFeatureParam'
      title: BusinessPartnerEventFlattenRequest
    BusinessPartnerEventFlattenFeatureParam:
      type: string
      enum:
        - DELETE_WHEN_DELETED
        - FLATTEN_ALL_UPDATED_TO_ONE_LATEST
        - FLATTEN_ALL_EVENTS_TO_CREATED_WITH_LATEST_DATE
        - FLATTEN_ALL_EVENTS_TO_CREATED_WITH_LATEST_DATE_OR_REBUILD_CREATED
        - FLATTEN_OVER_6_MONTHS
      title: BusinessPartnerEventFlattenFeatureParam
    BusinessPartnerEventFlattenFeature:
      type: string
      title: BusinessPartnerEventFlattenFeature
    ValidationLevelParam:
      type: string
      enum:
        - ERROR
        - WARNING
        - INFO
        - NO_DEFECTS
      title: ValidationLevelParam
    ValidationLevel:
      type: string
      title: ValidationLevel
    CurationLevelParam:
      type: string
      enum:
        - LEVEL_1
        - LEVEL_2
        - LEVEL_3
        - LEVEL_4
        - LEVEL_5
        - LEVEL_6
        - UNKNOWN
      title: CurationLevelParam
    CurationLevel:
      type: string
      title: CurationLevel
    BusinessPartnersReadFeatureParam:
      type: string
      enum:
        - APPLY_CURATION_DECISIONS
        - FETCH_RECORD
        - FETCH_RELATIONS
        - NUMBER_OF_TOTAL
        - USE_NEXT_START_AFTER
      title: BusinessPartnersReadFeatureParam
    BusinessPartnersReadFeature:
      type: string
      title: BusinessPartnersReadFeature
    BusinessPartnerRandomPage:
      type: object
      properties:
        limit:
          type: integer
          format: int32
        values:
          type: array
          items:
            $ref: '#/components/schemas/BusinessPartner'
      title: BusinessPartnerRandomPage
    PropertyChange2:
      type: object
      properties:
        externalIds:
          type: array
          items:
            $ref: '#/components/schemas/ExternalId'
        property:
          $ref: '#/components/schemas/Property'
        newContent:
          $ref: '#/components/schemas/PropertyNewContent'
        previousContent:
          $ref: '#/components/schemas/PropertyPreviousContent'
        provenance:
          $ref: '#/components/schemas/Provenance2'
        changeType:
          $ref: '#/components/schemas/PropertyChangeTypeTechnicalKey'
        changeClassification:
          $ref: '#/components/schemas/PropertyChangeClassification'
        confidenceScore:
          $ref: '#/components/schemas/PropertyChangeConfidenceScore'
        maxConfidenceScore:
          $ref: '#/components/schemas/PropertyChangeMaxConfidenceScore'
      title: PropertyChange2
    PropertyPreviousContent:
      type: string
      example: AAB
      description: >
        Value of a property before change.

        * In update coming from reference data source, this is a value from a
        business partner

        from this storage that the update suggests to change.

        * In own update done via upsert, this is a last value of this property
        that is coming

        out of last of previous updates of this business partner where this
        property

        was changed - it can be either previous own update or update coming from
        reference data source.
      title: PropertyPreviousContent
    PropertyNewContent:
      type: string
      example: AAB
      description: |
        New value of a property that:
        * has been changed by own update or
        * is an update proposal coming from reference data source.
      title: PropertyNewContent
    PropertyChangeClassificationParam:
      type: string
      enum:
        - MINOR
        - MAJOR
      title: PropertyChangeClassificationParam
    CharacterSet1:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/CharacterSetName'
        technicalKey:
          $ref: '#/components/schemas/CharacterSetTechnicalKey'
      title: CharacterSet1
    PropertyContentInstanceSelector:
      type: object
      description: Contains JSON paths allowing to select specific instance of a property.
      properties:
        key:
          $ref: '#/components/schemas/PropertyContentInstanceSelectorKey'
        value:
          $ref: '#/components/schemas/PropertyContentInstanceSelectorValue'
      title: PropertyContentInstanceSelector
    Provenance2:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ProvenanceName'
        url:
          $ref: '#/components/schemas/ProvenanceUrl'
        technicalKey:
          $ref: '#/components/schemas/ProvenanceTechnicalKey'
        cdqId:
          $ref: '#/components/schemas/ProvenanceCdqId'
      title: Provenance2
    BusinessPartnerUpdatesFeatureParam:
      type: string
      enum:
        - SHOW_BUSINESS_PARTNER
        - FETCH_STORAGE_BUSINESS_PARTNER
      title: BusinessPartnerUpdatesFeatureParam
    BusinessPartnerConceptParam:
      type: string
      enum:
        - NAME
        - IDENTIFIER
        - LEGAL_FORM
        - MINORITY_INDICATOR
        - STATUS
        - ADDRESS
        - COUNTRY
        - ADMINISTRATIVE_AREA
        - POST_CODE
        - LOCALITY
        - THOROUGHFARE
        - PREMISE
        - POSTAL_DELIVERY_POINT
        - GEO_COORDINATES
        - GEOGRAPHIC_COORDINATES
      example: MINORITY_INDICATOR
      title: BusinessPartnerConceptParam
    AddressMetadata:
      type: object
      properties:
        primaryProvenance:
          $ref: '#/components/schemas/Provenance2'
        language:
          $ref: '#/components/schemas/Language'
      title: AddressMetadata
    BusinessPartnersEventsCreationResult:
      type: object
      properties:
        numberOfCreated:
          type: integer
        numberOfUpdated:
          type: integer
        numberOfDeleted:
          type: integer
      title: BusinessPartnersEventsCreationResult
    BusinessPartnerIdentityLinkPage:
      type: object
      properties:
        startAfter:
          type: string
        nextStartAfter:
          type: string
        limit:
          type: integer
          format: int32
        total:
          type: integer
          format: int32
        values:
          type: array
          items:
            $ref: '#/components/schemas/BusinessPartnerIdentityLink'
      title: BusinessPartnerIdentityLinkPage
    SharingScope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/SharingScopeId'
        description:
          $ref: '#/components/schemas/SharingScopeDescription'
        dataSources:
          items:
            $ref: '#/components/schemas/BusinessPartnerStorageDataSource'
        countries:
          items:
            $ref: '#/components/schemas/SharingScopeCountry'
        applyingJob:
          $ref: '#/components/schemas/SharingScopeApplyingJob'
      title: SharingScope
    SharingScopeApplyingJob:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/JobId'
        status:
          $ref: '#/components/schemas/schemas-JobStatus'
        progress:
          $ref: '#/components/schemas/JobProgress'
      title: SharingScopeApplyingJob
    SharingScopeCountry:
      type: object
      properties:
        shortName:
          $ref: '#/components/schemas/CountryShortName'
      title: SharingScopeCountry
    SharingScopeCreate:
      type: object
      description: Indicates scope of business partners desired for sharing.
      properties:
        description:
          $ref: '#/components/schemas/SharingScopeDescription'
        dataSources:
          maxItems: 1
          items:
            $ref: '#/components/schemas/BusinessPartnerStorageDataSourceParam'
        countries:
          maxItems: 1
          items:
            $ref: '#/components/schemas/SharingScopeCountryParam'
      title: SharingScopeCreate
    SharingScopeCountryParam:
      type: object
      required:
        - shortName
      properties:
        shortName:
          type: string
      title: SharingScopeCountryParam
    SharingScopeDeletes:
      type: object
      properties:
        sharingScopes:
          type: array
          items:
            $ref: '#/components/schemas/SharingScopeDelete'
          maxItems: 1
      title: SharingScopeDeletes
    SharingScopeDelete:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/SharingScopeId'
      title: SharingScopeDelete
    SharingScopeDeleteResults:
      type: object
      properties:
        sharingScopes:
          type: array
          items:
            $ref: '#/components/schemas/SharingScopeDeleteResult'
      title: SharingScopeDeleteResults
    SharingScopeDeleteResult:
      type: object
      properties:
        sharingScope:
          $ref: '#/components/schemas/SharingScopeDelete'
        status:
          type: string
          description: >
            * OK - the sharing scope has been updated

            * NOT_FOUND - the sharing scope is not found

            * APPLICATION_OR_DELETION_IN_PROGRESS - the sharing scope is already
            deleted but deletion consequences are not yet applied
      title: SharingScopeDeleteResult
    SharingScopeRefreshes:
      type: object
      properties:
        sharingScopes:
          type: array
          items:
            $ref: '#/components/schemas/SharingScopeRefresh'
          maxItems: 1
      title: SharingScopeRefreshes
    SharingScopeRefresh:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/SharingScopeId'
      title: SharingScopeRefresh
    SharingScopeRefreshResults:
      type: object
      properties:
        sharingScopes:
          type: array
          items:
            $ref: '#/components/schemas/SharingScopeRefreshResult'
      title: SharingScopeRefreshResults
    SharingScopeRefreshResult:
      type: object
      properties:
        sharingScope:
          $ref: '#/components/schemas/SharingScopeRefresh'
        status:
          type: string
          description: >
            * OK - the sharing scope has been updated

            * NOT_FOUND - the sharing scope is not found

            * APPLICATION_IN_PROGRESS - the sharing scope is already deleted but
            deletion consequences are not yet applied
      title: SharingScopeRefreshResult
    SharingScopesReadFeatureParam:
      type: string
      enum:
        - FETCH_JOB_DETAILS
      title: SharingScopesReadFeatureParam
    SharingScopesReadFeature:
      type: string
      title: SharingScopesReadFeature
    SharingScopesPage:
      type: object
      properties:
        values:
          items:
            $ref: '#/components/schemas/SharingScopeSearchResult'
        limit:
          $ref: '#/components/schemas/Limit'
        startAfter:
          $ref: '#/components/schemas/StartAfter'
        nextStartAfter:
          $ref: '#/components/schemas/NextStartAfter'
        total:
          $ref: '#/components/schemas/PageTotal'
      title: SharingScopesPage
    SharingScopeSearchResult:
      properties:
        id:
          type: string
        description:
          type: string
        dataSources:
          items:
            $ref: '#/components/schemas/BusinessPartnerStorageDataSource'
        countries:
          items:
            $ref: '#/components/schemas/SharingScopeCountry'
        applyingJob:
          $ref: '#/components/schemas/SharingScopeApplyingJob'
      title: SharingScopeSearchResult
    BusinessPartnerChunkTransformAndUpsertTask:
      allOf:
        - $ref: '#/components/schemas/Task'
        - type: object
          properties:
            request:
              $ref: '#/components/schemas/BusinessPartnersTransformAndUpsertRequest'
            replyQueue:
              $ref: '#/components/schemas/ReplyQueue'
      title: BusinessPartnerChunkTransformAndUpsertTask
    BusinessPartnersTransformAndUpsertRequest:
      allOf:
        - $ref: '#/components/schemas/BusinessPartnersUpsertRequest'
        - type: object
          properties:
            storageId:
              type: string
      title: BusinessPartnersTransformAndUpsertRequest
    BusinessPartnerChunkIndexTask:
      allOf:
        - $ref: '#/components/schemas/Task'
        - type: object
          properties:
            request:
              $ref: '#/components/schemas/BusinessPartnerChunkIndexRequest'
            replyQueue:
              $ref: '#/components/schemas/ReplyQueue'
      title: BusinessPartnerChunkIndexTask
    BusinessPartnerChunkIndexRequest:
      type: object
      properties:
        storageId:
          type: string
        skipOldIndexing:
          type: boolean
        requests:
          type: array
          items:
            $ref: '#/components/schemas/BusinessPartner'
      title: BusinessPartnerChunkIndexRequest
    BusinessPartnerChunkIdentityLinkageTask:
      allOf:
        - $ref: '#/components/schemas/Task'
        - type: object
          properties:
            request:
              $ref: '#/components/schemas/BusinessPartnerChunkIdentityLinkageRequest'
            replyQueue:
              $ref: '#/components/schemas/ReplyQueue'
      title: BusinessPartnerChunkIdentityLinkageTask
    BusinessPartnerChunkIdentityLinkageRequest:
      type: object
      properties:
        link:
          description: Performs linkage or unlinkage.
          type: boolean
          default: true
        referenceDataSource:
          type: string
        storageId:
          type: string
        organizationId:
          type: string
        featuresOn:
          type: array
          items:
            $ref: '#/components/schemas/BusinessPartnerIdentityLinkageFeature'
        requests:
          type: array
          items:
            $ref: '#/components/schemas/BusinessPartner'
      title: BusinessPartnerChunkIdentityLinkageRequest
    BusinessPartnerIdentityLinkageFeature:
      type: string
      enum:
        - DNB_AUTO_SUBSCRIBE
      title: BusinessPartnerIdentityLinkageFeature
    BusinessPartnerChunkTransformAndUpsertTaskResult:
      allOf:
        - $ref: '#/components/schemas/TaskResult'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/BusinessPartnersWorkerUpsertResult'
      title: BusinessPartnerChunkTransformAndUpsertTaskResult
    BusinessPartnersWorkerUpsertResult:
      type: object
      properties:
        numberOfProcessed:
          type: integer
        numberOfInserts:
          type: integer
        numberOfUpdates:
          type: integer
        numberOfNoChanges:
          type: integer
        numberOfFailed:
          type: integer
        failures:
          type: array
          items:
            $ref: '#/components/schemas/UpsertFailureLog'
        businessPartners:
          type: array
          items:
            $ref: '#/components/schemas/BusinessPartnerUpserted'
      title: BusinessPartnersWorkerUpsertResult
    BusinessPartnerUpserted:
      type: object
      properties:
        externalId:
          type: string
      title: BusinessPartnerUpserted
    BusinessPartnerWorkerIdentityLinkageTaskResult:
      allOf:
        - $ref: '#/components/schemas/TaskResult'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/BusinessPartnerWorkerIdentityLinkageResult'
      title: BusinessPartnerWorkerIdentityLinkageTaskResult
    BusinessPartnerWorkerIdentityLinkageResult:
      type: object
      properties:
        numberOfProcessed:
          description: Number of all BusinessPartners processed (successfully or not)
          type: integer
        numberOfIdentityLinkCreations:
          description: Number of newly created links
          type: integer
        numberOfSuccessfulIdentityLinkCreations:
          description: Number of newly created links with successfull linkage
          type: integer
        numberOfIdentityLinkDeletions:
          description: Number of deleted links
          type: integer
        numberOfUpdateMonitoringEnabled:
          description: Number of Business Partners with enabled update monitoring
          type: integer
        numberOfUpdateMonitoringDisabled:
          description: Number of Business Partners with disabled update monitoring
          type: integer
        numberOfAlreadyExistingIdentityLinks:
          description: Number of already existing links
          type: integer
        numberOfNoMatches:
          description: BusinessPartners not found in lookup
          type: integer
        numberOfVersionNoMatches:
          description: BusinessPartners not found in lookup by version
          type: integer
        numberOfThresholdRejections:
          description: BusinessPartners rejected via threshold
          type: integer
        numberOfFailedLookups:
          description: Lookup request failures during execution
          type: integer
        numberOfFailed:
          description: Any kind of failures during execution
          type: integer
        numberOfNoIdentifier:
          description: BusinessPartners have no identifiers
          type: integer
        numberOfNoCountry:
          description: BusinessPartners have no country
          type: integer
        numberOfNoAccess:
          description: BusinessPartners rejected due to no access to the resource
          type: integer
      title: BusinessPartnerWorkerIdentityLinkageResult
    BusinessPartnerChunkDeleteTask:
      allOf:
        - $ref: '#/components/schemas/Task'
        - type: object
          properties:
            request:
              $ref: '#/components/schemas/BusinessPartnersDeleteWorkerRequest'
            replyQueue:
              $ref: '#/components/schemas/ReplyQueue'
      title: BusinessPartnerChunkDeleteTask
    BusinessPartnersDeleteWorkerRequest:
      allOf:
        - $ref: '#/components/schemas/BusinessPartnersDeleteRequest'
        - type: object
          properties:
            storageId:
              type: string
      title: BusinessPartnersDeleteWorkerRequest
    BusinessPartnerChunkDeleteTaskResult:
      allOf:
        - $ref: '#/components/schemas/TaskResult'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/BusinessPartnersWorkerDeleteResult'
      title: BusinessPartnerChunkDeleteTaskResult
    BusinessPartnersWorkerDeleteResult:
      type: object
      properties:
        numberOfProcessed:
          type: integer
        numberOfDeletes:
          type: integer
        numberOfFailed:
          type: integer
        failures:
          type: array
          items:
            $ref: '#/components/schemas/DeleteFailureLog'
      title: BusinessPartnersWorkerDeleteResult
    StorageLongOperationTask:
      allOf:
        - $ref: '#/components/schemas/Task'
        - type: object
          properties:
            request:
              $ref: '#/components/schemas/StorageLongOperationRequest'
            replyQueue:
              $ref: '#/components/schemas/ReplyQueue'
      title: StorageLongOperationTask
    StorageLongOperationRequest:
      type: object
      properties:
        featuresOn:
          type: array
          items:
            $ref: '#/components/schemas/StorageLongOperationFeature'
        storageId:
          $ref: '#/components/schemas/BusinessPartnerStorageId'
        dataSourceIds:
          type: array
          items:
            $ref: '#/components/schemas/BusinessPartnerStorageDataSourceId'
        referenceDataSource:
          type: string
        countryShortNames:
          type: array
          items:
            $ref: '#/components/schemas/CountryShortName'
        exceptCountryShortNames:
          type: array
          items:
            $ref: '#/components/schemas/CountryShortName'
        startAfter:
          type: string
      title: StorageLongOperationRequest
    StorageLongOperationFeature:
      type: string
      enum:
        - CLEAN_CDQ_POOL_SETTING
        - CLEAR_STORAGE
        - COUNT_IDENTITY_LINKS
        - COUNT_SUBSCRIPTIONS
        - DELETE_EXPIRED_STORAGE
        - DISABLE_DISCLOSED
        - DISABLE_UPDATE_MONITORING
        - ENABLE_DISCLOSED
        - ENABLE_UPDATE_MONITORING
        - RELOAD_EXPIRES_AT
        - RESTORE_CDQ_POOL_SETTING
      title: StorageLongOperationFeature
    StorageLongOperationTaskResult:
      allOf:
        - $ref: '#/components/schemas/TaskResult'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/StorageLongOperationResult'
      title: StorageLongOperationTaskResult
    StorageLongOperationResult:
      type: object
      properties:
        storageId:
          type: string
        status:
          type: string
          description: |
            status:
              * `OK` - Operation has been finished successfully
              * `FAILED` - Operation has failed
        statusMessage:
          type: string
        numberOfProcessed:
          type: integer
          format: int64
        numberOfInserts:
          type: integer
          format: int64
        numberOfUpdates:
          type: integer
          format: int64
        numberOfDeletes:
          type: integer
          format: int64
        numberOfFailed:
          type: integer
          format: int64
      title: StorageLongOperationResult
    BusinessPartnerRelationsPage:
      type: object
      properties:
        startAfter:
          type: string
        nextStartAfter:
          type: string
        limit:
          type: integer
          format: int32
        total:
          type: integer
          format: int32
        values:
          type: array
          items:
            $ref: '#/components/schemas/BusinessPartnerRelation'
      title: BusinessPartnerRelationsPage
    RelationsReadFeatureParam:
      type: string
      enum:
        - SHOW_BUSINESS_PARTNER_INFORMATION
      title: RelationsReadFeatureParam
    RelationsReadFeature:
      type: string
      title: RelationsReadFeature
    BusinessPartnerRelationsDeleteRequest:
      type: object
      properties:
        relations:
          type: array
          items:
            $ref: '#/components/schemas/BusinessPartnerRelationDelete'
      title: BusinessPartnerRelationsDeleteRequest
    BusinessPartnerRelationDelete:
      description: >-
        Delete relation by startNode and endNode. StartNode is required. If
        endNode is null, then delete all relations for BP from startNode (both
        as startNode or endNode)
      required:
        - startNode
      type: object
      properties:
        startNode:
          $ref: '#/components/schemas/BusinessPartnerRelationNode'
        endNode:
          $ref: '#/components/schemas/BusinessPartnerRelationNode'
        type:
          type: string
      title: BusinessPartnerRelationDelete
    BusinessPartnerRelationNode:
      type: object
      properties:
        externalId:
          type: string
        dataSourceId:
          type: string
      title: BusinessPartnerRelationNode
    BusinessPartnerRelationsDeleteResult:
      type: object
      properties:
        deleted:
          type: integer
      title: BusinessPartnerRelationsDeleteResult
    StorageCheckAccessRequest:
      type: object
      required:
        - scope
      properties:
        scope:
          type: string
          description: 'One of: [VIEW, EDIT].'
      title: StorageCheckAccessRequest
    StorageCheckAccessResult:
      type: object
      properties:
        status:
          type: string
        reasons:
          type: array
          items:
            type: string
      title: StorageCheckAccessResult
    BusinessPartnerMetadataPatch:
      type: object
      properties:
        decisionLogResult:
          $ref: '#/components/schemas/DecisionLogResult'
      title: BusinessPartnerMetadataPatch
    DecisionLogResult:
      type: object
      properties:
        reviewStatus:
          x-apimatic-facade: '#/components/schemas/ReviewStatusParam'
          $ref: '#/components/schemas/ReviewStatusParam'
        naturalPersonsReviewStatus:
          x-apimatic-facade: '#/components/schemas/ReviewStatusParam'
          $ref: '#/components/schemas/ReviewStatusParam'
        duplicatesReviewStatus:
          x-apimatic-facade: '#/components/schemas/ReviewStatusParam'
          $ref: '#/components/schemas/ReviewStatusParam'
      title: DecisionLogResult
    ReviewStatus:
      type: string
      title: ReviewStatus
    ReviewStatusParam:
      type: string
      enum:
        - REVIEWED
        - NOT_REVIEWED
      title: ReviewStatusParam
    CmpelkV2:
      description: ''
      type: object
      properties:
        transactionDetail:
          type: object
          description: The information used to process this request.
          properties:
            transactionID:
              description: >-
                A value assigned by the Dun & Bradstreet application to uniquely
                identify this request.
              type: string
              example: rlh-hi9puyoijk-jop8u-kd-d-1
            transactionTimestamp:
              description: >-
                The date and time, in ISO 8601 UTC Z standard, when this
                response was created.
              type: string
              example: '2017-02-21T17:46:19.839Z'
            inLanguage:
              description: >-
                An IETF BCP 47 code value that defines the language in which
                this product was rendered.
              type: string
              example: en-US
            productID:
              description: The ID of the product used to create the response.
              type: string
              example: PRODID
            productVersion:
              description: The version of the product used to create the response.
              type: string
              example: 1
        inquiryDetail:
          type: object
          description: The criteria used to process this request.
          properties:
            duns:
              type: string
              example: 804735132
              description: The D-U-N-S number provided in the request.
            productID:
              type: string
              example: PRODID
              description: The ID of the product used to produce the response.
            productVersion:
              type: string
              example: v1
              description: The product version number provided in the request.
            tradeUp:
              type: string
              example: hq
              description: The value of the tradeUp parameter provided in the request.
            customerReference:
              type: string
              example: Some text to describe the request.
              description: >-
                A reference string provided by the customer to be linked to the
                product in order to support subsequent order reconciliation.
        organization:
          type: object
          description: The details of the entity's organization.
          example: ''
          properties:
            duns:
              type: string
              example: 804735132
              description: >-
                The D-U-N-S Number, assigned by Dun & Bradstreet, is an
                identification number that uniquely identifies the entity in
                accordance with the Data Universal Numbering System (D-U-N-S).
            dunsControlStatus:
              type: object
              example: ''
              description: >-
                The details of the entity established to provide products and/or
                services in the marketplace or to the community.
              properties:
                operatingStatus:
                  type: object
                  example: ''
                  description: >-
                    The details of the entity's functional state or trading
                    status.
                  properties:
                    description:
                      type: string
                      example: Active
                      description: >-
                        The entity's functional state or trading status (e.g.,
                        active, out of business).
                    dnbCode:
                      type: integer
                      example: 9074
                      description: >-
                        A unique code assigned by Dun & Bradstreet to identify
                        the entity's functional state or trading status.
                isMarketable:
                  type: boolean
                  example: 'true'
                  description: >-
                    Indicates whether the data on the entity satisfies Dun &
                    Bradstreet's marketability rules for Sales & Marketing
                    Solutions products. <br/><br/>- If true, the entity data
                    satisfies the marketability rules.<br/>- If false, the
                    entity data does not satisfy the marketability rules.
                isMailUndeliverable:
                  type: boolean
                  example: 'false'
                  description: >-
                    Indicates whether it is possible to deliver mail to the
                    address of this entity.<br/><br/>- If true, it is not
                    possible to deliver mail to the address.<br/>- If false, it
                    is possible to deliver mail to the address.
                isTelephoneDisconnected:
                  type: boolean
                  example: 'false'
                  description: >-
                    Indicates whether the telephone number can be connected to
                    successfully.<br/><br/>- If true, connection to the 
                    telephone number is unsuccessful.<br/>- If false, connection
                    to the  telephone number is successful.
                isDelisted:
                  type: boolean
                  example: 'false'
                  description: >-
                    Indicates whether the entity has requested that they not be
                    included in any Direct marketing lists (e.g., mailing,
                    telephone).<br/><br/>- If true, the entity has objected to
                    and MUST NOT receive direct marketing material.<br/>- If
                    false, the entity has not objected to receiving direct
                    marketing material.
                subjectHandlingDetails:
                  type: array
                  description: >-
                    The details of the manner in which the entity is to receive
                    special care being contacted. In many cases, this was
                    specifically requested by the entity.
                  items:
                    properties:
                      description:
                        type: string
                        example: Do not call
                        description: >-
                          The manner in which the entity is to receive special
                          care when being contacted (e.g., do not call or do not
                          send information requests). In many cases, this was
                          specifically requested by the entity.
                      dnbCode:
                        type: integer
                        example: 7974
                        description: >-
                          A unique code assigned by Dun & Bradstreet to identify
                          the manner in which the entity is to receive special
                          care from Dun & Bradstreet when it is being contacted.
                    example: ''
                    type: object
                fullReportDate:
                  type: string
                  example: '2017-01-30'
                  description: >-
                    The most recent date when a complete review of all business
                    information data was completed.<br/><br/>Format: YYYY-MM-DD
                    or YYYY-MM
            primaryName:
              type: string
              example: GORMAN MANUFACTURING COMPANY, INC.
              description: >-
                The single name by which the entity is primarily known or
                identified.
            tradeStyleNames:
              type: array
              description: >-
                The details of the names that the entity trades under for
                commercial purposes although its registered legal name used for
                contracts and other formal situations may be another name.
              items:
                properties:
                  name:
                    type: string
                    example: Alternate Company Name
                    description: >-
                      The name that the entity trades under for commercial
                      purposes  although its registered legal name used for
                      contracts and other formal situations may be another name.
                  priority:
                    type: integer
                    example: 1
                    description: >-
                      The sequence in which the entity mostly uses this
                      tradestyle name.
                example: ''
                type: object
            websiteAddress:
              type: array
              description: >-
                The details of the internet URLs used for online information and
                communication with the entity.
              items:
                properties:
                  url:
                    type: string
                    example: http://www.gorman.com
                    description: >-
                      The Internet URL (Uniform Resource Locator) that uniquely
                      identifies the proprietary website of the entity or the
                      website preferred by the entity that gives more
                      information on the entity.
                  domainName:
                    type: string
                    example: gorman.com
                    description: >-
                      A unique name used to identify the website of the entity
                      that serves as an address to access that website.
                example: ''
                type: object
            telephone:
              type: array
              description: >-
                The details of the telephone information used for voice
                communication with the entity.
              items:
                properties:
                  telephoneNumber:
                    type: string
                    example: 6505550000
                    description: >-
                      A sequence of digits used for voice communication with the
                      entity.<br/>This sequence of digits includes the area code
                      or city code and domestic dialing code.
                  isdCode:
                    type: string
                    example: 1
                    description: >-
                      The country calling code assigned by the International
                      Telecommunication Union (ITU) required to connect to this
                      telephone number when dialing from outside the entity's
                      country (e.g., '1' for the US, '44' for the UK, '91' for
                      India).
                  isUnreachable:
                    type: boolean
                    example: 'false'
                    description: >-
                      Indicates whether the telephone number can be connected to
                      successfully.<br/><br/>- If true, connection to the 
                      telephone number is unsuccessful.<br/>- If false,
                      connection to the  telephone number is successful.
                example: ''
                type: object
            fax:
              type: array
              description: >-
                The details of the facsimile information used for data
                communication with the entity.
              items:
                properties:
                  faxNumber:
                    type: string
                    example: 6505550001
                    description: >-
                      A sequence of digits used for facsimile communication with
                      the entity.<br/>This sequence of digits includes the area
                      code or city code and domestic dialing code.
                  isdCode:
                    type: string
                    example: 1
                    description: >-
                      The country calling code assigned by the International
                      Telecommunication Union (ITU) required to connect to this
                      facsimile number when dialing from outside the entity's
                      country (e.g., '1' for the US, '44' for the UK, '91' for
                      India).
                example: ''
                type: object
            primaryAddress:
              type: object
              example: ''
              description: >-
                The details of the single primary or physical address at which
                the entity is located.
              properties:
                language:
                  type: object
                  example: ''
                  description: >-
                    The details of the language in which this address was
                    recorded.
                  properties:
                    description:
                      type: string
                      example: English
                      description: >-
                        The name of the language in which this address was
                        recorded.
                    dnbCode:
                      type: integer
                      example: 39
                      description: >-
                        A unique code assigned by Dun & Bradstreet to identify
                        the language in which this address was recorded.
                addressCountry:
                  type: object
                  example: ''
                  description: The details of the country in which this address is located.
                  properties:
                    name:
                      type: string
                      example: United States
                      description: >-
                        The name of the country in which this address is
                        located.
                    isoAlpha2Code:
                      type: string
                      example: US
                      description: >-
                        The two-letter country code, defined by the
                        International Organization for Standardization (ISO) ISO
                        3166-1 scheme identifying the country in which this
                        address is located.
                    fipsCode:
                      type: string
                      example: US
                      description: >-
                        The Federal Information Processing Standards (FIPS) code
                        value that identifies the country in which this address
                        is located.
                continentalRegion:
                  type: object
                  example: ''
                  description: >-
                    The details of the continental region in which this address
                    is located.
                  properties:
                    name:
                      type: string
                      example: North America
                      description: >-
                        The name of the continental region for this
                        address.<br/><br/>Possible values:<br/>- Africa<br/>-
                        Asia Pacific<br/>- Europe<br/>- Latin America<br/>-
                        Middle East<br/>- North America
                addressLocality:
                  type: object
                  example: ''
                  description: >-
                    The details of the city, town, township, village, borough,
                    etc. in which this address is located.
                  properties:
                    name:
                      type: string
                      example: SAN FRANCISCO
                      description: >-
                        The name of the city, town, township, village, borough,
                        etc. in which this address is located.
                minorTownName:
                  type: string
                  example: Booker
                  description: >-
                    The name of the village, town or suburb when it is not a
                    Primary Town or City (e.g., the Booker in Booker, High
                    Wycombe).
                addressRegion:
                  type: object
                  example: ''
                  description: >-
                    The details of the locally governed area that forms part of
                    a centrally governed nation to identify where this address
                    is located.
                  properties:
                    name:
                      type: string
                      example: California
                      description: >-
                        The name of the locally governed area that forms part of
                        a centrally governed nation to identify where this
                        address is located.
                    abbreviatedName:
                      type: string
                      example: CA
                      description: >-
                        The shortened name of the locally governed area that
                        forms part of a centrally governed nation. For example
                        'NJ' for the US State New Jersey within Country United
                        States.
                    fipsCode:
                      type: string
                      example: '06'
                      description: >-
                        The Federal Information Processing Standards (FIPS) code
                        value that identifies the region in which this address
                        is located.
                addressCounty:
                  type: object
                  example: ''
                  description: The details of the county in which this address is located.
                  properties:
                    name:
                      type: string
                      example: SAN MATEO
                      description: The name of the county in which this address is located.
                    fipsCode:
                      type: string
                      example: 81
                      description: >-
                        The Federal Information Processing Standards (FIPS) code
                        value that identifies the county in which this address
                        is located.
                postalCode:
                  type: string
                  example: 941109999
                  description: >-
                    An identifier used by the local country's postal authority
                    to identify where this address is located.
                postalCodePosition:
                  type: object
                  example: ''
                  description: >-
                    The details of the position of the Postal Code when
                    presenting the address.
                  properties:
                    description:
                      type: string
                      example: Post code presented before Town/City name
                      description: >-
                        The position of the Postal Code when presenting the
                        address (e.g., before the Primary Town/City).
                    dnbCode:
                      type: integer
                      example: 1009
                      description: >-
                        A unique code assigned by Dun & Bradstreet to identify
                        the position of the Postal Code when presenting the
                        address.
                streetNumber:
                  type: string
                  example: 492
                  description: >-
                    The number part of the street address where the entity is
                    located. <br/><br/>This may be a single number, a number
                    with an appendix, or a range of street numbers.
                    <br/><br/>For example, the &quot;51 - 59C&quot; in the
                    address 51 - 59C Wall Street.
                streetName:
                  type: string
                  example: KOLLER ST
                  description: >-
                    The name of the street where the entity is located.
                    <br/><br/>For example, &quot;Wall Street&quot; in the
                    address 51 - 59C Wall Street.
                streetAddress:
                  type: object
                  example: ''
                  description: >-
                    The details of the street address where the entity is
                    located.
                  properties:
                    line1:
                      type: string
                      example: 492 KOLLER ST
                      description: >-
                        The first line of the address where the entity is
                        located.<br/><br/>For example, &quot;41 Central
                        Chambers&quot; in the address <br/>41 Central
                        Chambers<br/>Dame Court<br/>Dublin 2
                    line2:
                      type: string
                      example: Suite 100
                      description: >-
                        The second line of the address where the entity is
                        located.<br/><br/>For example, &quot;Dame Court&quot; in
                        the address <br/>41 Central Chambers<br/>Dame
                        Court<br/>Dublin 2
                postOfficeBox:
                  type: object
                  example: ''
                  description: >-
                    The details of the identifier issued to the entity by a
                    private or public Postal Office for the purposes of
                    collecting mail for the entity for subsequent collection or
                    delivery.
                  properties:
                    postOfficeBoxNumber:
                      type: string
                      example: 5309
                      description: >-
                        An identifier issued to the entity by a private or
                        public postal office for the purposes of collecting mail
                        for the entity for subsequent collection or
                        delivery.<br/><br/>This includes only the identifying
                        number (or text) and not the textual description of the
                        PO Box type. For example the contents would be just the
                        number 12 from &quot;PO Box 12&quot;, or just the number
                        57 from &quot;PMB 57&quot;.
                    typeDescription:
                      type: string
                      example: Supplied by public Post Office authority
                      description: The type of the PO Box (e.g., Post Office Box, PMB).
                    typeDnBCode:
                      type: integer
                      example: 120
                      description: >-
                        A unique code assigned by Dun & Bradstreet to identify
                        the type of PO Box.
                latitude:
                  type: number
                  example: 37.777709
                  description: >-
                    The latitude component of the entity's location defined as
                    the angular distance of the primary physical address north
                    or south from the Earth's equator expressed in decimal
                    numbers. <br/><br/>Positive numbers indicate degrees north.
                    Negative numbers indicate degrees south.
                longitude:
                  type: number
                  example: -122.404624
                  description: >-
                    The longitude component of the entity's location defined as
                    the angular distance of the primary physical address east or
                    west from an imaginary line (called the prime meridian) that
                    goes from the North Pole to the South Pole expressed in
                    decimal numbers. <br/><br/>Positive numbers indicate degrees
                    east. Negative numbers indicate degrees west.
                geographicalPrecision:
                  type: object
                  example: ''
                  description: >-
                    The details on how close the latitude and longitude
                    coordinates for a location are to rooftop level.
                  properties:
                    description:
                      type: string
                      example: Street Segment Centroid
                      description: >-
                        The description of how close the latitude and longitude
                        coordinates for a location are to rooftop level.
                    dnbCode:
                      type: integer
                      example: 30256
                      description: >-
                        A unique code assigned by Dun & Bradstreet to identify
                        how close the latitude and longitude coordinates for a
                        location are to &quot;rooftop&quot; level.
                isRegisteredAddress:
                  type: boolean
                  example: 'true'
                  description: >-
                    Indicates if the primary address is the same as the address
                    of the entity as registered with a legal entity.  <br/> 
                    <br/>- If true, the primary address is the same as the
                    address of the entity as registered with a legal
                    entity.<br/>- If false, the primary address is the not same
                    as the address of the entity as registered with a legal
                    entity.
                isResidentialAddress:
                  type: boolean
                  example: 'false'
                  description: >-
                    Indicates whether or not the Primary Address is classified
                    as residential by the governing postal authority<br/><br/>-
                    If true, the primary address is classified as
                    residential.<br/>- If false, the primary address is not
                    classified as residential.
                statisticalArea:
                  type: object
                  example: ''
                  description: >-
                    The details of the various statistical facts associated with
                    this address.
                  properties:
                    cbsaName:
                      type: string
                      example: San Francisco-Oakland-Hayward CA
                      description: >-
                        The name assigned to the 5-digit CBSA (Core Based
                        Statistical Area) assigned by US Census board to denote
                        a geographical region with a relatively high population
                        density at its core and close economic ties throughout
                        the area.
                    cbsaCode:
                      type: string
                      example: 41860
                      description: >-
                        The 5-digit CBSA (Core Based Statistical Area) code
                        assigned by US Census board to denote a geographical
                        region with a relatively high population density at its
                        core and close economic ties throughout the area.
                    economicAreaOfInfluenceCode:
                      type: string
                      example: 146
                      description: >-
                        A code assigned by the U.S Bureau of Economic Analysis
                        to identify the entity's regional market that surrounds
                        a metropolitan or micropolitan statistical area serving
                        as a regional center of economic activity.
                    populationRank:
                      type: object
                      example: ''
                      description: >-
                        The details of the statistical facts about population
                        based on region's rank.
                      properties:
                        rankNumber:
                          type: string
                          example: 9
                          description: >-
                            A number classifying the geographic area in which
                            the entity is located based on the resident
                            population.<br/><br/>Values: 0 to 9<br/>0 denotes
                            the lowest population range; 9 denotes the highest.
                        rankDnBCode:
                          type: integer
                          example: 10961
                          description: >-
                            A unique code assigned by Dun & Bradstreet to
                            identify the population for the geographical area in
                            which this address is located.
                        rankDescription:
                          type: string
                          example: 500,000 +
                          description: >-
                            A range of the population for the geographical area
                            where the entity is located.
                locationOwnership:
                  type: object
                  example: ''
                  description: >-
                    The details of the terms under which the entity occupies the
                    premises.
                  properties:
                    description:
                      type: string
                      example: Rents
                      description: >-
                        Description of the terms under which the entity occupies
                        the premises (e.g., owned, rented, leased).
                    dnbCode:
                      type: integer
                      example: 1129
                      description: >-
                        A unique code assigned by Dun & Bradstreet to identify
                        the terms under which the entity occupies the premises.
                premisesArea:
                  type: object
                  example: ''
                  description: The details of space the entity utilizes at this address.
                  properties:
                    measurement:
                      type: number
                      example: 10034
                      description: >-
                        A number portion of the amount to of space the entity
                        occupies at this address (e.g., the 2000 in 2000 square
                        meters).
                    unitDescription:
                      type: string
                      example: square foot
                      description: >-
                        The measurement unit used to express the premises area
                        measurement (e.g., acre, square meters, square feet).
                    unitDnBCode:
                      type: integer
                      example: 3848
                      description: >-
                        A unique code assigned by Dun & Bradstreet to identify
                        the measurement unit used to express the premises area
                        measurement.
                    reliabilityDescription:
                      type: string
                      example: Actual
                      description: >-
                        The accuracy of the measurement (e.g., actual,
                        estimated, modeled).
                    reliabilityDnBCode:
                      type: integer
                      example: 9092
                      description: >-
                        A unique code assigned by Dun & Bradstreet to identify
                        the accuracy of the measurement.
                isManufacturingLocation:
                  type: boolean
                  example: 'true'
                  description: >-
                    Indicates if manufacturing activity is performed at this
                    facility by the entity.<br/><br/>- If true, the entity
                    performs manufacturing activity at this facility.<br/>- If
                    false, the entity does not performs manufacturing activity
                    at this facility.
            registeredAddress:
              type: object
              example: ''
              description: >-
                The details of the official address of the entity as registered
                with a local or national registry to which all official
                correspondence must be sent.
              properties:
                language:
                  type: object
                  example: ''
                  description: >-
                    The details of the language in which this address was
                    recorded.
                  properties:
                    description:
                      type: string
                      example: English
                      description: >-
                        The name of the language in which this address was
                        recorded.
                    dnbCode:
                      type: integer
                      example: 39
                      description: >-
                        A unique code assigned by Dun & Bradstreet to identify
                        the language in which this address was recorded.
                addressCountry:
                  type: object
                  example: ''
                  description: The details of the country in which this address is located.
                  properties:
                    name:
                      type: string
                      example: United States
                      description: >-
                        The name of the country in which this address is
                        located.
                    isoAlpha2Code:
                      type: string
                      example: US
                      description: >-
                        The two-letter country code, defined by the
                        International Organization for Standardization (ISO) ISO
                        3166-1 scheme identifying the country in which this
                        address is located.
                addressLocality:
                  type: object
                  example: ''
                  description: >-
                    The details of the city, town, township, village, borough,
                    etc. in which this address is located.
                  properties:
                    name:
                      type: string
                      example: SAN FRANCISCO
                      description: >-
                        The name of the city, town, township, village, borough,
                        etc. in which this address is located.
                minorTownName:
                  type: string
                  example: Booker
                  description: >-
                    The name of the village, town or suburb when it is not a
                    Primary Town or City (e.g., the Booker in Booker, High
                    Wycombe).
                addressRegion:
                  type: object
                  example: ''
                  description: >-
                    The details of the locally governed area that forms part of
                    a centrally governed nation to identify where this address
                    is located.
                  properties:
                    name:
                      type: string
                      example: California
                      description: >-
                        The name of the locally governed area that forms part of
                        a centrally governed nation to identify where this
                        address is located.
                    abbreviatedName:
                      type: string
                      example: CA
                      description: >-
                        The shortened name of the locally governed area that
                        forms part of a centrally governed nation. For example
                        'NJ' for the US State New Jersey within Country United
                        States.
                addressCounty:
                  type: object
                  example: ''
                  description: The details of the county in which this address is located.
                  properties:
                    name:
                      type: string
                      example: SAN MATEO
                      description: The name of the county in which this address is located.
                postalCode:
                  type: string
                  example: 941109999
                  description: >-
                    An identifier used by the local country's postal authority
                    to identify where this address is located.
                postalCodePosition:
                  type: object
                  example: ''
                  description: >-
                    The details of the position of the Postal Code when
                    presenting the address.
                  properties:
                    description:
                      type: string
                      example: Post code presented before Town/City name
                      description: >-
                        The position of the Postal Code when presenting the
                        address (e.g., before the Primary Town/City).
                    dnbCode:
                      type: integer
                      example: 1009
                      description: >-
                        A unique code assigned by Dun & Bradstreet to identify
                        the position of the Postal Code when presenting the
                        address.
                streetNumber:
                  type: string
                  example: 492
                  description: >-
                    The number part of the street address where the entity is
                    located. <br/><br/>This may be a single number, a number
                    with an appendix, or a range of street numbers.
                    <br/><br/>For example, the &quot;51 - 59C&quot; in the
                    address 51 - 59C Wall Street.
                streetName:
                  type: string
                  example: KOLLER ST
                  description: >-
                    The name of the street where the entity is located.
                    <br/><br/>For example, &quot;Wall Street&quot; in the
                    address 51 - 59C Wall Street.
                streetAddress:
                  type: object
                  example: ''
                  description: >-
                    The details of the street address where the entity is
                    located.
                  properties:
                    line1:
                      type: string
                      example: 492 KOLLER ST
                      description: >-
                        The first line of the address where the entity is
                        located.<br/><br/>For example, &quot;41 Central
                        Chambers&quot; in the address <br/>41 Central
                        Chambers<br/>Dame Court<br/>Dublin 2
                    line2:
                      type: string
                      example: Suite 100
                      description: >-
                        The second line of the address where the entity is
                        located.<br/><br/>For example, &quot;Dame Court&quot; in
                        the address <br/>41 Central Chambers<br/>Dame
                        Court<br/>Dublin 2
                    line3:
                      type: string
                      example: Address line 3
                      description: >-
                        The third line of the address where the entity is
                        located.
                    line4:
                      type: string
                      example: Address line 4
                      description: >-
                        The forth line of the address where the entity is
                        located.
                postOfficeBox:
                  type: object
                  example: ''
                  description: >-
                    The details of the identifier issued to the entity by a
                    private or public Postal Office for the purposes of
                    collecting mail for the entity for subsequent collection or
                    delivery.
                  properties:
                    postOfficeBoxNumber:
                      type: string
                      example: 5309
                      description: >-
                        An identifier issued to the entity by a private or
                        public postal office for the purposes of collecting mail
                        for the entity for subsequent collection or
                        delivery.<br/><br/>This includes only the identifying
                        number (or text) and not the textual description of the
                        PO Box type. For example the contents would be just the
                        number 12 from &quot;PO Box 12&quot;, or just the number
                        57 from &quot;PMB 57&quot;.
                    typeDescription:
                      type: string
                      example: Supplied by public Post Office authority
                      description: The type of the PO Box (e.g., Post Office Box, PMB).
                    typeDnBCode:
                      type: integer
                      example: 120
                      description: >-
                        A unique code assigned by Dun & Bradstreet to identify
                        the type of PO Box.
            mailingAddress:
              type: object
              example: ''
              description: >-
                The details of the address used by the entity for mailing
                purposes.
              properties:
                language:
                  type: object
                  example: ''
                  description: >-
                    The details of the language in which this address was
                    recorded.
                  properties:
                    description:
                      type: string
                      example: English
                      description: >-
                        The name of the language in which this address was
                        recorded.
                    dnbCode:
                      type: integer
                      example: 39
                      description: >-
                        A unique code assigned by Dun & Bradstreet to identify
                        the language in which this address was recorded.
                addressCountry:
                  type: object
                  example: ''
                  description: The details of the country in which this address is located.
                  properties:
                    name:
                      type: string
                      example: United States
                      description: >-
                        The name of the country in which this address is
                        located.
                    isoAlpha2Code:
                      type: string
                      example: US
                      description: >-
                        The two-letter country code, defined by the
                        International Organization for Standardization (ISO) ISO
                        3166-1 scheme identifying the country in which this
                        address is located.
                continentalRegion:
                  type: object
                  example: ''
                  description: >-
                    The details of the continental region in which this address
                    is located.
                  properties:
                    name:
                      type: string
                      example: North America
                      description: >-
                        The name of the continental region for this
                        address.<br/><br/>Possible values:<br/>- Africa<br/>-
                        Asia Pacific<br/>- Europe<br/>- Latin America<br/>-
                        Middle East<br/>- North America
                addressLocality:
                  type: object
                  example: ''
                  description: >-
                    The details of the city, town, township, village, borough,
                    etc. in which this address is located.
                  properties:
                    name:
                      type: string
                      example: SAN FRANCISCO
                      description: >-
                        The name of the city, town, township, village, borough,
                        etc. in which this address is located.
                minorTownName:
                  type: string
                  example: Booker
                  description: >-
                    The name of the village, town or suburb when it is not a
                    Primary Town or City (e.g., the Booker in Booker, High
                    Wycombe).
                addressRegion:
                  type: object
                  example: ''
                  description: >-
                    The details of the locally governed area that forms part of
                    a centrally governed nation to identify where this address
                    is located.
                  properties:
                    name:
                      type: string
                      example: California
                      description: >-
                        The name of the locally governed area that forms part of
                        a centrally governed nation to identify where this
                        address is located.
                    abbreviatedName:
                      type: string
                      example: CA
                      description: >-
                        The shortened name of the locally governed area that
                        forms part of a centrally governed nation. For example
                        'NJ' for the US State New Jersey within Country United
                        States.
                addressCounty:
                  type: object
                  example: ''
                  description: The details of the county in which this address is located.
                  properties:
                    name:
                      type: string
                      example: SAN MATEO
                      description: The name of the county in which this address is located.
                postalCode:
                  type: string
                  example: 941109999
                  description: >-
                    An identifier used by the local country's postal authority
                    to identify where this address is located.
                postalCodePosition:
                  type: object
                  example: ''
                  description: >-
                    The details of the position of the Postal Code when
                    presenting the address.
                  properties:
                    description:
                      type: string
                      example: Post code presented before Town/City name
                      description: >-
                        The position of the Postal Code when presenting the
                        address (e.g., before the Primary Town/City).
                    dnbCode:
                      type: integer
                      example: 1009
                      description: >-
                        A unique code assigned by Dun & Bradstreet to identify
                        the position of the Postal Code when presenting the
                        address.
                postalRoute:
                  type: string
                  example: route 3B
                  description: >-
                    A code assigned by the local postal authority that sorts
                    mail pieces to the individual carrier routes within a postal
                    code.
                streetNumber:
                  type: string
                  example: 492
                  description: >-
                    The number part of the street address where the entity is
                    located. <br/><br/>This may be a single number, a number
                    with an appendix, or a range of street numbers.
                    <br/><br/>For example, the &quot;51 - 59C&quot; in the
                    address 51 - 59C Wall Street.
                streetName:
                  type: string
                  example: KOLLER ST
                  description: >-
                    The name of the street where the entity is located.
                    <br/><br/>For example, &quot;Wall Street&quot; in the
                    address 51 - 59C Wall Street.
                streetAddress:
                  type: object
                  example: ''
                  description: >-
                    The details of the street address where the entity is
                    located.
                  properties:
                    line1:
                      type: string
                      example: 492 KOLLER ST
                      description: >-
                        The first line of the address where the entity is
                        located.<br/><br/>For example, &quot;41 Central
                        Chambers&quot; in the address <br/>41 Central
                        Chambers<br/>Dame Court<br/>Dublin 2
                    line2:
                      type: string
                      example: Suite 100
                      description: >-
                        The second line of the address where the entity is
                        located.<br/><br/>For example, &quot;Dame Court&quot; in
                        the address <br/>41 Central Chambers<br/>Dame
                        Court<br/>Dublin 2
                postOfficeBox:
                  type: object
                  example: ''
                  description: >-
                    The details of the identifier issued to the entity by a
                    private or public Postal Office for the purposes of
                    collecting mail for the entity for subsequent collection or
                    delivery.
                  properties:
                    postOfficeBoxNumber:
                      type: string
                      example: 5309
                      description: >-
                        An identifier issued to the entity by a private or
                        public postal office for the purposes of collecting mail
                        for the entity for subsequent collection or
                        delivery.<br/><br/>This includes only the identifying
                        number (or text) and not the textual description of the
                        PO Box type. For example the contents would be just the
                        number 12 from &quot;PO Box 12&quot;, or just the number
                        57 from &quot;PMB 57&quot;.
                    typeDescription:
                      type: string
                      example: Supplied by public Post Office authority
                      description: The type of the PO Box (e.g., Post Office Box, PMB).
                    typeDnBCode:
                      type: integer
                      example: 120
                      description: >-
                        A unique code assigned by Dun & Bradstreet to identify
                        the type of PO Box.
            stockExchanges:
              type: array
              description: >-
                The details of the Stock Exchanges on which the entity's shares
                are traded.
              items:
                properties:
                  tickerName:
                    type: string
                    example: NYSE:DNB
                    description: >-
                      Text by which the entity is identified on this Stock
                      Exchange for share trading purposes.
                  exchangeName:
                    type: object
                    example: ''
                    description: >-
                      The details of the name of the Stock Exchange on which the
                      entity's shares are traded.
                    properties:
                      description:
                        type: string
                        example: NYSE
                        description: The name the Stock Exchange.
                  exchangeCountry:
                    type: object
                    example: ''
                    description: The details of the country of the Stock Exchange.
                    properties:
                      isoAlpha2Code:
                        type: string
                        example: US
                        description: >-
                          The two-letter country code, defined by the
                          International Organization for Standardization (ISO)
                          ISO 3166-1 scheme identifying the country of the Stock
                          Exchange.
                  isPrimary:
                    type: boolean
                    example: 'true'
                    description: >-
                      Indicates if this is the most important stock exchange
                      among all the stock exchange where the entity's shares are
                      traded. <br/><br/>- If true, indicates that this is the
                      most important Stock Exchange.<br/>- If false, indicates
                      that this is not the most important Stock Exchange.
                example: ''
                type: object
            thirdPartyAssessment:
              type: array
              description: >-
                The details of the appraisal or opinion assigned to the entity
                by an organization other than the Dun & Bradstreet Worldwide
                Network (WWN).
              items:
                properties:
                  description:
                    type: string
                    example: Fortune 500 Revenue Rank
                    description: >-
                      The kind of appraisal, opinion, or rank that was assigned
                      to the entity by the third party (e.g., Moody's Long Term
                      Obligation Rating, FICO score, Vantage Score).
                  dnbCode:
                    type: integer
                    example: 23290
                    description: >-
                      A unique code assigned by Dun & Bradstreet to identify the
                      type of assessment.
                  assessmentDate:
                    type: string
                    example: 2017
                    description: >-
                      The date on which the assessment value was assigned by the
                      third party.
                  value:
                    type: string
                    example: 31
                    description: >-
                      The value for the appraisal, opinion, or rank that was
                      assigned by the third party.
                example: ''
                type: object
            registrationNumbers:
              type: array
              description: >-
                The details of the numbers assigned by an external body or by
                Dun & Bradstreet that either uniquely identifies or helps to
                identify the entity.
              items:
                properties:
                  registrationNumber:
                    type: string
                    example: 12-3456789
                    description: >-
                      The number assigned by an external body or by Dun &
                      Bradstreet that either uniquely identifies or helps to
                      identify the entity.
                  typeDescription:
                    type: string
                    example: Federal Taxpayer Identification Number (US)
                    description: >-
                      The type of registration (e.g., Chamber of Commerce
                      Number, Value Added Tax Number, Federal Taxpayer
                      Identification Number, Companies Registry Office Number).
                  typeDnBCode:
                    type: integer
                    example: 6863
                    description: >-
                      A unique code assigned by Dun & Bradstreet to identify the
                      type of registration number.
                example: ''
                type: object
            industryCodes:
              type: array
              description: >-
                The details of the business activities in which the entity is
                actively engaged using standardized coding schemes such as
                European NACE and U.S. Standard Industry Classifications (SIC).
              items:
                properties:
                  code:
                    type: string
                    example: 323111
                    description: >-
                      The code that identifies the business activity in which
                      the entity is engaged.  <br/><br/>For example, 1611
                      represents the highway and street construction industry in
                      the U.S. SIC (Standard Industrial Classification)
                      system.<br/><br/>Note: These are generally external codes
                      created by an external authoritative body, like the U.S.
                      Office of Management and Budget (OMB); however, Dun &
                      Bradstreet may have created extensions to more precisely
                      define an activity, as in the case of the SIC 2+2 (the
                      last 4 digits of an 8-digit SIC).
                  description:
                    type: string
                    example: 'Commercial Printing '
                    description: >-
                      The business activity description as assigned by the
                      coding scheme used.
                  typeDescription:
                    type: string
                    example: North American Industry Classification System 2012
                    description: >-
                      The industry coding scheme used for this Industry Code
                      (e.g., U.S. Standard Industrial Classification (SIC) 1987,
                      Standard Industry Code - 8 digit, North American Industry
                      Classification System (NAICS), Nomenclature Generale des
                      Activites Economiques dans L`Union Europeenne (NACE)).
                  typeDnBCode:
                    type: integer
                    example: 24664
                    description: >-
                      A unique code assigned by Dun & Bradstreet to identify the
                      industry coding scheme.
                  priority:
                    type: integer
                    example: 1
                    description: >-
                      A number identifying the order in which this industry code
                      should be presented relative to other industry codes of
                      the same type where the lower the number the earlier the
                      data is presented.
                example: ''
                type: object
            businessEntityType:
              type: object
              example: ''
              description: >-
                The details of the legal form or structure of the entity as
                registered with government authorities.
              properties:
                description:
                  type: string
                  example: Corporation
                  description: >-
                    The name of the legal form or structure of the entity as
                    registered with government authorities (e.g., partnership,
                    corporation, private limited company, government department,
                    proprietorship).
                dnbCode:
                  type: integer
                  example: 451
                  description: >-
                    A unique code assigned by Dun & Bradstreet to identify the
                    legal form or structure of the entity as registered with
                    government authorities.
            controlOwnershipDate:
              type: string
              example: 1985
              description: The date when the current owners took over the entity.
            startDate:
              type: string
              example: 1985
              description: >-
                The date the entity chooses to claim as its established date.
                <br/><br/>Note: This date may be different from the Operations
                Start Date.
            controlOwnershipType:
              type: object
              example: ''
              description: The details of the type of controlling ownership.
              properties:
                description:
                  type: string
                  example: Privately owned
                  description: >-
                    The name for the type of controlling ownership (e.g.,
                    publicly owned, privately owned, state owned).  
                    <br/><br/>Note:  For some countries, controlling ownership
                    can be derived from the legal form.
                dnbCode:
                  type: integer
                  example: 9058
                  description: >-
                    A unique code assigned by Dun & Bradstreet to identify the
                    type of controlling ownership.
            isAgent:
              type: boolean
              example: 'false'
              description: >-
                Indicates if the entity acts as an agent promoting the goods or
                services of another entity (e.g., Sales Agent, Purchasing
                Agent). <br/><br/>- If true, the entity acts as an agent.<br/>-
                If false, the entity does not act as an agent.
            isImporter:
              type: boolean
              example: 'false'
              description: >-
                Indicates if the entity is an importer.<br/><br/>- If true, the
                entity imports a quantity of goods from other countries.<br/>-
                If false, the entity does not import a quantity of goods from
                other countries.
            isExporter:
              type: boolean
              example: 'false'
              description: >-
                Indicates if the entity is an exporter.<br/><br/>- If true, the
                entity exports a quantity of goods to other countries.<br/>- If
                false, the entity does not export a quantity of goods to other
                countries.
            numberOfEmployees:
              type: array
              description: >-
                The details of the people engaged by the entity to perform its
                operations.
              items:
                properties:
                  value:
                    type: integer
                    example: 1234
                    description: >-
                      The total number of people engaged by the entity to
                      perform its operations.  The scope of this employee figure
                      is identified in informationScopeDescription.
                  informationScopeDescription:
                    type: string
                    example: Consolidated
                    description: >-
                      The scope of Number of Employees value (e.g.,
                      Consolidated, Individual, HQ only).
                  informationScopeDnBCode:
                    type: integer
                    example: 9067
                    description: >-
                      A unique code assigned by Dun & Bradstreet to identify the
                      scope of Number of Employees.
                  reliabilityDescription:
                    type: string
                    example: Actual
                    description: >-
                      The integrity of the employee figures (e.g., audited,
                      actual, estimated, or modeled).
                  reliabilityDnBCode:
                    type: integer
                    example: 9092
                    description: >-
                      A unique code assigned by Dun & Bradstreet to identify the
                      integrity of the employee figures.
                  employeeCategories:
                    type: array
                    description: >-
                      The details of the employee figures for the different
                      function levels of the entity.
                    items:
                      properties:
                        employmentBasisDescription:
                          type: string
                          example: Principals
                          description: >-
                            The type of employees that have been included in the
                            calculation of the number of employees on the basis
                            of their employment contract (e.g., Principals, Part
                            Time Workers).
                        employmentBasisDnBCode:
                          type: integer
                          example: 9064
                          description: >-
                            A unique code assigned by Dun & Bradstreet to
                            identify the employment basis description.
                      example: ''
                      type: object
                  trend:
                    type: array
                    description: The details of the employee growth  history.
                    items:
                      properties:
                        timePeriod:
                          type: object
                          example: ''
                          description: >-
                            The details of timeframe for which this data is
                            recorded.
                          properties:
                            description:
                              type: string
                              example: 1 - 5 years
                              description: The timeframe for which this data is recorded.
                            dnbCode:
                              type: integer
                              example: 13721
                              description: >-
                                A unique code assigned by Dun & Bradstreet to
                                identify the timeframe for which this data is
                                recorded.
                        growthRate:
                          type: number
                          example: -7
                          description: >-
                            The percentage of change in number of employees from
                            base year compared to the trend year.
                      example: ''
                      type: object
                example: ''
                type: object
            financials:
              type: array
              description: >-
                The details of the standardized view of the financial results of
                the entity; this is usually extracted from a set of accounts.
              items:
                properties:
                  financialStatementToDate:
                    type: string
                    example: '2016-12-31'
                    description: >-
                      The date when the accounting period ended.  If the
                      Reliability Code denotes the figures are projected
                      (future), then this is the date when the accounting period
                      will end.<br/><br/>Format: YYYY-MM-DD or YYYY-MM
                  financialStatementDuration:
                    type: string
                    example: Annual
                    description: >-
                      The period of the financial statement expressed as a time
                      interval.
                  informationScopeDescription:
                    type: string
                    example: Actual
                    description: >-
                      The organizational scope of the financial summary (e.g.,
                      Individual (Organization including any branches),
                      Consolidated (Organization including any branches and
                      subsidiaries)).
                  informationScopeDnBCode:
                    type: integer
                    example: 9092
                    description: >-
                      A unique code assigned by Dun & Bradstreet to identify the
                      organizational scope of the financial summary.
                  reliabilityDescription:
                    type: string
                    example: Actual
                    description: >-
                      The integrity of the financial figures (e.g., audited,
                      actual, estimated, or modeled).
                  reliabilityDnBCode:
                    type: integer
                    example: 9092
                    description: >-
                      A unique code assigned by Dun & Bradstreet to identify the
                      integrity of the financial figures.
                  unitCode:
                    type: string
                    example: Single Units
                    description: >-
                      The unit of size in which the financial summary figures
                      are provided (e.g., in 1,000s; in 1,000,000s)
                  accountantName:
                    type: string
                    example: Johnson, Jordan & Jones CPAs
                    description: The name of either an individual or an accounting firm.
                  yearlyRevenue:
                    type: array
                    description: >-
                      The details of the income received from customers from the
                      sale of the entity's goods and/or services. This is the
                      gross sales minus any returns, rebates/discounts,
                      allowances for damages or shortages, shipping expenses
                      passed on to the customer, and amounts due where there is
                      not a reasonable expectation of collection.
                    items:
                      properties:
                        value:
                          type: number
                          example: 19945238
                          description: >-
                            The monetary value of income received from customers
                            from the sale of the entity's goods and/or
                            services.  This is the gross sales minus any
                            returns, rebates/discounts, allowances for damages
                            or shortages, shipping expenses passed on to the
                            customer.
                        currency:
                          type: string
                          example: USD
                          description: >-
                            The three-letter currency code, defined in the ISO
                            3166-1 scheme published by International
                            Organization for Standardization (ISO) identifying
                            the type of money in which this amount is expressed
                            (e.g. USD, CAD, GBP, EUR).
                        trend:
                          type: array
                          description: >-
                            The details of the percentage of change of this item
                            as of base year compared to the trend year.
                          items:
                            properties:
                              timePeriod:
                                type: object
                                example: ''
                                description: >-
                                  The details of the timeframe for which this
                                  data is recorded.
                                properties:
                                  description:
                                    type: string
                                    example: 1-5 years
                                    description: >-
                                      The timeframe for which this data is
                                      recorded.
                                  dnbCode:
                                    type: integer
                                    example: 13721
                                    description: >-
                                      A unique code assigned by Dun & Bradstreet
                                      to identify the timeframe in which this
                                      data is recorded.
                              growthRate:
                                type: number
                                example: 2
                                description: >-
                                  The percentage of change of this item as of
                                  base year compared to the trend year.
                            example: ''
                            type: object
                      example: ''
                      type: object
                example: ''
                type: object
            mostSeniorPrincipals:
              type: array
              description: The  details of the most important principals.
              items:
                properties:
                  givenName:
                    type: string
                    example: Leslie
                    description: The given name of the principal.
                  familyName:
                    type: string
                    example: Smith
                    description: The family name of the principal.
                  fullName:
                    type: string
                    example: Leslie Ann Smith
                    description: The complete name of the principal.
                  namePrefix:
                    type: string
                    example: Dr.
                    description: >-
                      The correct form of address for the principal (e.g., Dr.,
                      Professor, Lord).
                  nameSuffix:
                    type: string
                    example: PhD
                    description: >-
                      The familial or professional suffix to the principal's
                      name.
                  gender:
                    type: string
                    example: Female
                    description: The gender of this individual.
                  jobTitles:
                    type: array
                    description: The details of the positions held by this individual.
                    items:
                      properties:
                        title:
                          type: string
                          example: President
                          description: The position held by this individual.
                      example: ''
                      type: object
                  managementResponsibilities:
                    type: array
                    description: >-
                      The details of the current business functions of the
                      entity represented as a standard Management Responsibility
                      Code (MRC).
                    items:
                      properties:
                        description:
                          type: string
                          example: President
                          description: >-
                            Name of the business function of the entity derived
                            from a standard Management Responsibility Code
                            (MRC).
                        mrcCode:
                          type: string
                          example: A1A6
                          description: >-
                            A unique code identifying the business function of
                            the entity derived from a standard Management
                            Responsibility Code (MRC).
                      example: ''
                      type: object
                example: ''
                type: object
            currentPrincipals:
              type: array
              description: >-
                The details of the principals that are actively associated with
                the entity.
              items:
                properties:
                  givenName:
                    type: string
                    example: Leslie
                    description: The given name of the principal.
                  familyName:
                    type: string
                    example: Smith
                    description: The family name of the principal.
                  fullName:
                    type: string
                    example: Leslie Ann Smith
                    description: The complete name of the principal.
                  namePrefix:
                    type: string
                    example: Dr.
                    description: >-
                      The correct form of address for the principal (e.g., Dr.,
                      Professor, Lord).
                  nameSuffix:
                    type: string
                    example: PhD
                    description: >-
                      The familial or professional suffix to the principal's
                      name.
                  gender:
                    type: string
                    example: Female
                    description: The gender of this individual.
                  jobTitles:
                    type: array
                    description: The details of the positions held by this individual.
                    items:
                      properties:
                        title:
                          type: string
                          example: President
                          description: The position held by this individual.
                      example: ''
                      type: object
                  managementResponsibilities:
                    type: array
                    description: >-
                      The details of the current business functions of the
                      entity represented as a standard Management Responsibility
                      Code (MRC).
                    items:
                      properties:
                        description:
                          type: string
                          example: President
                          description: >-
                            Name of the business function of the entity derived
                            from a standard Management Responsibility Code
                            (MRC).
                        mrcCode:
                          type: string
                          example: A1A6
                          description: >-
                            A unique code identifying the business function of
                            the entity derived from a standard Management
                            Responsibility Code (MRC).
                      example: ''
                      type: object
                example: ''
                type: object
            socioEconomicInformation:
              type: object
              example: ''
              description: >-
                The details of the categorization of the entity in Socio
                Economic or Statistical groups.
              properties:
                isMinorityOwned:
                  type: boolean
                  example: 'false'
                  description: >-
                    Indicates if the entity is minority owned.  Minority owned
                    means it is certified as an entity that is greater than 50%
                    owned by and whose management and daily operations are
                    controlled by one or more minority group members<br/><br/>-
                    If true, indicates that this is a minority-owned
                    entity.<br/>- If false, indicates that this is not a
                    minority-owned entity.
                isSmallBusiness:
                  type: boolean
                  example: 'false'
                  description: >-
                    Indicates if the business qualifies as small business,
                    eligible for assistance from SBA, with a place of business
                    located in the United States. It must operate primarily
                    within the United States or make a significant contribution
                    to the U.S. economy through payment of taxes or use of
                    American products, materials or labor. Together with its
                    affiliates, it must meet the numerical size standards as
                    defined in the Small Business Size Regulations 13 CFR
                    121.<br/><br/>- If true, indicates that this is a small
                    business.<br/>- If false, indicates that this is not a small
                    business.
            isStandalone:
              type: boolean
              example: 'false'
              description: >-
                Indicates if the entity is a member of a legal family tree.
                <br/><br/>- If true, indicates that the entity is not a member
                of a legal family tree.  This means it cannot play any family
                tree role and corporateLinkage will not be present.<br/>- If
                false, indicates that the entity is a member of a legal family
                tree.  The roles it plays is indicated by Family Tree Member
                Roles played.
            corporateLinkage:
              type: object
              example: ''
              description: >-
                The details of the relationship between the entity and other
                entities in the legal family tree.
              properties:
                familytreeRolesPlayed:
                  type: array
                  description: >-
                    The details of the roles the entity plays as a member of an
                    ownership structured family tree.
                  items:
                    properties:
                      description:
                        type: string
                        example: Parent/Headquarters
                        description: >-
                          The role the entity plays as a member of an ownership
                          structured family tree (e.g., a branch, division, a
                          parent, headquarters, subsidiary, global ultimate,
                          domestic ultimate).
                      dnbCode:
                        type: integer
                        example: 9141
                        description: >-
                          A unique code assigned by Dun & Bradstreet to identify
                          describing family tree role.
                    example: ''
                    type: object
                hierarchyLevel:
                  type: integer
                  example: 1
                  description: >-
                    The number of family-tree levels below the global ultimate
                    the entity is in its corporate hierarchy. The hierarchy
                    level value of the global ultimate will always be 1. Each
                    subsidiary level below the global ultimate is incremented by
                    1. Branch locations in a family tree will have the same
                    hierarchy code as its associated headquarter.
                globalUltimateFamilyTreeMembersCount:
                  type: integer
                  example: ''
                  description: >-
                    The total number of entities in the entity's Family tree
                    starting from Global Ultimate.
                globalUltimate:
                  type: object
                  example: ''
                  description: >-
                    The details of the top most entity in the family tree,
                    tracing each parent up to its own parent.  <br/><br/>For
                    example, Company-A is based in the US and has Company-B as
                    its parent also in the US. In turn Company-B is owned by
                    Company-C, also in the US, which is owned by Company-D which
                    is in the UK. Thus, the Global Ultimate of this family tree
                    (and therefore of each member of the family tree) is
                    Company-D.
                  properties:
                    duns:
                      type: string
                      example: 804735132
                      description: >-
                        The D-U-N-S Number, assigned by Dun & Bradstreet, is an
                        identification number that uniquely identifies the
                        entity in accordance with the Data Universal Numbering
                        System (D-U-N-S).
                    primaryName:
                      type: string
                      example: GORMAN MANUFACTURING COMPANY, INC.
                      description: >-
                        The single name by which the entity is primarily known
                        or identified.
                    primaryAddress:
                      type: object
                      example: ''
                      description: >-
                        The details of the single primary or physical address at
                        which the entity is located.
                      properties:
                        addressCountry:
                          type: object
                          example: ''
                          description: >-
                            The details of the country in which this address is
                            located.
                          properties:
                            name:
                              type: string
                              example: United States
                              description: >-
                                The name of the country in which this address is
                                located.
                            isoAlpha2Code:
                              type: string
                              example: US
                              description: >-
                                The two-letter country code, defined by the
                                International Organization for Standardization
                                (ISO) ISO 3166-1 scheme identifying the country
                                in which this address is located.
                            fipsCode:
                              type: string
                              example: US
                              description: >-
                                The Federal Information Processing Standards
                                (FIPS) code value that identifies the country in
                                which this address is located.
                        continentalRegion:
                          type: object
                          example: ''
                          description: >-
                            The details of the continental region in which this
                            address is located.
                          properties:
                            name:
                              type: string
                              example: North America
                              description: >-
                                The name of the continental region for this
                                address.<br/><br/>Possible values:<br/>-
                                Africa<br/>- Asia Pacific<br/>- Europe<br/>-
                                Latin America<br/>- Middle East<br/>- North
                                America
                        addressLocality:
                          type: object
                          example: ''
                          description: >-
                            The details of the city, town, township, village,
                            borough, etc. in which this address is located.
                          properties:
                            name:
                              type: string
                              example: SAN FRANCISCO
                              description: >-
                                The name of the city, town, township, village,
                                borough, etc. in which this address is located.
                        addressRegion:
                          type: object
                          example: ''
                          description: >-
                            The details of the locally governed area that forms
                            part of a centrally governed nation to identify
                            where this address is located.
                          properties:
                            name:
                              type: string
                              example: California
                              description: >-
                                The name of the locally governed area that forms
                                part of a centrally governed nation to identify
                                where this address is located.
                            abbreviatedName:
                              type: string
                              example: CA
                              description: >-
                                The shortened name of the locally governed area
                                that forms part of a centrally governed nation.
                                For example 'NJ' for the US State New Jersey
                                within Country United States.
                        addressCounty:
                          type: object
                          example: ''
                          description: >-
                            The details of the county in which this address is
                            located.
                          properties:
                            name:
                              type: string
                              example: SAN MATEO
                              description: >-
                                The name of the county in which this address is
                                located.
                        postalCode:
                          type: string
                          example: 941109999
                          description: >-
                            An identifier used by the local country's postal
                            authority to identify where this address is located.
                        streetAddress:
                          type: object
                          example: ''
                          description: >-
                            The details of the street address where the entity
                            is located.
                          properties:
                            line1:
                              type: string
                              example: 492 KOLLER ST
                              description: >-
                                The first line of the address where the entity
                                is located.<br/><br/>For example, &quot;41
                                Central Chambers&quot; in the address <br/>41
                                Central Chambers<br/>Dame Court<br/>Dublin 2
                            line2:
                              type: string
                              example: Suite 100
                              description: >-
                                The second line of the address where the entity
                                is located.<br/><br/>For example, &quot;Dame
                                Court&quot; in the address <br/>41 Central
                                Chambers<br/>Dame Court<br/>Dublin 2
                domesticUltimate:
                  type: object
                  example: ''
                  description: >-
                    The details of the Domestic Ultimate which is the last
                    entity in the tree, when reviewing upwards, that is in the
                    same country as the entity. <br/><br/>For example, Company-A
                    is based in the US and has Company-B as its parent also in
                    the US. In turn Company-B is owned by Company-C, also in the
                    US, which is owned by Company-D which is in the UK. Thus,
                    the Domestic Ultimate of Company-A is actually Company-C as
                    this is the last entity in the parent chain that is in the
                    US.
                  properties:
                    duns:
                      type: string
                      example: 804735132
                      description: >-
                        The D-U-N-S Number, assigned by Dun & Bradstreet, is an
                        identification number that uniquely identifies the
                        entity in accordance with the Data Universal Numbering
                        System (D-U-N-S).
                    primaryName:
                      type: string
                      example: GORMAN MANUFACTURING COMPANY, INC.
                      description: >-
                        The single name by which the entity is primarily known
                        or identified.
                    primaryAddress:
                      type: object
                      example: ''
                      description: >-
                        The details of the single primary or physical address at
                        which the entity is located.
                      properties:
                        addressCountry:
                          type: object
                          example: ''
                          description: >-
                            The details of the country in which this address is
                            located.
                          properties:
                            name:
                              type: string
                              example: United States
                              description: >-
                                The name of the country in which this address is
                                located.
                            isoAlpha2Code:
                              type: string
                              example: US
                              description: >-
                                The two-letter country code, defined by the
                                International Organization for Standardization
                                (ISO) ISO 3166-1 scheme identifying the country
                                in which this address is located.
                            fipsCode:
                              type: string
                              example: US
                              description: >-
                                The Federal Information Processing Standards
                                (FIPS) code value that identifies the country in
                                which this address is located.
                        continentalRegion:
                          type: object
                          example: ''
                          description: >-
                            The details of the continental region in which this
                            address is located.
                          properties:
                            name:
                              type: string
                              example: North America
                              description: >-
                                The name of the continental region for this
                                address.<br/><br/>Possible values:<br/>-
                                Africa<br/>- Asia Pacific<br/>- Europe<br/>-
                                Latin America<br/>- Middle East<br/>- North
                                America
                        addressLocality:
                          type: object
                          example: ''
                          description: >-
                            The details of the city, town, township, village,
                            borough, etc. in which this address is located.
                          properties:
                            name:
                              type: string
                              example: SAN FRANCISCO
                              description: >-
                                The name of the city, town, township, village,
                                borough, etc. in which this address is located.
                        addressRegion:
                          type: object
                          example: ''
                          description: >-
                            The details of the locally governed area that forms
                            part of a centrally governed nation to identify
                            where this address is located.
                          properties:
                            name:
                              type: string
                              example: California
                              description: >-
                                The name of the locally governed area that forms
                                part of a centrally governed nation to identify
                                where this address is located.
                            abbreviatedName:
                              type: string
                              example: CA
                              description: >-
                                The shortened name of the locally governed area
                                that forms part of a centrally governed nation.
                                For example 'NJ' for the US State New Jersey
                                within Country United States.
                        addressCounty:
                          type: object
                          example: ''
                          description: >-
                            The details of the county in which this address is
                            located.
                          properties:
                            name:
                              type: string
                              example: SAN MATEO
                              description: >-
                                The name of the county in which this address is
                                located.
                        postalCode:
                          type: string
                          example: 941109999
                          description: >-
                            An identifier used by the local country's postal
                            authority to identify where this address is located.
                        streetAddress:
                          type: object
                          example: ''
                          description: >-
                            The details of the street address where the entity
                            is located.
                          properties:
                            line1:
                              type: string
                              example: 492 KOLLER ST
                              description: >-
                                The first line of the address where the entity
                                is located.<br/><br/>For example, &quot;41
                                Central Chambers&quot; in the address <br/>41
                                Central Chambers<br/>Dame Court<br/>Dublin 2
                            line2:
                              type: string
                              example: Suite 100
                              description: >-
                                The second line of the address where the entity
                                is located.<br/><br/>For example, &quot;Dame
                                Court&quot; in the address <br/>41 Central
                                Chambers<br/>Dame Court<br/>Dublin 2
                parent:
                  type: object
                  example: ''
                  description: >-
                    The details of the entity that owns more than 50% of the
                    subject entity.
                  properties:
                    duns:
                      type: string
                      example: 804735132
                      description: >-
                        The D-U-N-S Number, assigned by Dun & Bradstreet, is an
                        identification number that uniquely identifies the
                        entity in accordance with the Data Universal Numbering
                        System (D-U-N-S).
                    primaryName:
                      type: string
                      example: GORMAN MANUFACTURING COMPANY, INC.
                      description: >-
                        The single name by which the entity is primarily known
                        or identified.
                    primaryAddress:
                      type: object
                      example: ''
                      description: >-
                        The details of the single primary or physical address at
                        which the entity is located.
                      properties:
                        addressCountry:
                          type: object
                          example: ''
                          description: >-
                            The details of the country in which this address is
                            located.
                          properties:
                            name:
                              type: string
                              example: United States
                              description: >-
                                The name of the country in which this address is
                                located.
                            isoAlpha2Code:
                              type: string
                              example: US
                              description: >-
                                The two-letter country code, defined by the
                                International Organization for Standardization
                                (ISO) ISO 3166-1 scheme identifying the country
                                in which this address is located.
                            fipsCode:
                              type: string
                              example: US
                              description: >-
                                The Federal Information Processing Standards
                                (FIPS) code value that identifies the country in
                                which this address is located.
                        continentalRegion:
                          type: object
                          example: ''
                          description: >-
                            The details of the continental region in which this
                            address is located.
                          properties:
                            name:
                              type: string
                              example: North America
                              description: >-
                                The name of the continental region for this
                                address.<br/><br/>Possible values:<br/>-
                                Africa<br/>- Asia Pacific<br/>- Europe<br/>-
                                Latin America<br/>- Middle East<br/>- North
                                America
                        addressLocality:
                          type: object
                          example: ''
                          description: >-
                            The details of the city, town, township, village,
                            borough, etc. in which this address is located.
                          properties:
                            name:
                              type: string
                              example: SAN FRANCISCO
                              description: >-
                                The name of the city, town, township, village,
                                borough, etc. in which this address is located.
                        addressRegion:
                          type: object
                          example: ''
                          description: >-
                            The details of the locally governed area that forms
                            part of a centrally governed nation to identify
                            where this address is located.
                          properties:
                            name:
                              type: string
                              example: California
                              description: >-
                                The name of the locally governed area that forms
                                part of a centrally governed nation to identify
                                where this address is located.
                            abbreviatedName:
                              type: string
                              example: CA
                              description: >-
                                The shortened name of the locally governed area
                                that forms part of a centrally governed nation.
                                For example 'NJ' for the US State New Jersey
                                within Country United States.
                        addressCounty:
                          type: object
                          example: ''
                          description: >-
                            The details of the county in which this address is
                            located.
                          properties:
                            name:
                              type: string
                              example: SAN MATEO
                              description: >-
                                The name of the county in which this address is
                                located.
                        postalCode:
                          type: string
                          example: 941109999
                          description: >-
                            An identifier used by the local country's postal
                            authority to identify where this address is located.
                        streetAddress:
                          type: object
                          example: ''
                          description: >-
                            The details of the street address where the entity
                            is located.
                          properties:
                            line1:
                              type: string
                              example: 492 KOLLER ST
                              description: >-
                                The first line of the address where the entity
                                is located.<br/><br/>For example, &quot;41
                                Central Chambers&quot; in the address <br/>41
                                Central Chambers<br/>Dame Court<br/>Dublin 2
                            line2:
                              type: string
                              example: Suite 100
                              description: >-
                                The second line of the address where the entity
                                is located.<br/><br/>For example, &quot;Dame
                                Court&quot; in the address <br/>41 Central
                                Chambers<br/>Dame Court<br/>Dublin 2
                headQuarter:
                  type: object
                  example: ''
                  description: >-
                    The details of the office that serves as the administrative
                    center for the entity.
                  properties:
                    duns:
                      type: string
                      example: 804735132
                      description: >-
                        The D-U-N-S Number, assigned by Dun & Bradstreet, is an
                        identification number that uniquely identifies the
                        entity in accordance with the Data Universal Numbering
                        System (D-U-N-S).
                    primaryName:
                      type: string
                      example: GORMAN MANUFACTURING COMPANY, INC.
                      description: >-
                        The single name by which the entity is primarily known
                        or identified.
                    primaryAddress:
                      type: object
                      example: ''
                      description: >-
                        The details of the single primary or physical address at
                        which the entity is located.
                      properties:
                        addressCountry:
                          type: object
                          example: ''
                          description: >-
                            The details of the country in which this address is
                            located.
                          properties:
                            name:
                              type: string
                              example: United States
                              description: >-
                                The name of the country in which this address is
                                located.
                            isoAlpha2Code:
                              type: string
                              example: US
                              description: >-
                                The two-letter country code, defined by the
                                International Organization for Standardization
                                (ISO) ISO 3166-1 scheme identifying the country
                                in which this address is located.
                            fipsCode:
                              type: string
                              example: US
                              description: >-
                                The Federal Information Processing Standards
                                (FIPS) code value that identifies the country in
                                which this address is located.
                        continentalRegion:
                          type: object
                          example: ''
                          description: >-
                            The details of the continental region in which this
                            address is located.
                          properties:
                            name:
                              type: string
                              example: North America
                              description: >-
                                The name of the continental region for this
                                address.<br/><br/>Possible values:<br/>-
                                Africa<br/>- Asia Pacific<br/>- Europe<br/>-
                                Latin America<br/>- Middle East<br/>- North
                                America
                        addressLocality:
                          type: object
                          example: ''
                          description: >-
                            The details of the city, town, township, village,
                            borough, etc. in which this address is located.
                          properties:
                            name:
                              type: string
                              example: SAN FRANCISCO
                              description: >-
                                The name of the city, town, township, village,
                                borough, etc. in which this address is located.
                        addressRegion:
                          type: object
                          example: ''
                          description: >-
                            The details of the locally governed area that forms
                            part of a centrally governed nation to identify
                            where this address is located.
                          properties:
                            name:
                              type: string
                              example: California
                              description: >-
                                The name of the locally governed area that forms
                                part of a centrally governed nation to identify
                                where this address is located.
                            abbreviatedName:
                              type: string
                              example: CA
                              description: >-
                                The shortened name of the locally governed area
                                that forms part of a centrally governed nation.
                                For example 'NJ' for the US State New Jersey
                                within Country United States.
                        addressCounty:
                          type: object
                          example: ''
                          description: >-
                            The details of the county in which this address is
                            located.
                          properties:
                            name:
                              type: string
                              example: SAN MATEO
                              description: >-
                                The name of the county in which this address is
                                located.
                        postalCode:
                          type: string
                          example: 941109999
                          description: >-
                            An identifier used by the local country's postal
                            authority to identify where this address is located.
                        streetAddress:
                          type: object
                          example: ''
                          description: >-
                            The details of the street address where the entity
                            is located.
                          properties:
                            line1:
                              type: string
                              example: 492 KOLLER ST
                              description: >-
                                The first line of the address where the entity
                                is located.<br/><br/>For example, &quot;41
                                Central Chambers&quot; in the address <br/>41
                                Central Chambers<br/>Dame Court<br/>Dublin 2
                            line2:
                              type: string
                              example: Suite 100
                              description: >-
                                The second line of the address where the entity
                                is located.<br/><br/>For example, &quot;Dame
                                Court&quot; in the address <br/>41 Central
                                Chambers<br/>Dame Court<br/>Dublin 2
            shareOwnership:
              type: array
              description: >-
                The details of the recording of the individual, organization or
                entity that owns stock or common stock of the subject
                organization.
              items:
                properties:
                  duns:
                    type: string
                    example: '804735132'
                    description: >-
                      When a shareholder is a business, Dun & Bradstreet may
                      assign a D-U-N-S Number to the company that owns stock or
                      common stock of the subject entity.  The D-U-N-S Number is
                      an identification number that uniquely identifies the
                      organization in accordance with the Data Universe
                      Numbering System (D-U-N-S).  Presence of a D-U-N-S Number
                      is not a requirement to be a shareholder.
                  primaryName:
                    type: string
                    example: GORMAN MANUFACTURING COMPANY, INC.
                    description: >-
                      Single name by which the organization is primarily known
                      or identified.
                  primaryAddress:
                    type: object
                    description: >-
                      The details of the Primary Address at which the
                      organization is located or conducts operations.
                    properties:
                      addressCountry:
                        type: object
                        description: >-
                          The details of the country or region where the address
                          of the organization is located or conducts operations.
                        properties:
                          name:
                            type: string
                            example: United States
                            description: >-
                              The Country or Region where the organization's
                              Primary Address is located or conducts operations
                              .
                          isoAlpha2Code:
                            type: string
                            example: US
                            description: >-
                              The 2 letter alpha country code assigned by the
                              International Organization for Standardization
                              (ISO) identifying the Country/Region where the
                              organization's Primary address is located or
                              conducts operations .
                      continentalRegion:
                        type: object
                        description: >-
                          The details of the Continent in which the Primary
                          Address of the organisation is located or conducts
                          operations.
                        properties:
                          name:
                            type: string
                            example: North America
                            description: >-
                              The name of the continent where the Primary
                              Address of the organization is located or conducts
                              operations.<br/>Possible values
                              <br/>Africa<br/>Asia Pacific<br/>Europe<br/>North
                              America<br/>Middle East<br/>South America
                      addressLocality:
                        type: object
                        description: >-
                          The details of the locality where the organization's
                          Primary Address is located or conducts operations.
                          Locality defined as a district population cluster.
                          City, town, township, village, borough etc.
                        properties:
                          name:
                            type: string
                            example: SAN FRANCISCO
                            description: >-
                              The name of the locality where the organization's
                              Primary Address is located or conducts operations.
                              Locality defined as a district population cluster.
                              City, town, township, village, borough etc.
                      addressRegion:
                        type: object
                        description: >-
                          Details of the type of geographical area where the
                          organization's Primary Address is located or conducts
                          operations.<br/>Different markets have their own way
                          of subdividing the country into smaller parts.
                          <br/>Examples:<br/>Departments (France)<br/>States
                          (USA)<br/>Provinces (Netherlands)<br/>Counties
                          (UK)<br/>Bundeslander (Germany)<br/>Provinces and
                          Territories (Canada)
                        properties:
                          name:
                            type: string
                            example: California
                            description: >-
                              The name of the geographical area where the
                              organization's Primary Address is located or
                              conducts operations. For Example New Jersey.
                          abbreviatedName:
                            type: string
                            example: CA
                            description: >-
                              The shortened name of the geographical area where
                              the organization's Primary Address is located or
                              conducts operations For example NJ for the US
                              State New Jersey within Country United States.
                      postalCode:
                        type: string
                        example: '941109999'
                        description: >-
                          The postal code of the organization's Primary
                          Address.<br/><br/>Also known locally in various
                          English-speaking countries throughout the world as a
                          postcode, post code, Eircode, PIN or ZIP Code) is a
                          series of letters or digits or both, sometimes
                          including spaces or punctuation, included in a postal
                          address for the purpose of sorting mail. The code is
                          used by the country&#39;s postal authority to identify
                          the address where the organization is located or
                          conducts operations .
                      streetAddress:
                        type: object
                        description: >-
                          The details of the street address where the
                          organization's Primary Address is located.
                        properties:
                          line1:
                            type: string
                            example: 492 KOLLER ST
                            description: >-
                              The first line of the address where the entity is
                              located.<br/><br/>The first line of the Primary
                              Address where the organization is located or
                              conducts operations. For example The Point in the
                              address<br/><br/>The Point<br/>37 North Wharf
                              Road<br/>London<br/>W2 1AF
                          line2:
                            type: string
                            example: Suite 100
                            description: >-
                              The second line of the Primary Address where the
                              organization is located or conducts
                              operations<br/>For example 37 North Wharf Road in
                              the address<br/>The Point<br/>37 North Wharf
                              Road<br/>London<br/>W2 1AF
                  ownershipPercentage:
                    type: number
                    example: 8.56
                    description: >-
                      The total percent of the subject organization's stock or
                      common stock owned by either an individual, organization
                      with DUNS or direct entity shareholder.
                type: object
            affiliates:
              type: array
              description: >-
                The details of other entities relationships to the subject
                entity typically identified when the affiliated entity has no
                legal obligation for the debts of the subject entity (e.g.,
                Franchises, agents, dealers, associations, healthcare networks).
              items:
                properties:
                  duns:
                    type: string
                    example: '804735132'
                    description: >-
                      The D-U-N-S Number, a proprietary organizational
                      identifier owned and managed by Dun & Bradstreet Inc,
                      provides unique identification of a subject organization,
                      in accordance with the Data Universal Numbering System
                      (D-U-N-S).
                  primaryName:
                    type: string
                    example: GORMAN MANUFACTURING COMPANY, INC.
                    description: >-
                      Single name by which the organization is primarily known
                      or identified.
                  primaryAddress:
                    type: object
                    description: >-
                      The details of the Primary Address at which the
                      organization is located or conducts operations.
                    properties:
                      addressCountry:
                        type: object
                        description: >-
                          The details of the country or region where the address
                          of the organization is located or conducts operations.
                        properties:
                          name:
                            type: string
                            example: United States
                            description: >-
                              The Country or Region where the organization's
                              Primary Address is located or conducts operations
                              .
                          isoAlpha2Code:
                            type: string
                            example: US
                            description: >-
                              The 2 letter alpha country code assigned by the
                              International Organization for Standardization
                              (ISO) identifying the Country/Region where the
                              organization's Primary address is located or
                              conducts operations .
                      continentalRegion:
                        type: object
                        description: >-
                          The details of the Continent in which the Primary
                          Address of the organisation is located or conducts
                          operations.
                        properties:
                          name:
                            type: string
                            example: North America
                            description: >-
                              The name of the continent where the Primary
                              Address of the organization is located or conducts
                              operations.<br/>Possible values
                              <br/>Africa<br/>Asia Pacific<br/>Europe<br/>North
                              America<br/>Middle East<br/>South America
                      addressLocality:
                        type: object
                        description: >-
                          The details of the locality where the organization's
                          Primary Address is located or conducts operations.
                          Locality defined as a district population cluster.
                          City, town, township, village, borough etc.
                        properties:
                          name:
                            type: string
                            example: SAN FRANCISCO
                            description: >-
                              The name of the locality where the organization's
                              Primary Address is located or conducts operations.
                              Locality defined as a district population cluster.
                              City, town, township, village, borough etc.
                      addressRegion:
                        type: object
                        description: >-
                          Details of the type of geographical area where the
                          organization's Primary Address is located or conducts
                          operations.<br/>Different markets have their own way
                          of subdividing the country into smaller parts.
                          <br/>Examples:<br/>Departments (France)<br/>States
                          (USA)<br/>Provinces (Netherlands)<br/>Counties
                          (UK)<br/>Bundeslander (Germany)<br/>Provinces and
                          Territories (Canada)
                        properties:
                          name:
                            type: string
                            example: California
                            description: >-
                              The name of the geographical area where the
                              organization's Primary Address is located or
                              conducts operations. For Example New Jersey.
                          abbreviatedName:
                            type: string
                            example: CA
                            description: >-
                              The shortened name of the geographical area where
                              the organization's Primary Address is located or
                              conducts operations For example NJ for the US
                              State New Jersey within Country United States.
                      postalCode:
                        type: string
                        example: '941109999'
                        description: >-
                          The postal code of the organization's Primary
                          Address.<br/><br/>Also known locally in various
                          English-speaking countries throughout the world as a
                          postcode, post code, Eircode, PIN or ZIP Code) is a
                          series of letters or digits or both, sometimes
                          including spaces or punctuation, included in a postal
                          address for the purpose of sorting mail. The code is
                          used by the country&#39;s postal authority to identify
                          the address where the organization is located or
                          conducts operations .
                      streetAddress:
                        type: object
                        description: >-
                          The details of the street address where the
                          organization's Primary Address is located.
                        properties:
                          line1:
                            type: string
                            example: 492 KOLLER ST
                            description: >-
                              The first line of the address where the entity is
                              located.<br/><br/>The first line of the Primary
                              Address where the organization is located or
                              conducts operations. For example The Point in the
                              address<br/><br/>The Point<br/>37 North Wharf
                              Road<br/>London<br/>W2 1AF
                          line2:
                            type: string
                            example: Suite 100
                            description: >-
                              The second line of the Primary Address where the
                              organization is located or conducts
                              operations<br/>For example 37 North Wharf Road in
                              the address<br/>The Point<br/>37 North Wharf
                              Road<br/>London<br/>W2 1AF
                  associationType:
                    type: object
                    description: >-
                      The details of the nature of association of this entity
                      with subject entity.
                    properties:
                      dnbCode:
                        type: integer
                        example: 30488
                        description: >-
                          A unique code assigned by Dun & Bradstreet to identify
                          the nature of association of this entity with subject
                          entity.<br/>Refer to Reference code table "511
                          [Affiliation Type]" for all possible values.
                      description:
                        type: string
                        example: Dealer Alternate Linkage
                        description: >-
                          The nature of association of this entity with subject
                          entity (e.g., Franchise, Agent).
                  franchiseName:
                    type: string
                    example: Franchise
                    description: The franchising branch.
                  franchiseID:
                    type: string
                    example: '1058890509'
                    description: >-
                      A unique code assigned by Dun & Bradstreet to identify a
                      franchising brand.
                type: object
            extendedLinkageInsight:
              type: object
              description: >-
                Records data collected from a Dun & Bradstreet Artificial
                Intelligence-driven hierarchy solution that utilizes Machine
                Learning to link businesses as a linkage expert would and
                capture a wide spectrum of potential relationship including
                majority ownership, minority ownership, franchise, dealership
                and much more.
              properties:
                brandName:
                  type: string
                  example: DUN&BRADSTREET
                  description: >-
                    The brand name of DUNS extracted by Extended Linkage
                    algorithm. For example, if the Business Name is "The Dun &
                    Bradstreet Corporation", then Brand Name will be
                    "DUN&BRADSTREET".
                familyTreeCount:
                  type: integer
                  example: 145
                  description: >-
                    The total number of Extended Linkage Family members (i.e.
                    The number of records in whole database with the same
                    Extended Linkage Global Ultimate DUNS Number as the current
                    records.)
                globalUltimate:
                  type: object
                  description: >-
                    Records details of the Global Ultimate that is within the
                    Extended Linkage Family.
                  properties:
                    duns:
                      type: string
                      example: '005438890'
                      description: >-
                        The Duns number of the Global Ultimate that is within
                        the Extended Linkage Family.
                    name:
                      type: string
                      example: Lawson Products, Inc.
                      description: >-
                        The business name of the Global Ultimate that is within
                        the Extended Linkage Family.
                    primaryAddress:
                      type: object
                      description: >-
                        The details of the single primary or physical address of
                        the global ultimate within this Extended family tree.
                      properties:
                        addressCountry:
                          type: object
                          description: >-
                            The details of the country/market in which this
                            address is located.
                          properties:
                            name:
                              type: string
                              example: United States
                              description: >-
                                The name of the country/market in which this
                                address is located.
                domesticUltimate:
                  type: object
                  description: >-
                    Records details of the Domestic Ultimate that is within the
                    Extended Linkage Family.
                  properties:
                    duns:
                      type: string
                      example: '005438890'
                      description: >-
                        The Duns number of the Domestic Ultimate that is within
                        the Extended Linkage Family.
                    name:
                      type: string
                      example: Lawson Products, Inc.
                      description: >-
                        The business name of the Domestic Ultimate that is
                        within the Extended Linkage Family.
                    primaryAddress:
                      type: object
                      description: >-
                        The details of the single primary or physical address of
                        the domestic ultimate within this Extended family tree.
                      properties:
                        addressCountry:
                          type: object
                          description: >-
                            The details of the country/market in which this
                            address is located.
                          properties:
                            name:
                              type: string
                              example: United States
                              description: >-
                                The name of the country/market in which this
                                address is located.
                parent:
                  type: object
                  description: >-
                    Records details of the Parent that is within the Extended
                    Linkage Family
                  properties:
                    duns:
                      type: string
                      example: '005438890'
                      description: >-
                        The DUNS number of the Parent that is within the
                        Extended Linkage Family
                    name:
                      type: string
                      example: Lawson Products, Inc.
                      description: >-
                        The business name of the Parent that is within the
                        Extended Linkage Family
                    primaryAddress:
                      type: object
                      description: >-
                        The details of the single primary or physical address of
                        the parent company within this Extended family tree.
                      properties:
                        addressCountry:
                          type: object
                          description: >-
                            The details of the country/market in which this
                            address is located.
                          properties:
                            name:
                              type: string
                              example: United States
                              description: >-
                                The name of the country/market in which this
                                address is located.
                linkageSourceCategory:
                  type: integer
                  example: 6
                  description: >-
                    This code indicates the source of linkage:<br/>Code "9" is
                    assigned when majority ownership linkage is
                    present.<br/>Code "8" is assigned when a local market
                    linkage is present.<br/>Code "7" is assigned when an
                    alternative linkage is present.<br/>Codes "3" to "6" are
                    assigned whenever a modeled relationship is
                    present.            Note: The source codes of 3 - 6 are
                    correlated with ELI Name Evidence, SIC Evidence, Brand
                    Evidence, Phone Evidence, CEO Evidence and etc. The more
                    evidences we've seen in those scores, the higher the source
                    code will be.
                associationType:
                  type: object
                  description: >-
                    Records the type of association and that is intended to
                    provide insights into the nature of the relationship between
                    the entities. it is sourced from alternative linkage when
                    alternative linkage is present. When alternative linkage is
                    not present, type is inferred by the model based on the
                    brand name extracted and the childs line of business.
                  properties:
                    description:
                      type: string
                      example: Agent Alternate Linkage
                      description: >-
                        Text that indicates the type of association and that is
                        intended to provide insights into the nature of the
                        relationship between the entities. it is sourced from
                        alternative linkage when alternative linkage is present.
                    dnbCode:
                      type: integer
                      example: 30487
                      description: >-
                        A unique code assigned by Dun & Bradstreet that
                        indicates the type of association and that is intended
                        to provide insights into the nature of the relationship
                        between the entities. it is sourced from alternative
                        linkage when alternative linkage is present.<br/>Refer
                        to Reference code table "511 [Affiliation Type]" for all
                        possible values.
                nameEvidenceStrength:
                  type: object
                  description: >-
                    Records the level of the model outcome that supports the
                    family tree information derived using name.
                  properties:
                    description:
                      type: string
                      example: Moderate
                      description: >-
                        Text denoting the level of the model outcome that
                        supports the family tree information derived using name.
                    dnbCode:
                      type: integer
                      example: 13695
                      description: >-
                        A unique code assigned by Dun & Bradstreet indicating
                        the level of the model outcome that supports the family
                        tree information derived using name.<br/>Refer to
                        Reference code table "354 [Range Position]" for all
                        possible values.
                brandEvidenceStrength:
                  type: object
                  description: >-
                    Records the level of the model outcome that supports the
                    family tree information derived using brand name.
                  properties:
                    description:
                      type: string
                      example: Moderate
                      description: >-
                        Text denoting the level of the model outcome that
                        supports the family tree information derived using brand
                        name.
                    dnbCode:
                      type: integer
                      example: 13695
                      description: >-
                        A unique code assigned by Dun & Bradstreet indicating
                        the level of the model outcome that supports the family
                        tree information derived using brand name.<br/>Refer to
                        Reference code table "354 [Range Position]" for all
                        possible values.
                industryEvidenceStrength:
                  type: object
                  description: >-
                    Records the level of the model outcome that supports the
                    family tree information derived using industry code.
                  properties:
                    description:
                      type: string
                      example: Moderate
                      description: >-
                        Text denoting the level of the model outcome that
                        supports the family tree information derived using
                        industry code.
                    dnbCode:
                      type: integer
                      example: 13695
                      description: >-
                        A unique code assigned by Dun & Bradstreet indicating
                        the level of the model outcome that supports the family
                        tree information derived using industry code.<br/>Refer
                        to Reference code table "354 [Range Position]" for all
                        possible values.
                locationEvidenceStrength:
                  type: object
                  description: >-
                    Records the level of the model outcome that supports the
                    family tree information derived using address.
                  properties:
                    description:
                      type: string
                      example: Moderate
                      description: >-
                        Text denoting the level of the model outcome that
                        supports the family tree information derived using
                        address.
                    dnbCode:
                      type: integer
                      example: 13695
                      description: >-
                        A unique code assigned by Dun & Bradstreet indicating
                        the level of the model outcome that supports the family
                        tree information derived using address.<br/>Refer to
                        Reference code table "354 [Range Position]" for all
                        possible values.
                ceoEvidenceStrength:
                  type: object
                  description: >-
                    Records the level of the model outcome that supports the
                    family tree information derived using most senior principal
                    data.
                  properties:
                    description:
                      type: string
                      example: Moderate
                      description: >-
                        Text denoting the level of the model outcome that
                        supports the family tree information derived using most
                        senior principal data.
                    dnbCode:
                      type: integer
                      example: 13695
                      description: >-
                        A unique code assigned by Dun & Bradstreet indicating
                        the level of the model outcome that supports the family
                        tree information derived using most senior principal
                        data.<br/>Refer to Reference code table "354 [Range
                        Position]" for all possible values.
                principalNameEvidenceStrength:
                  type: object
                  description: >-
                    Records the level of the model outcome that supports the
                    family tree information derived using current principal
                    data.
                  properties:
                    description:
                      type: string
                      example: Moderate
                      description: >-
                        Text denoting the level of the model outcome that
                        supports the family tree information derived using
                        current principal data.
                    dnbCode:
                      type: integer
                      example: 13695
                      description: >-
                        A unique code assigned by Dun & Bradstreet indicating
                        the level of the model outcome that supports the family
                        tree information derived using current principal
                        data.<br/>Refer to Reference code table "354 [Range
                        Position]" for all possible values.
                telephoneEvidenceStrength:
                  type: object
                  description: >-
                    Records the level of the model outcome that supports the
                    family tree information derived using telephone information.
                  properties:
                    description:
                      type: string
                      example: Moderate
                      description: >-
                        Text denoting the level of the model outcome that
                        supports the family tree information derived using
                        telephone information.
                    dnbCode:
                      type: integer
                      example: 13695
                      description: >-
                        A unique code assigned by Dun & Bradstreet indicating
                        the level of the model outcome that supports the family
                        tree information derived using telephone
                        information.<br/>Refer to Reference code table "354
                        [Range Position]" for all possible values.
                webDomainEvidenceStrength:
                  type: object
                  description: >-
                    Records the level of the model outcome that supports the
                    family tree information derived using website domain
                    information.
                  properties:
                    description:
                      type: string
                      example: Moderate
                      description: >-
                        Text denoting the level of the model outcome that
                        supports the family tree information derived using
                        website domain information.
                    dnbCode:
                      type: integer
                      example: 13695
                      description: >-
                        A unique code assigned by Dun & Bradstreet indicating
                        the level of the model outcome that supports the family
                        tree information derived using website domain
                        information.<br/>Refer to Reference code table "354
                        [Range Position]" for all possible values.
                webPageEvidenceStrength:
                  type: object
                  description: >-
                    Records the level of the model outcome that supports the
                    family tree information derived using website home page
                    information.
                  properties:
                    description:
                      type: string
                      example: Moderate
                      description: >-
                        Text denoting the level of the model outcome that
                        supports the family tree information derived using
                        website home page information.
                    dnbCode:
                      type: integer
                      example: 13695
                      description: >-
                        A unique code assigned by Dun & Bradstreet indicating
                        the level of the model outcome that supports the family
                        tree information derived using website home page
                        information..<br/>Refer to Reference code table "354
                        [Range Position]" for all possible values.
                financialReportEvidenceStrength:
                  type: object
                  description: >-
                    Records the level of the model outcome that supports the
                    family tree information derived using financial statements.
                  properties:
                    description:
                      type: string
                      example: Moderate
                      description: >-
                        Text denoting the level of the model outcome that
                        supports the family tree information derived using
                        financial statements.
                    dnbCode:
                      type: integer
                      example: 13695
                      description: >-
                        A unique code assigned by Dun & Bradstreet indicating
                        the level of the model outcome that supports the family
                        tree information derived using financial
                        statements..<br/>Refer to Reference code table "354
                        [Range Position]" for all possible values.
                wikipediaEvidenceStrength:
                  type: object
                  description: >-
                    Records the level of the model outcome that supports the
                    family tree information derived using company's Wikipedia
                    web page.
                  properties:
                    description:
                      type: string
                      example: Moderate
                      description: >-
                        Text denoting the level of the model outcome that
                        supports the family tree information derived using
                        company's Wikipedia web page.
                    dnbCode:
                      type: integer
                      example: 13695
                      description: >-
                        A unique code assigned by Dun & Bradstreet indicating
                        the level of the model outcome that supports the family
                        tree information derived using company's Wikipedia web
                        page.<br/>Refer to Reference code table "354 [Range
                        Position]" for all possible values.
                feedbackEvidenceStrength:
                  type: object
                  description: >-
                    Records the level of the model outcome that supports the
                    family tree information derived using D&B internal expert or
                    customer feedback.
                  properties:
                    description:
                      type: string
                      example: Moderate
                      description: >-
                        Text denoting the level of the model outcome that
                        supports the family tree information derived using D&B
                        internal expert or customer feedback.
                    dnbCode:
                      type: integer
                      example: 13695
                      description: >-
                        A unique code assigned by Dun & Bradstreet indicating
                        the level of the model outcome that supports the family
                        tree information derived using D&B internal expert or
                        customer feedback.<br/>Refer to Reference code table
                        "354 [Range Position]" for all possible values.
    DataBlock:
      type: object
      properties:
        transactionDetail:
          type: object
          description: The information used to process this request.
          properties:
            transactionID:
              type: string
              example: rlh-hi9puyoijk-jop8u-kd-d-1
              description: >-
                A value assigned by the Dun & Bradstreet application to uniquely
                identify this request.
            transactionTimestamp:
              type: string
              example: '2017-02-21T17:46:19.839Z'
              description: >-
                The date and time, in ISO 8601 UTC Z standard, when this
                response was created.
            inLanguage:
              type: string
              example: en-US
              description: >-
                An IETF BCP 47 code value that defines the language in which
                this product was rendered.
        inquiryDetail:
          type: object
          description: The criteria used to process this request.
          properties:
            duns:
              type: string
              example: '804735132'
              description: The D-U-N-S number provided in the request.
            blockIDs:
              type: array
              description: The blockIDs provided in the request.
              items:
                example:
                  - blockID
                type: string
            tradeUp:
              type: string
              example: hq
              description: The value of the tradeUp parameter provided in the request.
            customerReference:
              type: string
              example: Some text to describe the request.
              description: >-
                A reference string provided by the customer for this particular
                transaction.
        blockStatus:
          type: array
          description: Records the status of the data blocks requested by the customer.
          items:
            properties:
              blockID:
                type: string
                example: blockID
                description: The unique identifier for the data block.
              status:
                type: string
                example: OK
                description: >-
                  The current status of the data block fulfilled in this
                  response.<br/><br/>Possible values:<br/>* OK<br/>* Unavailable
              reason:
                type: string
                example: Data is not available
                description: >-
                  Any specific reason why the data block is not delivered in
                  this response.<br/><br/>Possible values:<br/>* Data is not
                  available.<br/>* Data is not available for the branch.<br/>*
                  Data is not available on the requested country code.
            type: object
        organization:
          type: object
          properties:
            duns:
              type: string
              description: >-
                The D-U-N-S Number, a proprietary organizational identifier
                owned and managed by Dun & Bradstreet Inc, provides unique
                identification of a subject organization, in accordance with the
                Data Universal Numbering System (D-U-N-S).
              example: '804735132'
            countryISOAlpha2Code:
              type: string
              description: >-
                The two-letter country code, defined by the International
                Organization for Standardization (ISO) ISO 3166-1 scheme,
                identifying the country in which the entity is located.
              example: US
            primaryName:
              type: string
              description: >-
                Single name by which the organization is primarily known or
                identified.
              example: GORMAN MANUFACTURING COMPANY, INC.
            dunsControlStatus:
              type: object
              properties:
                operatingStatus:
                  type: object
                  properties:
                    description:
                      type: string
                      description: >-
                        The entity's functional state or trading status
                        summarized into either active or out of business.
                      example: Active
                    dnbCode:
                      type: integer
                      description: >-
                        A unique code assigned by Dun & Bradstreet to identify
                        the entity's functional state or trading
                        status.<br/>Possible values: <br/>9074 [Active]<br/>403
                        [Out of Business]<br/>Refer to Reference code table "166
                        [Operating Status]" for all possible values.
                      example: 9074
                    startDate:
                      type: string
                      description: >-
                        A date identifying the beginning of the time period in
                        which this Operating Status is or was applicable.
                      example: '2016-03-14'
                  description: >-
                    The high level categorization of the entity's functional
                    state or trading status.
                operatingSubStatus:
                  type: object
                  properties:
                    description:
                      type: string
                      description: >-
                        Textual description of the specific status of the
                        company.
                      example: Out of business - Favourable
                    dnbCode:
                      type: integer
                      description: >-
                        A unique code assigned by Dun & Bradstreet denoting the
                        specific status of the company.<br/>Refer to Reference
                        code table "166 [Operating Status]" for all possible
                        values.
                      example: 9077
                    startDate:
                      type: string
                      description: >-
                        The date when this specific status of the company was
                        recorded.
                      example: '2018-07-12T00:00:00.000Z'
                  description: Records the specific status of the subject company.
                detailedOperatingStatus:
                  type: object
                  properties:
                    description:
                      type: string
                      description: >-
                        Textual description of the detailed operating status of
                        the company.
                      example: Operationally Active
                    dnbCode:
                      type: integer
                      description: >-
                        A unique code assigned by Dun & Bradstreet denoting the
                        detailed operating status of the company.<br/>Refer to
                        Reference code table "732 [Detailed Operating Status]"
                        for all possible values.
                      example: 29929
                  description: >-
                    Records the further low level status of the subject company,
                    in terms of its operations.
                isMarketable:
                  type: boolean
                  description: >-
                    Indicates whether the data on the entity satisfies Dun &
                    Bradstreet's marketability rules for Sales & Marketing
                    Solutions products. <br/><br/>- If true, the entity data
                    satisfies the marketability rules.<br/>- If false, the
                    entity data does not satisfy the marketability rules.
                  example: true
                isMailUndeliverable:
                  type: boolean
                  description: "Indicates whether it is possible to deliver mail to the address of this entity.\r<br/>\r<br/>- If true, it is not possible to deliver mail to at least one of the addresses listed for this DUNS (Primary, Mailing or Registered).<br/>- If false, it is possible to deliver mail to the address."
                  example: false
                isTelephoneDisconnected:
                  type: boolean
                  description: >-
                    Indicates whether the telephone number can be connected to
                    successfully.<br/><br/>- If true, connection to the
                    telephone number is unsuccessful.<br/>- If false, connection
                    to the telephone number is successful.
                  example: false
                isDelisted:
                  type: boolean
                  description: >-
                    Indicates whether the entity has requested that they not be
                    included in any Direct marketing lists (e.g., mailing,
                    telephone).<br/><br/>- If true, the entity has objected to
                    and MUST NOT receive direct marketing material.<br/>- If
                    false, the entity has not objected to receiving direct
                    marketing material.
                  example: false
                subjectHandlingDetails:
                  type: array
                  description: >-
                    The details of the manner in which the entity is to receive
                    special care being contacted. In many cases, this was
                    specifically requested by the entity.
                  items:
                    type: object
                    properties:
                      description:
                        type: string
                        description: >-
                          The manner in which the entity is to receive special
                          care when being contacted (e.g., do not call or do not
                          send information requests). In many cases, this was
                          specifically requested by the entity.
                        example: Do not call
                      dnbCode:
                        type: integer
                        description: >-
                          A unique code assigned by Dun & Bradstreet to identify
                          the manner in which the entity is to receive special
                          care from Dun & Bradstreet when it is being
                          contacted.<br/>Refer to Reference code table "199
                          [Subject Handling]" for all possible values.
                        example: 7974
                firstReportDate:
                  type: string
                  description: >-
                    The date when the first complete review of all Business
                    Information Report data was updated about the business.
                  example: '2017-01-30'
                recordClass:
                  type: object
                  properties:
                    description:
                      type: string
                      description: >-
                        Text denoting the classification of the company data
                        maintained in the D&B database.
                      example: Full DMI record
                    dnbCode:
                      type: integer
                      description: >-
                        A unique identifier assigned by D&B to denote the
                        classification of the company data maintained in the D&B
                        database.<br/>Refer to Reference code table "240 [Record
                        Class]" for all possible values.
                      example: 10928
                  description: >-
                    Records the classification of the company data maintained in
                    the D&B database.
                isSelfRequestedDUNS:
                  type: boolean
                  description: >-
                    When turned ON (Set to TRUE), it indicates that the D-U-N-S
                    Number for this subject was created at the request of the
                    subject.<br/><br/>When turned OFF (Set to FALSE), it
                    indicates that the D-U-N-S Number for this subject was not
                    created at the request of the <br/>subject.; however as this
                    is the assumed condition there is no requirement to create
                    this tag to represent this fact.
                  example: true
                selfRequestDate:
                  type: string
                  description: >-
                    The date when the subject requested a D-U-N-S number for
                    itself.
                  example: '2016-12-28'
              description: >-
                The details of the organization's functional state and controls
                that impact its suitability for various usage purposes.
            registeredName:
              type: string
              description: >-
                The legally recognized name by which the organizationis
                registered with a local or national Registry.
              example: GORMAN MANUFACTURING COMPANY, INC.
            multilingualPrimaryName:
              type: array
              description: >-
                The details of the name by which the entity is primarily known
                or identified presented in multiple languages.
              items:
                type: object
                properties:
                  language:
                    type: object
                    properties:
                      description:
                        type: string
                        description: The language in which this name was recorded.
                        example: Japanese
                      dnbCode:
                        type: integer
                        description: >-
                          A unique code assigned by Dun & Bradstreet to identify
                          the language in which this address was
                          recorded.<br/>Refer to Reference code table "3
                          [Language]" for all possible values.
                        example: 39
                    description: >-
                      The details of the language in which this name was
                      recorded.
                  name:
                    type: string
                    description: >-
                      The name by which the entity is primarily known or
                      identified.
                  writingScript:
                    type: object
                    properties:
                      description:
                        type: string
                        description: >-
                          Text denoting the type of writing system for the
                          language that was used in recording this textual
                          information. For example, textual information recorded
                          in the language 'Japanese' can be written in any of
                          the following scripts: kanji, katakana, hiragana or
                          romaji.
                        example: Kana
                      dnbCode:
                        type: integer
                        description: >-
                          A unique code assigned by Dun&Bradstreet denoting the
                          type of writing system for the language that was used
                          in recording this textual information. For example,
                          textual information recorded in the language
                          'Japanese' can be written in any of the following
                          scripts: kanji, katakana, hiragana or
                          romaji.<br/>Refer to Reference code table "466
                          [Writing Script]" for all possible values.
                        example: 19347
                    description: >-
                      Records the type of writing system for the language that
                      was used in recording this textual information. For
                      example, textual information recorded in the language
                      'Japanese' can be written in any of the following scripts:
                      kanji, katakana, hiragana or romaji.
            multilingualRegisteredNames:
              type: array
              description: >-
                Records the name of the company as recorded in the official
                registry, if available in multiple languages.
              items:
                type: object
                properties:
                  language:
                    type: object
                    properties:
                      description:
                        type: string
                        description: The language in which this name was recorded.
                        example: Japanese
                      dnbCode:
                        type: integer
                        description: >-
                          A unique code assigned by Dun & Bradstreet to identify
                          the language in which this address was
                          recorded.<br/>Refer to Reference code table "3
                          [Language]" for all possible values.
                        example: 39
                    description: >-
                      The details of the language in which this name was
                      recorded.
                  name:
                    type: string
                    description: >-
                      Single name by which the organization is primarily known
                      or identified.
                    example: GORMAN MANUFACTURING COMPANY, INC.
                  writingScript:
                    type: object
                    properties:
                      description:
                        type: string
                        description: >-
                          Text denoting the type of writing system for the
                          language that was used in recording this textual
                          information. For example, textual information recorded
                          in the language 'Japanese' can be written in any of
                          the following scripts: kanji, katakana, hiragana or
                          romaji.
                        example: Kana
                      dnbCode:
                        type: integer
                        description: >-
                          A unique code assigned by Dun&Bradstreet denoting the
                          type of writing system for the language that was used
                          in recording this textual information. For example,
                          textual information recorded in the language
                          'Japanese' can be written in any of the following
                          scripts: kanji, katakana, hiragana or
                          romaji.<br/>Refer to Reference code table "466
                          [Writing Script]" for all possible values.
                        example: 19347
                    description: >-
                      Records the type of writing system for the language that
                      was used in recording this textual information. For
                      example, textual information recorded in the language
                      'Japanese' can be written in any of the following scripts:
                      kanji, katakana, hiragana or romaji.
            tradeStyleNames:
              type: array
              description: >-
                The details of the names the organization trades under for
                commercial purposes<br/>A 'trading style' or 'trading as name'
                is a name a business chooses to use which is different from
                their registered company name. <br/>For example D&B is a trading
                style of Dun & Bradstreet Ltd. It is what the business chooses
                to call itself for marketing purposes.
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: >-
                      The names the organization trades under for commercial
                      purposes<br/>A 'trading style' or 'trading as name' is a
                      name a business chooses to use which is different from
                      their registered company name.<br/>For example D&B is a
                      trading style of Dun & Bradstreet Ltd. It is what the
                      business chooses to call itself for marketing purposes.
                    example: Alternate Company Name
                  priority:
                    type: integer
                    description: >-
                      A numeric value used to identify the relative importance
                      of a Trade Style Name compared to other Trade Style
                      Names.  The lower the numeric value the earlier the data
                      is displayed (i.e. 1 indicates the most important name, 2
                      the second most important etc...)
                    example: 1
            multilingualTradestyleNames:
              type: array
              description: >-
                The details of the names, in multiple languages, that the entity
                trades under for commercial purposes although its registered
                legal name used for contracts and other formal situations may be
                another name.
              items:
                type: object
                properties:
                  language:
                    type: object
                    properties:
                      description:
                        type: string
                        description: >-
                          The name of the language in which this name was
                          recorded.
                        example: Japanese
                      dnbCode:
                        type: integer
                        description: >-
                          A unique code assigned by Dun&Bradstreet to denote the
                          language in which this name was recorded.<br/>Refer to
                          Reference code table "3 [Language]" for all possible
                          values.
                        example: 3807
                    description: >-
                      The details of the language in which this name was
                      recorded.
                  name:
                    type: string
                    description: >-
                      The name that the entity trades under for commercial
                      purposes although its registered legal name used for
                      contracts and other formal situations may be another name.
                  priority:
                    type: integer
                    description: >-
                      The sequence in which the entity mostly uses this trade
                      style name.
                    example: 1
            defaultCurrency:
              type: string
              description: >-
                The three-letter currency code, defined in the ISO 4217 scheme
                published by International Organization for Standardization
                (ISO) identifying the type of money that this entity uses by
                default.
              example: USD
            websiteAddress:
              type: array
              description: >-
                The details of the internet URLs used for online information and
                communication with the Organization.
              items:
                type: object
                properties:
                  url:
                    type: string
                    description: >-
                      The Internet URL (Uniform Resource Locator) that uniquely
                      identifies the proprietary website of the Organization or
                      the website preferred by the Organization that gives more
                      information on the entity.
                    example: http://www.gorman.com
                  domainName:
                    type: string
                    description: >-
                      A unique name used to identify the website of the
                      Organization that serves as an address to access that
                      website.
                    example: gorman.com
            email:
              type: array
              description: The details of the email address used to contact the entity.
              items:
                type: object
                properties:
                  address:
                    type: string
                    description: The email address for the entity.
                    example: someone@company.com
            telephone:
              type: array
              description: >-
                The details of the Telephone contact information used for voice
                communication with the organization.
              items:
                type: object
                properties:
                  telephoneNumber:
                    type: string
                    description: >-
                      The primary voice telephone number for the business, when
                      dialing domestically. The National Telephone Number is
                      created by combining the Domestic Area Code and the Local
                      Number.<br/><br/>A Domestic Area Code is a series of
                      numbers that must be prefixed before dialing a telephone
                      number in another local area. National telecommunication
                      authorities use various formats and dialing rules for area
                      codes. Also known as City Code.<br/><br/>A Local Number is
                      a series of numbers that represents a specific telephone
                      line.
                    example: '6505550000'
                  isdCode:
                    type: string
                    description: >-
                      A series of numbers that must be prefixed before dialing a
                      telephone number in another Country, it is comprised of an
                      International Dialing Prefix followed by the Country Code.
                      These are also referred to as Country Calling Code or
                      Country Dial-In Code.
                    example: '1'
            primaryAddress:
              type: object
              properties:
                language:
                  type: object
                  properties:
                    description:
                      type: string
                      description: >-
                        The name of the language in which this address was
                        recorded.
                      example: English
                    dnbCode:
                      type: integer
                      description: >-
                        A unique code assigned by Dun & Bradstreet to identify
                        the language in which this address was
                        recorded.<br/>Refer to Reference code table "3
                        [Language]" for all possible values.
                      example: 39
                  description: >-
                    The details of the language in which this address was
                    recorded.
                addressCountry:
                  type: object
                  properties:
                    name:
                      type: string
                      description: >-
                        The Country or Region where the organization's Primary
                        Address is located or conducts operations .
                      example: United States
                    isoAlpha2Code:
                      type: string
                      description: >-
                        The 2 letter alpha country code assigned by the
                        International Organization for Standardization (ISO)
                        identifying the Country/Region where the organization's
                        Primary address is located or conducts operations .
                      example: US
                  description: >-
                    The details of the country or region where the address of
                    the organization is located or conducts operations.
                continentalRegion:
                  type: object
                  properties:
                    name:
                      type: string
                      description: >-
                        The name of the continent where the Primary Address of
                        the organization is located or conducts
                        operations.<br/>Possible values <br/>Africa<br/>Asia
                        Pacific<br/>Europe<br/>North America<br/>Middle
                        East<br/>South America
                      example: North America
                  description: >-
                    The details of the Continent in which the Primary Address of
                    the organisation is located or conducts operations.
                addressLocality:
                  type: object
                  properties:
                    name:
                      type: string
                      description: >-
                        The name of the locality where the organization's
                        Primary Address is located or conducts operations.
                        Locality defined as a district population cluster. City,
                        town, township, village, borough etc.
                      example: SAN FRANCISCO
                  description: >-
                    The details of the locality where the organization's Primary
                    Address is located or conducts operations. Locality defined
                    as a district population cluster. City, town, township,
                    village, borough etc.
                minorTownName:
                  type: string
                  description: >-
                    The name of the  village, town or suburb where the
                    organization's Primary Address is located or conducts
                    operations.<br/>For example Booker in  Booker, High Wycombe.
                  example: Booker
                addressRegion:
                  type: object
                  properties:
                    name:
                      type: string
                      description: >-
                        The name of the geographical area where the
                        organization's Primary Address is located or conducts
                        operations. For Example New Jersey.
                      example: California
                    abbreviatedName:
                      type: string
                      description: >-
                        The shortened name of the geographical area where the
                        organization's Primary Address is located or conducts
                        operations For example NJ for the US State New Jersey
                        within Country United States.
                      example: CA
                  description: >-
                    Details of the type of geographical area where the
                    organization's Primary Address is located or conducts
                    operations.<br/>Different markets have their own way of
                    subdividing the country into smaller parts.
                    <br/>Examples:<br/>Departments (France)<br/>States
                    (USA)<br/>Provinces (Netherlands)<br/>Counties
                    (UK)<br/>Bundeslander (Germany)<br/>Provinces and
                    Territories (Canada)
                addressCounty:
                  type: object
                  properties:
                    name:
                      type: string
                      description: >-
                        The name of the geographical area of a Country or Region
                        where the organization's address is located or conducts
                        operations.<br/><br/>Countries subdivide their geography
                        into smaller sub divisions. County is an example of a
                        commonly used subdivision, oftenfound in the UK.
                      example: SAN MATEO
                  description: >-
                    The details of the geographical area of a Country or Region
                    where the organization's Primary Address is located or
                    conducts operations. Countries divide their geography into
                    smaller sub divisions.<br/><br/>County is an example of a
                    commonly used subdivision. Often found in UK.
                streetAddress:
                  type: object
                  properties:
                    line1:
                      type: string
                      description: >-
                        The first line of the address where the entity is
                        located.<br/><br/>The first line of the Primary Address
                        where the organization is located or conducts
                        operations. For example The Point in the
                        address<br/><br/>The Point<br/>37 North Wharf
                        Road<br/>London<br/>W2 1AF
                      example: 492 KOLLER ST
                    line2:
                      type: string
                      description: >-
                        The second line of the Primary Address where the
                        organization is located or conducts operations<br/>For
                        example 37 North Wharf Road in the address<br/>The
                        Point<br/>37 North Wharf Road<br/>London<br/>W2 1AF
                      example: Suite 100
                  description: >-
                    The details of the street address where the organization's
                    Primary Address is located.
                postalCode:
                  type: string
                  description: >-
                    The postal code of the organization's Primary
                    Address.<br/><br/>Also known locally in various
                    English-speaking countries throughout the world as a
                    postcode, post code, Eircode, PIN or ZIP Code) is a series
                    of letters or digits or both, sometimes including spaces or
                    punctuation, included in a postal address for the purpose of
                    sorting mail. The code is used by the country&#39;s postal
                    authority to identify the address where the organization is
                    located or conducts operations .
                  example: '941109999'
                postalCodePosition:
                  type: object
                  properties:
                    description:
                      type: string
                      description: >-
                        The position of the Postal Code when presenting the
                        Primary Address where the organization is located or
                        conducts operations (e.g. before or after the address
                        Town/City).
                      example: Post code presented before Town/City name
                    dnbCode:
                      type: integer
                      description: >-
                        A unique code assigned by Dun and Bradstreet to identify
                        the position of the postal code when presenting the
                        Primary Address where the organization is located or
                        conducts operations.<br/>Refer to Reference code table
                        "210 [Postal Code Position]" for all possible values.
                      example: 1009
                  description: >-
                    The details of the position of the Postal Code when
                    presenting the Primary Address where the organization is
                    located or conducts operations.
                streetNumber:
                  type: string
                  description: >-
                    The numerical part of the street address where the
                    organization's Primary Address is located or conducts
                    operations.<br/>This may be a single number, a number with
                    an appendix, or a range of street numbers.<br/>For example
                    37 in the address<br/>The Point<br/>37 North Wharf
                    Road<br/>London<br/>W2 1AF
                  example: '492'
                streetName:
                  type: string
                  description: >-
                    The name of the street where the organization's Primary
                    address is located or conducts operations. For example North
                    Wharf Road in the address<br/>The Point<br/>37 North
                    Wharf<br/>London<br/>W2 1AF
                  example: KOLLER ST
                postOfficeBox:
                  type: object
                  properties:
                    postOfficeBoxNumber:
                      type: string
                      description: >-
                        A unique dentifier issued to the organizationby a
                        private or public postal office where the
                        organizationrequests to have mail delivered for its
                        Primary Address.<br/><br/>This includes only the
                        identifying number (or text) and not the textual
                        description of the PO Box type. For example the contents
                        would be just the number 12 from PO Box 12 not PO Box or
                        just the number 57 from PMB 57 not PMB
                      example: '5309'
                    typeDescription:
                      type: string
                      description: The type of the PO Box (e.g., Post Office Box, PMB).
                      example: Supplied by public Post Office authority
                    typeDnBCode:
                      type: integer
                      description: >-
                        A unique code assigned by Dun & Bradstreet to identify
                        the type of PO Box where the organisation requests to
                        have mail delivered for its Primary Address.<br/>Refer
                        to Reference code table "208 [Postal Box Type]" for all
                        possible values.
                      example: 120
                  description: >-
                    The details of the location  issued by a private or public
                    Postal Office where the organization requests to have mail
                    delivered for its Primary Address.
                standardAddressCodes:
                  type: array
                  description: >-
                    Records identifiers that uniquely identifies an entire
                    address as opposed to an individual component of an address
                    (such as a street). For example, a NIKE Address Identifier,
                    a Japan Postal Barcode.
                  items:
                    type: object
                    properties:
                      addressCode:
                        type: string
                        description: >-
                          An identifier that uniquely identifies an entire
                          address as opposed to an individual component of an
                          address (such as a street). For example, a NIKE
                          Address Identifier, a Japan Postal Barcode.
                        example: ZV12467A
                      codeType:
                        type: object
                        properties:
                          description:
                            type: string
                            description: >-
                              Text that denotes the type of the standard address
                              code.
                            example: DK standard address code
                          dnbCode:
                            type: integer
                            description: >-
                              A unique code assigned by Dun&Bradstreet to
                              identify the type of the standard address code.
                            example: 487
                        description: Records the type of the standard address code.
                isRegisteredAddress:
                  type: boolean
                  description: >-
                    Indicates if the address is the same as the organization's
                    Registered Address<br/>if TRUE the primary/main address is
                    the same as the organization's
                    RegisteredAddress.<br/><br/>if FALSE The address is not the
                    same as the organization's Registered Address.
                  example: true
                latitude:
                  type: number
                  description: >-
                    The geographic coordinate that specifies the north-south
                    position of the Primary  Address where the organisation is
                    located or conducts operations .
                  example: 37.777709
                longitude:
                  type: number
                  description: >-
                    The geographic coordinate that specifies the  east-west
                    position of the Primary Address where the organisation is
                    located or conducts operations .
                  example: -122.404624
                geographicalPrecision:
                  type: object
                  properties:
                    description:
                      type: string
                      description: >-
                        A description of  how close the latitude and longitude
                        coordinates are to the geographical position of the
                        address where the organization  is located or conducts
                        operations.
                      example: Street Segment Centroid
                    dnbCode:
                      type: integer
                      description: >-
                        A unique code assigned by Dun and Bradstreet to identify
                        how close the latitude and longitude coordinates are for
                        the address where the organization is located or
                        conducts operations.<br/>Refer to Reference code table
                        "231 [Geographical Precision]" for all possible values.
                      example: 30256
                  description: >-
                    The details on how close the latitude and longitude
                    coordinates are to the geographical position of the address
                    where the organization  is located or conducts operations .
                statisticalArea:
                  type: object
                  properties:
                    economicAreaOfInfluenceCode:
                      type: string
                      description: >-
                        A code assigned by the U.S Bureau of Economic Analysis
                        to identify the entity's regional market that surrounds
                        a metropolitan or micropolitan statistical area serving
                        as a regional center of economic activity.
                      example: '146'
                  description: >-
                    The details of the various statistical facts associated with
                    this address.
                isManufacturingLocation:
                  type: boolean
                  description: >-
                    Indicates if manufacturing activity is performed at this
                    facility by the entity.<br/><br/>- If true, the entity
                    performs manufacturing activity at this facility.<br/>- If
                    false, the entity does not performs manufacturing activity
                    at this facility.
                  example: true
              description: >-
                The details of the Primary Address at which the organization is
                located or conducts operations.
            multilingualPrimaryAddress:
              type: array
              description: >-
                The details of the primary or physical address at which the
                entity is located presented in multiple languages.
              items:
                type: object
                properties:
                  language:
                    type: object
                    properties:
                      description:
                        type: string
                        description: >-
                          The name of the language in which this address was
                          recorded.
                        example: Japanese
                      dnbCode:
                        type: integer
                        description: >-
                          A unique code assigned by Dun & Bradstreet to identify
                          the language in which this address was
                          recorded.<br/>Refer to Reference code table "3
                          [Language]" for all possible values.
                        example: 3807
                    description: >-
                      The details of the language in which this address was
                      recorded.
                  addressCountry:
                    type: object
                    properties:
                      name:
                        type: string
                        description: >-
                          The name of the country/market in which this address
                          is located.
                        example: Japan
                      isoAlpha2Code:
                        type: string
                        description: >-
                          The two-letter country code, defined by the
                          International Organization for Standardization (ISO)
                          ISO 3166-1 scheme identifying the country/market in
                          which this address is located
                        example: JP
                    description: >-
                      The details of the country/market in which this address is
                      located.
                  continentalRegion:
                    type: object
                    properties:
                      name:
                        type: string
                        description: >-
                          The name of the continental region for this address.
                          Possible values: - Africa - Asia Pacific - Europe -
                          Latin America - Middle East - North America.
                        example: Asia Pacific
                    description: >-
                      The details of the continental region in which this
                      address is located.
                  addressLocality:
                    type: object
                    properties:
                      name:
                        type: string
                        description: >-
                          The name of the city, town, township, village,
                          borough, etc. in which this address is located.
                    description: >-
                      The details of the city, town, township, village, borough,
                      etc. in which this address is located.
                  minorTownName:
                    type: string
                    description: >-
                      The name of the village, town or suburb when it is not a
                      Primary Town or City (e.g., the Booker in Booker, High
                      Wycombe).
                    example: Booker
                  addressRegion:
                    type: object
                    properties:
                      name:
                        type: string
                        description: >-
                          The name of the locally governed area that forms part
                          of a centrally governed nation to identify where this
                          address is located.
                    description: >-
                      The details of the locally governed area that forms part
                      of a centrally governed nation to identify where this
                      address is located.
                  addressCounty:
                    type: object
                    properties:
                      name:
                        type: string
                        description: >-
                          The name of the county in which this address is
                          located.
                    description: >-
                      The details of the county in which this address is
                      located.
                  postalCode:
                    type: string
                    description: >-
                      An identifier used by the local country's postal authority
                      to identify where this address is located.
                    example: '941109999'
                  streetNumber:
                    type: string
                    description: >-
                      The number part of the street address where the entity is
                      located. This may be a single number, a number with an
                      appendix, or a range of street numbers. For example, the
                      "51 - 59C" in the address 51 - 59C Wall Street.
                    example: '2'
                  streetName:
                    type: string
                    description: >-
                      The name of the street where the entity is located. For
                      example, "Wall Street" in the address 51 - 59C Wall
                      Street.
                  streetAddress:
                    type: object
                    properties:
                      line1:
                        type: string
                        description: >-
                          The first line of the address where the entity is
                          located. For example, "41 Central Chambers" in the
                          address 41 Central Chambers Dame Court Dublin 2
                      line2:
                        type: string
                        description: >-
                          The second line of the address where the entity is
                          located. For example, "Dame Court" in the address 41
                          Central Chambers Dame Court Dublin 2
                    description: >-
                      The details of the street address where the entity is
                      located.
            registeredAddress:
              type: object
              properties:
                language:
                  type: object
                  properties:
                    description:
                      type: string
                      description: >-
                        A description of the language in which the
                        organization's official address is presented .
                      example: English
                    dnbCode:
                      type: integer
                      description: >-
                        A unique code assigned by Dun & Bradstreet to identify
                        the language in which this organization's official
                        address  is presented
                      example: 39
                  description: >-
                    The details of the language in which the organization's
                    official address is presented.
                addressCountry:
                  type: object
                  properties:
                    name:
                      type: string
                      description: >-
                        The name of the country/region where the organization's
                        official address is located
                      example: United States
                    isoAlpha2Code:
                      type: string
                      description: >-
                        The 2 letter alpha country code assigned by the
                        International Organization for Standardization (ISO)
                        identifying the country/region where the organization's
                        official address is located.
                      example: US
                  description: >-
                    The details of the Country or Region where the
                    organization's official address is located.
                addressLocality:
                  type: object
                  properties:
                    name:
                      type: string
                      description: >-
                        The name of the locality where the organization's
                        official address is located. <br/>Locality defined as a
                        district population cluster. City, Town, Township,
                        Village, Borough etc.
                      example: SAN FRANCISCO
                  description: >-
                    The details of the locality where the organization's
                    official address is located.
                minorTownName:
                  type: string
                  description: >-
                    The name of the village, town or suburb where the
                    organization's official address is located .<br/>E.g. Booker
                    in Booker High Wycombe
                  example: Booker
                addressRegion:
                  type: object
                  properties:
                    name:
                      type: string
                      description: >-
                        The name of the geographical area where the
                        organization's official address is located .
                        <br/>Example:<br/>New Jersey
                      example: California
                    abbreviatedName:
                      type: string
                      description: >-
                        The shortened name of the geographical area where the
                        organization's official address is located.<br/>For
                        example NJ for the US State New Jersey within Country
                        United States.
                      example: CA
                  description: >-
                    Details of the type of geographical area where the
                    organization's official address is
                    located.<br/><br/>Different markets have their own way of
                    subdividing the country into smaller parts.
                    <br/>Examples:<br/>Departments (France)<br/>States
                    (USA)<br/>Provinces (Netherlands)<br/>Bundeslnder
                    (Germany)<br/>Provinces and Territories (Canada)
                addressCounty:
                  type: object
                  properties:
                    name:
                      type: string
                      description: >-
                        The name of the geographical area of a country or region
                        where the organization's official address is
                        located.<br/><br/>Countries subdivide their geography
                        into smaller areas; the UK county is a typical example.
                      example: SAN MATEO
                  description: >-
                    The details of the geographical  area of a country or region
                    where the organization's official address is
                    located.<br/>Countries subdivide their  geography into
                    smaller areas. County is an example of commonly used area
                    often found in UK
                postalCode:
                  type: string
                  description: >-
                    The postal code of the organization's Registered Address.
                    Also known locally in various English-speaking countries
                    throughout the world as a postcode, post code, Eircode, PIN
                    or ZIP Code. Itis a series of letters or digits or both,
                    sometimes including spaces or punctuation, included in a
                    postal address for the purpose of sorting mail.
                  example: '941109999'
                postalCodePosition:
                  type: object
                  properties:
                    description:
                      type: string
                      description: >-
                        The position of the Postal Code when presenting the
                        organization's official address (e.g. before or after
                        the address Town/City)
                      example: Post code presented before Town/City name
                    dnbCode:
                      type: integer
                      description: >-
                        A  unique code assigned by Dun and Bradstreet to
                        identify the position of the postal code when presenting
                        the organization's official address.
                      example: 1009
                  description: >-
                    The details of the position of the Postal Code when
                    presenting the address where the organization's official
                    correspondence is delivered .
                streetNumber:
                  type: string
                  description: >-
                    The numerical part of the street address where the
                    organization's official address is located. This may be a
                    single number, a number with an appendix, or a range of
                    street numbers.<br/><br/><br/>For example, 51 - 59C for the
                    address 51 - 59C Wall Street.
                  example: 51 - 59C
                streetName:
                  type: string
                  description: >-
                    The name of the street where the organization's official
                    address is located. <br/>For example; Wall Street for the
                    address 51 - 59C Wall Street.
                  example: Wall Street
                streetAddress:
                  type: object
                  properties:
                    line1:
                      type: string
                      description: >-
                        The first line of the organization's official address.
                        For example The Point In the address<br/>The
                        Point<br/>37 North Wharf Road<br/>London<br/>W2 1AF
                      example: The Point
                    line2:
                      type: string
                      description: >-
                        The second line of the organization's official address.
                        For example 37 North Wharf Road In the address<br/>The
                        Point<br/>37 North Wharf Road<br/>London
                      example: 37 North Wharf Road
                    line3:
                      type: string
                      description: >-
                        The third line of the organization's official address.
                        For example  London in the address<br/>The Point<br/>37
                        North Wharf Road<br/>London<br/>W2 1AF
                      example: Address line 3
                    line4:
                      type: string
                      description: >-
                        The  fourth line of the organization's official address.
                        For example W2 1AF in the address<br/>The Point<br/>37
                        North Wharf Road<br/>London<br/>W2 1AF
                      example: Address line 4
                  description: >-
                    The details of the street address where the organization's
                    official address is located.
                postOfficeBox:
                  type: object
                  properties:
                    postOfficeBoxNumber:
                      type: string
                      description: >-
                        A unique identifier issued to the organisation by a
                        private or public postal office where all official
                        correspondence is delivered.<br/><br/>This includes only
                        the identifying number (or text) and not the textual
                        description of the PO Box type. For example the contents
                        would be just the number 12 from PO Box 12 not PO Box or
                        just the number 57 from PMB 57 not PMB
                      example: '5309'
                    typeDescription:
                      type: string
                      description: >-
                        A description of the type of post office box e.g.Post
                        Office Box or Private Mail Box PMB<br/>A post office box
                        (commonly abbreviated as P.O. box, or also known as a
                        postal box) is a uniquely addressable lockable box
                        located on the premises of a post office station where
                        the organisation requests to have official
                        correspondence delivered. <br/>A Private Mail box 
                        (commonly abbreviated as PMB provides a real street
                        address and can accept delivery of packages as well as
                        mail.
                      example: Supplied by public Post Office authority
                    typeDnBCode:
                      type: integer
                      description: >-
                        A unique code assigned by Dun & Bradstreet to identify
                        the type of PO Box where the organisation requests to
                        have official correspondence delivered.
                      example: 120
                  description: >-
                    A description of the language in which the organization's
                    official address is presented.
              description: >-
                The details of the organization's official address as recorded
                with an external authority to which all official correspondence
                must be sent<br/>Example<br/>Companies House for the UK.
            mailingAddress:
              type: object
              properties:
                language:
                  type: object
                  properties:
                    description:
                      type: string
                      description: >-
                        The name of the language in which this address was
                        recorded.
                      example: English
                    dnbCode:
                      type: integer
                      description: >-
                        A unique code assigned by Dun & Bradstreet to identify
                        the language in which this address was
                        recorded.<br/>Refer to Reference code table "3
                        [Language]" for all possible values.
                      example: 39
                  description: >-
                    The details of the language in which this address was
                    recorded.
                addressCountry:
                  type: object
                  properties:
                    name:
                      type: string
                      description: >-
                        The Country or Region where the organization's Primary
                        Address is located or conducts operations .
                      example: United States
                    isoAlpha2Code:
                      type: string
                      description: >-
                        The 2 letter alpha country code assigned by the
                        International Organization for Standardization (ISO)
                        identifying the Country/Region where the organization's
                        Primary address is located or conducts operations .
                      example: US
                  description: >-
                    The details of the country or region where the address of
                    the organization is located or conducts operations.
                continentalRegion:
                  type: object
                  properties:
                    name:
                      type: string
                      description: >-
                        The name of the continent where the Primary Address of
                        the organization is located or conducts
                        operations.<br/>Possible values <br/>Africa<br/>Asia
                        Pacific<br/>Europe<br/>North America<br/>Middle
                        East<br/>South America
                      example: North America
                  description: >-
                    The details of the Continent in which the Primary Address of
                    the organisation is located or conducts operations.
                addressLocality:
                  type: object
                  properties:
                    name:
                      type: string
                      description: >-
                        The name of the locality where the organization's
                        Primary Address is located or conducts operations.
                        Locality defined as a district population cluster. City,
                        town, township, village, borough etc.
                      example: SAN FRANCISCO
                  description: >-
                    The details of the locality where the organization's Primary
                    Address is located or conducts operations. Locality defined
                    as a district population cluster. City, town, township,
                    village, borough etc.
                minorTownName:
                  type: string
                  description: >-
                    The name of the  village, town or suburb where the
                    organization's Primary Address is located or conducts
                    operations.<br/>For example Booker in  Booker, High Wycombe.
                  example: Booker
                addressRegion:
                  type: object
                  properties:
                    name:
                      type: string
                      description: >-
                        The name of the geographical area where the
                        organization's Primary Address is located or conducts
                        operations. For Example New Jersey.
                      example: California
                    abbreviatedName:
                      type: string
                      description: >-
                        The shortened name of the geographical area where the
                        organization's Primary Address is located or conducts
                        operations For example NJ for the US State New Jersey
                        within Country United States.
                      example: CA
                  description: >-
                    Details of the type of geographical area where the
                    organization's Primary Address is located or conducts
                    operations.<br/>Different markets have their own way of
                    subdividing the country into smaller parts.
                    <br/>Examples:<br/>Departments (France)<br/>States
                    (USA)<br/>Provinces (Netherlands)<br/>Counties
                    (UK)<br/>Bundeslander (Germany)<br/>Provinces and
                    Territories (Canada)
                addressCounty:
                  type: object
                  properties:
                    name:
                      type: string
                      description: >-
                        The name of the geographical area of a Country or Region
                        where the organization's address is located or conducts
                        operations.<br/><br/>Countries subdivide their geography
                        into smaller sub divisions. County is an example of a
                        commonly used subdivision, oftenfound in the UK.
                      example: SAN MATEO
                  description: >-
                    The details of the geographical area of a Country or Region
                    where the organization's Primary Address is located or
                    conducts operations. Countries divide their geography into
                    smaller sub divisions.<br/><br/>County is an example of a
                    commonly used subdivision. Often found in UK.
                postalCode:
                  type: string
                  description: >-
                    The postal code of the organization's Primary
                    Address.<br/><br/>Also known locally in various
                    English-speaking countries throughout the world as a
                    postcode, post code, Eircode, PIN or ZIP Code) is a series
                    of letters or digits or both, sometimes including spaces or
                    punctuation, included in a postal address for the purpose of
                    sorting mail. The code is used by the country&#39;s postal
                    authority to identify the address where the organization is
                    located or conducts operations .
                  example: '941109999'
                postalCodePosition:
                  type: object
                  properties:
                    description:
                      type: string
                      description: >-
                        The position of the Postal Code when presenting the
                        Primary Address where the organization is located or
                        conducts operations (e.g. before or after the address
                        Town/City).
                      example: Post code presented before Town/City name
                    dnbCode:
                      type: integer
                      description: >-
                        A unique code assigned by Dun and Bradstreet to identify
                        the position of the postal code when presenting the
                        Primary Address where the organization is located or
                        conducts operations.<br/>Refer to Reference code table
                        "210 [Postal Code Position]" for all possible values.
                      example: 1009
                  description: >-
                    The details of the position of the Postal Code when
                    presenting the Primary Address where the organization is
                    located or conducts operations.
                postalRoute:
                  type: string
                  description: >-
                    A code assigned by the local postal authority that sorts
                    mail pieces to the individual carrier routes within a postal
                    code.
                  example: route 3B
                streetNumber:
                  type: string
                  description: >-
                    The numerical part of the street address where the
                    organization's Primary Address is located or conducts
                    operations.<br/>This may be a single number, a number with
                    an appendix, or a range of street numbers.<br/>For example
                    37 in the address<br/>The Point<br/>37 North Wharf
                    Road<br/>London<br/>W2 1AF
                  example: '492'
                streetName:
                  type: string
                  description: >-
                    The name of the street where the organization's Primary
                    address is located or conducts operations. For example North
                    Wharf Road in the address<br/>The Point<br/>37 North
                    Wharf<br/>London<br/>W2 1AF
                  example: KOLLER ST
                streetAddress:
                  type: object
                  properties:
                    line1:
                      type: string
                      description: >-
                        The first line of the address where the entity is
                        located.<br/><br/>The first line of the Primary Address
                        where the organization is located or conducts
                        operations. For example The Point in the
                        address<br/><br/>The Point<br/>37 North Wharf
                        Road<br/>London<br/>W2 1AF
                      example: 492 KOLLER ST
                    line2:
                      type: string
                      description: >-
                        The second line of the Primary Address where the
                        organization is located or conducts operations<br/>For
                        example 37 North Wharf Road in the address<br/>The
                        Point<br/>37 North Wharf Road<br/>London<br/>W2 1AF
                      example: Suite 100
                  description: >-
                    The details of the street address where the organization's
                    Primary Address is located.
                postOfficeBox:
                  type: object
                  properties:
                    postOfficeBoxNumber:
                      type: string
                      description: >-
                        A unique dentifier issued to the organizationby a
                        private or public postal office where the
                        organizationrequests to have mail delivered for its
                        Primary Address.<br/><br/>This includes only the
                        identifying number (or text) and not the textual
                        description of the PO Box type. For example the contents
                        would be just the number 12 from PO Box 12 not PO Box or
                        just the number 57 from PMB 57 not PMB
                      example: '5309'
                    typeDescription:
                      type: string
                      description: The type of the PO Box (e.g., Post Office Box, PMB).
                      example: Supplied by public Post Office authority
                    typeDnBCode:
                      type: integer
                      description: >-
                        A unique code assigned by Dun & Bradstreet to identify
                        the type of PO Box where the organisation requests to
                        have mail delivered for its Primary Address.<br/>Refer
                        to Reference code table "208 [Postal Box Type]" for all
                        possible values.
                      example: 120
                  description: >-
                    The details of the location  issued by a private or public
                    Postal Office where the organization requests to have mail
                    delivered for its Primary Address.
              description: >-
                The details of the address used by the entity for mailing
                purposes.
            stockExchanges:
              type: array
              description: >-
                The details of the Stock Exchanges on which the entity's shares
                are traded.
              items:
                type: object
                properties:
                  tickerName:
                    type: string
                    description: >-
                      Text by which the entity is identified on this Stock
                      Exchange for share trading purposes.
                    example: NYSE:DNB
                  exchangeName:
                    type: object
                    properties:
                      description:
                        type: string
                        description: The name the Stock Exchange.
                        example: NYSE
                    description: >-
                      The details of the name of the Stock Exchange on which the
                      entity's shares are traded.
                  isPrimary:
                    type: boolean
                    description: >-
                      Indicates if this is the most important stock exchange
                      among all the stock exchange where the entity's shares are
                      traded. <br/><br/>- If true, indicates that this is the
                      most important Stock Exchange.<br/>- If false, indicates
                      that this is not the most important Stock Exchange.
                    example: true
            standardizedStockExchanges:
              type: array
              description: >-
                Records all the stock exchanges that the subject trades in
                represented using predefined finite values.
              items:
                type: object
                properties:
                  exchangeName:
                    type: object
                    properties:
                      description:
                        type: string
                        description: >-
                          Text that denotes the standardized name of the stock
                          exchange.
                        example: Shanghai Stock Exchange
                      dnbCode:
                        type: integer
                        description: >-
                          A unique code assigned by Dun&Bradstreet that denotes
                          the standardized name of the stock exchange.<br/>Refer
                          to Reference code table "178 [Stock Exchange]" for all
                          possible values.
                        example: 20666
                    description: Records the standardized name of the stock exchange.
                  sectionNames:
                    type: array
                    description: >-
                      Records the different sections within a stock exchange in
                      different languages.
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: >-
                            Records the name of the section within the stock
                            exchange, e.g., First section of the Tokyo Stock
                            Exchange, Second section of the Tokyo Stock
                            Exchange, JASDAQ, MOTHERS.
                          example: JASDAQ
                        language:
                          type: object
                          properties:
                            description:
                              type: string
                              description: >-
                                Text that records the language in which this
                                information was recorded.<br/>Refer to Reference
                                code table "3 [Language]" for all possible
                                values.
                              example: Japanese
                            dnbCode:
                              type: integer
                              description: >-
                                A unique code assigned by Dun&Bradstreet that
                                records the language in which this information
                                was recorded.
                              example: 3807
                          description: >-
                            Records the language in which this information was
                            recorded.
            isForbesLargestPrivateCompaniesListed:
              type: boolean
              description: >-
                Indicates whether the entity has ever been listed as one of the
                largest private companies in the United States on the annual
                list compiled and published by Forbes
                magazine<br/>.<br/><br/><br/>- If true, the entity has been
                listed.<br/>- If false, the entity has not been listed.
              example: false
            isFortune1000Listed:
              type: boolean
              description: >-
                Indicates whether the entity has ever been listed as one of the
                1000 largest American companies, ranked on revenues alone by the
                American business magazine Fortune.<br/><br/><br/>- If true, the
                entity has been listed.<br/>- If false, the entity has not been
                listed.
              example: false
            registrationNumbers:
              type: array
              description: >-
                The details of the organization's identifiers issued by a
                recognized external authority to uniquely identify subjects. The
                issuing authority may be a Registration Authority, Government
                Department or Commercial Enterprise (e.g., Chamber of Commerce
                numbers, VAT numbers).
              items:
                type: object
                properties:
                  registrationNumber:
                    type: string
                    description: >-
                      The number or alphanumeric value assigned by a recognized
                      external authority that either uniquely identifies or
                      helps to identify the organization.
                    example: 12-3456789
                  typeDescription:
                    type: string
                    description: >-
                      The official name of the organization identifier assigned
                      by a recognized external authority (e.g.. Australian
                      Company Number, Federal Taxpayer Identification Number,
                      Value Added Tax Number).
                    example: Federal Taxpayer Identification Number (US)
                  typeDnBCode:
                    type: integer
                    description: >-
                      A unique code assigned by Dun & Bradstreet to identify the
                      type of organization identifier. For example, 2541 stands
                      for company number issued by the UK Companies
                      House.<br/>Refer to Reference code table "7 [Registration
                      Number Type]" for all possible values.
                    example: 6863
                  isPreferredRegistrationNumber:
                    type: boolean
                    description: >-
                      Indicates whether this is the preferred organization
                      identifier. When turned ON (set to TRUE), this
                      organization identifier is the one Dun & Bradstreet
                      recommends for this organization. When turned OFF (set to
                      FALSE), this is not the preferred organization identifier.
                    example: true
            primaryIndustryCode:
              type: object
              properties:
                usSicV4:
                  type: string
                  description: >-
                    The 4-digit code in the U.S. SIC (Standard Industrial
                    Classification) 1987 system assigned to an organization
                    categorizing the primary business activities performed at
                    its location. For example, 1611 represents the highway and
                    street construction industry.
                  example: '5461'
                usSicV4Description:
                  type: string
                  description: >-
                    The description of the business activities represented by
                    the Primary US SIC Code. For example, 'highway and street
                    construction' is the description of industry code 1611.
                  example: Credit reporting services
              description: >-
                The details of the business activity in which the organisation
                is primarily engaged using standardised coding schemes such as
                European NACE and U.S Standard Industry Classification (SIC).
            industryCodes:
              type: array
              description: >-
                The details of the business activities in which the organization
                is actively engaged using a standardized coding schemes such as
                European NACE and U.S. Standard Industry Classification (SIC).
              items:
                type: object
                properties:
                  code:
                    type: string
                    description: >-
                      An alphanumeric value assigned to an organization
                      categorizing the business activities performed at its
                      location. Business activities are coded using standardized
                      coding schemes. For example, 1611 represents the highway
                      and street construction industry in the U.S. SIC (Standard
                      Industrial Classification) 1987 system.
                    example: '323111'
                  description:
                    type: string
                    description: >-
                      The description of the business activities represented by
                      the Industry Code as defined in the coding scheme
                      identified by the Industry Code Type Description. For
                      example, 'highway and street construction' is the
                      description of industry code 1611 in the U.S. SIC 1987
                      system.
                    example: 'Commercial Printing '
                  typeDescription:
                    type: string
                    description: >-
                      The details of the standardized coding scheme used to
                      classify the business activities of an organization. This
                      can be an externally recognized coding scheme as for
                      instance North American Industry Classification System
                      (NAICS) or a proprietary scheme like D&B SIC-8.
                    example: North American Industry Classification System 2012
                  typeDnBCode:
                    type: integer
                    description: >-
                      A unique code assigned by Dun & Bradstreet to identify the
                      industry coding scheme.<br/>Industry schemes supported
                      currently:<br/>D&B Industry Code (3599)<br/>NAICS Code
                      (30832)<br/>US 1987 SIC Code (399)<br/>NACE Revision 2
                      (29104)<br/>D&B Hoovers Industry Code (25838)<br/>Major
                      Industry Category (24657)<br/>Local Activity Codes
                      (specific to markets)<br/>Refer to Reference code table
                      "30 [Industry Code Type]" for all possible values.
                    example: 24664
                  priority:
                    type: integer
                    description: >-
                      A number identifying the order in which this industry code
                      should be presented relative to other industry codes of
                      the same type. Priority is based on the importance of the
                      business activity to the organization.
                    example: 1
            unspscCodes:
              type: array
              description: >-
                The details of several products and services represented in the
                United Nations Standard Products and Services Code (UNSPSC)
                scheme; this scheme was jointly developed by the United Nations
                Development Programme (UNDP) and Dun & Bradstreet Corporation in
                1998.<br/><br/>The United Nations Standard Products and Services
                Code (UNSPSC) provides an open, global multi-sector standard for
                efficient, accurate classification of products and services. It
                is a 4-level hierarchy coded as an 8-digit number.<br/><br/>The
                UNSPSC for a given item is composed of four 2-digit identifiers,
                which together categorize the item into a five-level hierarchy.
                The five levels of the classification are Segment, Family,
                Class, and Commodity. Business Function is optional.
              items:
                type: object
                properties:
                  code:
                    type: string
                    description: >-
                      The UNSPSC code that identifies a product or service
                      offered by the entity.
                    example: '31111617'
                  description:
                    type: string
                    description: The description associated with the UNSPSC code.
                    example: Zinc impact extrusions
                  priority:
                    type: integer
                    description: >-
                      Identifies the order in which this UNSPSC code should be
                      presented relative to other UNSPSC codes.
                    example: 1
            isNonClassifiedEstablishment:
              type: boolean
              description: >-
                When set to "true", it denotes that the Dun & Bradstreet is
                unable to classify the subject into a specific
                industry.<br/>When set to "false", it denotes that the Dun &
                Bradstreet is able to classify the subject into a specific
                industry.
              example: true
            activities:
              type: array
              description: >-
                The details of the descriptions of operations in different
                languages.
              items:
                type: object
                properties:
                  description:
                    type: string
                    description: Description of operations continued by a business.
                    example: Entity operation description
                  language:
                    type: object
                    properties:
                      description:
                        type: string
                        description: >-
                          The name of the language in which this business
                          activity was recorded.
                        example: English
                      dnbCode:
                        type: integer
                        description: >-
                          A unique code assigned by Dun & Bradstreet to identify
                          the language in which this business activity was
                          recorded.<br/>Refer to Reference code table "3
                          [Language]" for all possible values.
                        example: 39
                    description: >-
                      The details of the language in which this business
                      activity was recorded.
            startDate:
              type: string
              description: >-
                The date the entity chooses to claim as its established
                date.<br/> <br/>Note: This date may be different from the
                Operations Start Date and adheres to ISO 8601 standard.The date
                an organization originally commenced operations. If the business
                was formed to acquire or continue the operations of a
                pre-existing business, then the Start Date may reflect that
                original start date. The Start Date is not necessarily the date
                that the subject was registered/incorporated. If a company
                registered on 25th August 1930 continues business activities
                established on 18th June 1815 then the start date is the 1815
                date.
              example: '2012-09-03'
            incorporatedDate:
              type: string
              description: >-
                The date on which a legal form was first registered with the
                appropriate Government body for this organization.
              example: '1987'
            businessEntityType:
              type: object
              properties:
                description:
                  type: string
                  description: >-
                    The text description of the unique code assigned by Dun &
                    Bradstreet for the Legal Form Class.
                  example: Corporation
                dnbCode:
                  type: integer
                  description: >-
                    A unique code assigned by D&B to identify the Legal Form
                    Class. <br/>E.g. 451 is the Code for Corporation.<br/>Refer
                    to Reference code table "197 [Business Entity Type]" for all
                    possible values.
                  example: 451
              description: >-
                A broad category of an organization structure into which all
                Legal Forms are grouped. These categories are created by Dun &
                Bradstreet for client use based on Legal Form association with
                one and only one Legal Form Class. Legal Form Class is limited
                to Corporation, Partnership, Proprietorship, National
                Government, Local Government, Joint Venture, Non Profit
                Organization, Co-operative / Mutual Organization and Foreign
                Company as well as a category for Legal Forms that do not fit
                into an existing Legal Form Class.
            legalForm:
              type: object
              properties:
                description:
                  type: string
                  description: >-
                    The text description of the unique code assigned by Dun &
                    Bradstreet for the Global Legal Form.
                  example: Corporation
                dnbCode:
                  type: integer
                  description: >-
                    A unique code assigned by D&B for the Global Legal Form.
                    <br/>For example 31145 is the Code for Government
                    Agency<br/>Refer to Reference code table "750 [Global Legal
                    Form]" for all possible values.
                  example: 31217
                startDate:
                  type: string
                  description: >-
                    The date on which the legal form was registered with the
                    appropriate Government body or recognised by Dun and
                    Bradstreet.
                  example: '2002-03-05'
                registrationLocation:
                  type: object
                  properties:
                    addressRegion:
                      type: string
                      description: >-
                        The name of the geographical area where the
                        organization's Primary Address is located or conducts
                        operations. For Example New Jersey.
                      example: California
                  description: >-
                    The details of the address where the Legal Form is
                    registered.
              description: >-
                The details of the structure of an organization, irrespective of
                the laws of the country or region in which it was formed.
                Commonly, this structure will be determined when registered with
                government authorities, however some entities are not required
                to register. This structure affects how much is paid in taxes,
                the ability to raise money, the requirements to register and the
                liability of proprietors. These structure types are universally
                standardized by Dun & Bradstreet for client use based on Legal
                Form association with one and only one Global Legal Form.
                Examples include Joint Stock Company and Limited Liability
                Company.
            controlOwnershipDate:
              type: string
              description: The date when the current owners took over the entity.
              example: '1985'
            controlOwnershipType:
              type: object
              properties:
                description:
                  type: string
                  description: >-
                    The name for the type of controlling ownership (e.g.,
                    publicly owned, privately owned, state owned).
                    <br/><br/>Note: For some countries, controlling ownership
                    can be derived from the legal form.
                  example: Privately owned
                dnbCode:
                  type: integer
                  description: >-
                    A unique code assigned by Dun & Bradstreet to identify the
                    type of controlling ownership.<br/>Refer to Reference code
                    table "175 [Control Type]" for all possible values.
                  example: 9058
              description: The details of the type of controlling ownership.
            charterType:
              type: object
              properties:
                description:
                  type: string
                  description: >-
                    The nature of the document identifying the purpose of this
                    entity and its rules of conduct (e.g., municipality charter,
                    local public school charter, medical partnership charter,
                    mutual surety company charter).
                  example: Joint tenancy
                dnbCode:
                  type: integer
                  description: >-
                    A unique code assigned by Dun & Bradstreet to identify the
                    entity's charter type.<br/>Refer to Reference code table
                    "162 [Charter Type]" for all possible values.
                  example: 2110
              description: The details of the entity's charter type.
            isAgent:
              type: boolean
              description: >-
                Indicates if the entity acts as an agent promoting the goods or
                services of another entity (e.g., Sales Agent, Purchasing
                Agent). <br/><br/>- If true, the entity acts as an agent.<br/>-
                If false, the entity does not act as an agent.
              example: false
            isImporter:
              type: boolean
              description: >-
                Indicates if the entity is an importer.<br/><br/>- If true, the
                entity imports a quantity of goods from other countries.<br/>-
                If false, the entity does not import a quantity of goods from
                other countries.
              example: false
            isExporter:
              type: boolean
              description: >-
                Indicates if the entity is an exporter.<br/><br/>- If true, the
                entity exports a quantity of goods to other countries.<br/>- If
                false, the entity does not export a quantity of goods to other
                countries.
              example: false
            registeredDetails:
              type: object
              properties:
                legalForm:
                  type: object
                  properties:
                    description:
                      type: string
                      description: >-
                        The text description of the unique code assigned by D&B
                        for the Legal Form. <br/>For example Public Limited
                        Liability Company .
                      example: Corporation (US)
                    dnbCode:
                      type: integer
                      description: >-
                        The  unique code assigned by D&B for the  Legal
                        Form.<br/>E.g. 1868 is the Code for Italian Public
                        Limited Liability Company<br/>Refer to Reference code
                        table "4 [Legal Form]" for all possible values.
                      example: 7101
                    registrationStatus:
                      type: object
                      properties:
                        description:
                          type: string
                          description: >-
                            Status description of the registration with respect
                            to this legal form.
                          example: Pending
                        dnbCode:
                          type: integer
                          description: >-
                            A unique code assigned by Dun & Bradstreet to
                            identify the status of the registration with respect
                            to this legal form.<br/>Refer to Reference code
                            table "396 [Registration Status]" for all possible
                            values.
                          example: 15626
                      description: >-
                        The details of the status of the registration with
                        respect to this legal form.
                  description: >-
                    The details of the structure of an organization according to
                    the laws of the country or region in which it was formed.
                    Commonly, this structure will be determined when registered
                    with government authorities, however some organisations are
                    not required to register. This structure affects how much is
                    paid in taxes, the ability to raise money, the requirements
                    to register and the liability of proprietors. These
                    structure types are unique by country, as similar legal form
                    types can have different interpretations by country or
                    region. Also known as Legal Structure or Business Structure.
                    Examples include Limited Liability Company (US), Private
                    Unlimited Company Without Share Capital (GB) or Limited
                    Responsibility Cooperative (BO).
              description: >-
                The details of the constitutional status of the entity as
                defined under the laws of a country (e.g., Limited Company,
                Partnership, co-operative Society) and the Stock Equity or share
                structure employed by the entity according to the legal form and
                rules of incorporation. The owners of the stock or shares are
                the owners of the business.
            numberOfEmployees:
              type: array
              description: >-
                The details of the number of individuals engaged by a business
                for various purposes, e.g., to perform its business operations.
              items:
                type: object
                properties:
                  value:
                    type: integer
                    description: >-
                      The number of individuals engaged by a business to perform
                      its various purposes, e.g., business operations, and can
                      include directors, principals and full or part time
                      employees.
                    example: 1234
                  employeeFiguresDate:
                    type: string
                    description: >-
                      The date for which the employee figure was reported by the
                      entity.
                    example: '2017-12-31'
                  informationScopeDescription:
                    type: string
                    description: >-
                      The organizational scope of the Employee Quantity Values.
                      Employees here means it represents a single organization
                      inclusive of any branches. Employees Total means it
                      represents an organization inclusive of any branches and
                      any subsidiaries.
                    example: Consolidated
                  informationScopeDnBCode:
                    type: integer
                    description: >-
                      A unique code assigned by Dun & Bradstreet to identify the
                      organizational scope of the Employee Quantity
                      value.<br/>Refer to Reference code table "192 [Information
                      Scope]" for all possible values.
                    example: 9067
                  reliabilityDescription:
                    type: string
                    description: >-
                      The integrity of the Employee Quantity Value (e.g.,
                      actual, estimated, or modeled).
                    example: Actual
                  reliabilityDnBCode:
                    type: integer
                    description: >-
                      A unique code assigned by Dun & Bradstreet to identify the
                      integrity of the Employee Quantity Values.<br/>Refer to
                      Reference code table "171 [Reliability]" for all possible
                      values.
                    example: 9092
                  employeeCategories:
                    type: array
                    description: >-
                      The details of the type of individuals included in the
                      calculation of the Employee Quantity Value.
                    items:
                      type: object
                      properties:
                        employmentBasisDescription:
                          type: string
                          description: >-
                            The type of individuals that have been included in
                            the calculation of the Employee Quantity Value on
                            the basis of their employment contract (e.g.,
                            Directors, Principals, Part Time Workers).
                          example: Principals
                        employmentBasisDnBCode:
                          type: integer
                          description: >-
                            A unique code assigned by Dun & Bradstreet to
                            identify the employment basis description.<br/>Refer
                            to Reference code table "77 [Employment Basis]" for
                            all possible values.
                          example: 9064
                  trend:
                    type: array
                    description: The details of the employee growth history.
                    items:
                      type: object
                      properties:
                        timePeriod:
                          type: object
                          properties:
                            description:
                              type: string
                              description: The timeframe for which this data is recorded.
                              example: 1 - 5 years
                            dnbCode:
                              type: integer
                              description: >-
                                A unique code assigned by Dun & Bradstreet to
                                identify the timeframe for which this data is
                                recorded.<br/>Refer to Reference code table "168
                                [Time Period]" for all possible values.
                              example: 13721
                          description: >-
                            The details of timeframe for which this data is
                            recorded.
                        growthRate:
                          type: number
                          description: >-
                            The percentage of change in number of employees from
                            base year compared to the trend year.
                          example: -7
                        value:
                          type: number
                          description: >-
                            The total number of people engaged by an entity to
                            perform its business operations. Several different
                            Employee Figures for the entity may be recorded
                            (e.g., consolidated, individual entity, headquarters
                            only).
                          example: 23.01
                        reliabilityDescription:
                          type: string
                          description: The integrity of the financial figures.
                          example: Audited
                        reliabilityDnBCode:
                          type: integer
                          description: >-
                            A unique code assigned by Dun & Bradstreet to
                            identify the integrity of the financial
                            figures.<br/>Refer to Reference code table "171
                            [Reliability]" for all possible values.
                          example: 9092
            financials:
              type: array
              description: >-
                The details of the standardized summary view of the financial
                results (actual or estimated) for the organization.
              items:
                type: object
                properties:
                  financialStatementToDate:
                    type: string
                    description: >-
                      The date associated with the financial results. When the
                      values are from a financial statement, it represents the
                      date the accounting period ended. When it is an estimated
                      or modeled value, it is the date on which the data was
                      submitted.
                    example: '2016-12-31'
                  financialStatementDuration:
                    type: string
                    description: >-
                      The period of the financial statement expressed as a time
                      interval.
                    example: Annual
                  informationScopeDescription:
                    type: string
                    description: >-
                      The organizational scope of the values within the Summary
                      Financials section. Individual means it represents a
                      single organization inclusive of any branches.
                      Consolidated means it represents an organization inclusive
                      of any branches and any subsidiaries.
                    example: Consolidated
                  informationScopeDnBCode:
                    type: integer
                    description: >-
                      A unique code assigned by Dun & Bradstreet to identify the
                      organizational scope of the Summary Financials
                      values.<br/>Refer to Reference code table "192
                      [Information Scope]" for all possible values.
                    example: 9067
                  reliabilityDescription:
                    type: string
                    description: >-
                      The integrity of the financial figures present within the
                      Summary Financials section (e.g., actual, estimated, or
                      modeled).
                    example: Actual
                  reliabilityDnBCode:
                    type: integer
                    description: >-
                      A unique code assigned by Dun & Bradstreet to identify the
                      integrity of the financial figures present within the
                      Summary Financials section.<br/>Refer to Reference code
                      table "171 [Reliability]" for all possible values.
                    example: 9092
                  unitCode:
                    type: string
                    description: >-
                      The magnitude in which the Summary Financials figures are
                      provided (e.g., in Single Units, Thousands, Millions).
                    example: Single Units
                  yearlyRevenue:
                    type: array
                    description: >-
                      The details of the total income attributable to product
                      and services sold by an organization annually.
                    items:
                      type: object
                      properties:
                        value:
                          type: number
                          description: >-
                            The total income attributable to product and
                            services sold by an organization annually. It may be
                            derived from sales, gross revenue, commissions,
                            billings or a combination of any of these.
                          example: 19945238
                        currency:
                          type: string
                          description: >-
                            The three-letter currency code, defined in the ISO
                            4217 scheme published by the International
                            Organization for Standardization (ISO) identifying
                            the type of money in which this amount is expressed
                            (e.g., USD, CAD, GBP, EUR).
                          example: USD
            banks:
              type: array
              description: >-
                The details of banks or other financial institutions at which
                the entity has an account.
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: >-
                      The name of the bank or a financial institution at which
                      the entity has an account.
                    example: Bank of My Country
                  telephone:
                    type: array
                    description: >-
                      The details of the Telephone contact information used for
                      voice communication with the organization.
                    items:
                      type: object
                      properties:
                        telephoneNumber:
                          type: string
                          description: >-
                            The primary voice telephone number for the business,
                            when dialing domestically. The National Telephone
                            Number is created by combining the Domestic Area
                            Code and the Local Number.<br/><br/>A Domestic Area
                            Code is a series of numbers that must be prefixed
                            before dialing a telephone number in another local
                            area. National telecommunication authorities use
                            various formats and dialing rules for area codes.
                            Also known as City Code.<br/><br/>A Local Number is
                            a series of numbers that represents a specific
                            telephone line.
                          example: '6505550000'
                  address:
                    type: object
                    properties:
                      addressLocality:
                        type: object
                        properties:
                          name:
                            type: string
                            description: >-
                              The name of the locality where the organization's
                              Primary Address is located or conducts operations.
                              Locality defined as a district population cluster.
                              City, town, township, village, borough etc.
                            example: SAN FRANCISCO
                        description: >-
                          The details of the locality where the organization's
                          Primary Address is located or conducts operations.
                          Locality defined as a district population cluster.
                          City, town, township, village, borough etc.
                      addressRegion:
                        type: object
                        properties:
                          name:
                            type: string
                            description: >-
                              The name of the geographical area where the
                              organization's Primary Address is located or
                              conducts operations. For Example New Jersey.
                            example: California
                        description: >-
                          Details of the type of geographical area where the
                          organization's Primary Address is located or conducts
                          operations.<br/>Different markets have their own way
                          of subdividing the country into smaller parts.
                          <br/>Examples:<br/>Departments (France)<br/>States
                          (USA)<br/>Provinces (Netherlands)<br/>Counties
                          (UK)<br/>Bundeslander (Germany)<br/>Provinces and
                          Territories (Canada)
                      postalCode:
                        type: string
                        description: >-
                          The postal code of the organization's Primary
                          Address.<br/><br/>Also known locally in various
                          English-speaking countries throughout the world as a
                          postcode, post code, Eircode, PIN or ZIP Code) is a
                          series of letters or digits or both, sometimes
                          including spaces or punctuation, included in a postal
                          address for the purpose of sorting mail. The code is
                          used by the country&#39;s postal authority to identify
                          the address where the organization is located or
                          conducts operations .
                        example: '941109999'
                      streetAddress:
                        type: object
                        properties:
                          line1:
                            type: string
                            description: >-
                              The first line of the address where the entity is
                              located.<br/><br/>The first line of the Primary
                              Address where the organization is located or
                              conducts operations. For example The Point in the
                              address<br/><br/>The Point<br/>37 North Wharf
                              Road<br/>London<br/>W2 1AF
                            example: 492 KOLLER ST
                          line2:
                            type: string
                            description: >-
                              The second line of the Primary Address where the
                              organization is located or conducts
                              operations<br/>For example 37 North Wharf Road in
                              the address<br/>The Point<br/>37 North Wharf
                              Road<br/>London<br/>W2 1AF
                            example: Suite 100
                        description: >-
                          The details of the street address where the
                          organization's Primary Address is located.
                    description: >-
                      The details of the Primary Address at which the
                      organization is located or conducts operations.
                  registrationNumbers:
                    type: array
                    description: >-
                      The details of the organization's identifiers issued by a
                      recognized external authority to uniquely identify
                      subjects. The issuing authority may be a Registration
                      Authority, Government Department or Commercial Enterprise
                      (e.g., Chamber of Commerce numbers, VAT numbers).
                    items:
                      type: object
                      properties:
                        registrationNumber:
                          type: string
                          description: >-
                            The number or alphanumeric value assigned by a
                            recognized external authority that either uniquely
                            identifies or helps to identify the organization.
                          example: 12-3456789
            isSmallBusiness:
              type: boolean
              description: >-
                Indicates if the business qualifies as small business, eligible
                for assistance from SBA, with a place of business located in the
                United States. It must operate primarily within the United
                States or make a significant contribution to the U.S. economy
                through payment of taxes or use of American products, materials
                or labor. Together with its affiliates, it must meet the
                numerical size standards as defined in the Small Business Size
                Regulations 13 CFR 121.<br/><br/>- If true, indicates that this
                is a small business.<br/>- If false, indicates that this is not
                a small business
              example: true
            isStandalone:
              type: boolean
              description: >-
                Indicates if the entity is a member of a legal family tree.
                <br/><br/>- If true, indicates that the entity is not a member
                of a legal family tree. This means it cannot play any family
                tree role and corporateLinkage will not be present.<br/>- If
                false, indicates that the entity is a member of a legal family
                tree. The roles it plays is indicated by Family Tree Member
                Roles played.
              example: false
            globalUltimate:
              type: object
              properties:
                numberOfEmployees:
                  type: array
                  description: >-
                    The details of the number of individuals engaged by a
                    business for various purposes, e.g., to perform its business
                    operations.
                  items:
                    type: object
                    properties:
                      value:
                        type: integer
                        description: >-
                          The number of individuals engaged by a business to
                          perform its various purposes, e.g., business
                          operations, and can include directors, principals and
                          full or part time employees.
                        example: 1234
                      minimumValue:
                        type: integer
                        description: >-
                          The minimum number of people engaged by this entity to
                          perform its business operations. The scope of this
                          employee figure is identified in
                          informationScopeDescription.
                        example: 700
                      maximumValue:
                        type: integer
                        description: >-
                          The maximum number of people engaged by this entity to
                          perform its business operations. The scope of this
                          employee figure is identified in
                          informationScopeDescription.
                        example: 1500
                      employeeFiguresDate:
                        type: string
                        description: >-
                          The date for which the employee figure was reported by
                          the entity.
                        example: '2017-12-31'
                      informationScopeDescription:
                        type: string
                        description: >-
                          The organizational scope of the Employee Quantity
                          Values. Employees here means it represents a single
                          organization inclusive of any branches. Employees
                          Total means it represents an organization inclusive of
                          any branches and any subsidiaries.
                        example: Consolidated
                      informationScopeDnBCode:
                        type: integer
                        description: >-
                          A unique code assigned by Dun & Bradstreet to identify
                          the organizational scope of the Employee Quantity
                          value.<br/>Refer to Reference code table "192
                          [Information Scope]" for all possible values.
                        example: 9067
                      reliabilityDescription:
                        type: string
                        description: >-
                          The integrity of the Employee Quantity Value (e.g.,
                          actual, estimated, or modeled).
                        example: Actual
                      reliabilityDnBCode:
                        type: integer
                        description: >-
                          A unique code assigned by Dun & Bradstreet to identify
                          the integrity of the Employee Quantity
                          Values.<br/>Refer to Reference code table "171
                          [Reliability]" for all possible values.
                        example: 9092
                financials:
                  type: array
                  description: >-
                    The details of the standardized summary view of the
                    financial results (actual or estimated) for the
                    organization.
                  items:
                    type: object
                    properties:
                      yearlyRevenue:
                        type: array
                        description: >-
                          The details of the total income attributable to
                          product and services sold by an organization annually.
                        items:
                          type: object
                          properties:
                            value:
                              type: number
                              description: >-
                                The total income attributable to product and
                                services sold by an organization annually. It
                                may be derived from sales, gross revenue,
                                commissions, billings or a combination of any of
                                these.
                              example: 19945238
                            currency:
                              type: string
                              description: >-
                                The three-letter currency code, defined in the
                                ISO 4217 scheme published by the International
                                Organization for Standardization (ISO)
                                identifying the type of money in which this
                                amount is expressed (e.g., USD, CAD, GBP, EUR).
                              example: USD
                      informationScopeDescription:
                        type: string
                        description: >-
                          The organizational scope of the values within the
                          Summary Financials section. Individual means it
                          represents a single organization inclusive of any
                          branches. Consolidated means it represents an
                          organization inclusive of any branches and any
                          subsidiaries.
                        example: Consolidated
                      informationScopeDnBCode:
                        type: integer
                        description: >-
                          A unique code assigned by Dun & Bradstreet to identify
                          the organizational scope of the Summary Financials
                          values.<br/>Refer to Reference code table "192
                          [Information Scope]" for all possible values.
                        example: 9067
                      reliabilityDescription:
                        type: string
                        description: >-
                          The integrity of the financial figures present within
                          the Summary Financials section (e.g., actual,
                          estimated, or modeled).
                        example: Actual
                      reliabilityDnBCode:
                        type: integer
                        description: >-
                          A unique code assigned by Dun & Bradstreet to identify
                          the integrity of the financial figures present within
                          the Summary Financials section.<br/>Refer to Reference
                          code table "171 [Reliability]" for all possible
                          values.
                        example: 9092
              description: >-
                Records the firmograhics information of the Global Ultimate
                company.
            domesticUltimate:
              type: object
              properties:
                numberOfEmployees:
                  type: array
                  description: >-
                    The details of the number of individuals engaged by a
                    business for various purposes, e.g., to perform its business
                    operations.
                  items:
                    type: object
                    properties:
                      value:
                        type: integer
                        description: >-
                          The number of individuals engaged by a business to
                          perform its various purposes, e.g., business
                          operations, and can include directors, principals and
                          full or part time employees.
                        example: 1234
                      minimumValue:
                        type: integer
                        description: >-
                          The minimum number of people engaged by this entity to
                          perform its business operations. The scope of this
                          employee figure is identified in
                          informationScopeDescription.
                        example: 700
                      maximumValue:
                        type: integer
                        description: >-
                          The maximum number of people engaged by this entity to
                          perform its business operations. The scope of this
                          employee figure is identified in
                          informationScopeDescription.
                        example: 1500
                      employeeFiguresDate:
                        type: string
                        description: >-
                          The date for which the employee figure was reported by
                          the entity.
                        example: '2017-12-31'
                      informationScopeDescription:
                        type: string
                        description: >-
                          The organizational scope of the Employee Quantity
                          Values. Employees here means it represents a single
                          organization inclusive of any branches. Employees
                          Total means it represents an organization inclusive of
                          any branches and any subsidiaries.
                        example: Consolidated
                      informationScopeDnBCode:
                        type: integer
                        description: >-
                          A unique code assigned by Dun & Bradstreet to identify
                          the organizational scope of the Employee Quantity
                          value.<br/>Refer to Reference code table "192
                          [Information Scope]" for all possible values.
                        example: 9067
                      reliabilityDescription:
                        type: string
                        description: >-
                          The integrity of the Employee Quantity Value (e.g.,
                          actual, estimated, or modeled).
                        example: Actual
                      reliabilityDnBCode:
                        type: integer
                        description: >-
                          A unique code assigned by Dun & Bradstreet to identify
                          the integrity of the Employee Quantity
                          Values.<br/>Refer to Reference code table "171
                          [Reliability]" for all possible values.
                        example: 9092
                financials:
                  type: array
                  description: >-
                    The details of the standardized summary view of the
                    financial results (actual or estimated) for the
                    organization.
                  items:
                    type: object
                    properties:
                      yearlyRevenue:
                        type: array
                        description: >-
                          The details of the total income attributable to
                          product and services sold by an organization annually.
                        items:
                          type: object
                          properties:
                            value:
                              type: number
                              description: >-
                                The total income attributable to product and
                                services sold by an organization annually. It
                                may be derived from sales, gross revenue,
                                commissions, billings or a combination of any of
                                these.
                              example: 19945238
                            currency:
                              type: string
                              description: >-
                                The three-letter currency code, defined in the
                                ISO 4217 scheme published by the International
                                Organization for Standardization (ISO)
                                identifying the type of money in which this
                                amount is expressed (e.g., USD, CAD, GBP, EUR).
                              example: USD
                      informationScopeDescription:
                        type: string
                        description: >-
                          The organizational scope of the values within the
                          Summary Financials section. Individual means it
                          represents a single organization inclusive of any
                          branches. Consolidated means it represents an
                          organization inclusive of any branches and any
                          subsidiaries.
                        example: Consolidated
                      informationScopeDnBCode:
                        type: integer
                        description: >-
                          A unique code assigned by Dun & Bradstreet to identify
                          the organizational scope of the Summary Financials
                          values.<br/>Refer to Reference code table "192
                          [Information Scope]" for all possible values.
                        example: 9067
                      reliabilityDescription:
                        type: string
                        description: >-
                          The integrity of the financial figures present within
                          the Summary Financials section (e.g., actual,
                          estimated, or modeled).
                        example: Actual
                      reliabilityDnBCode:
                        type: integer
                        description: >-
                          A unique code assigned by Dun & Bradstreet to identify
                          the integrity of the financial figures present within
                          the Summary Financials section.<br/>Refer to Reference
                          code table "171 [Reliability]" for all possible
                          values.
                        example: 9092
              description: >-
                Records the firmograhics information of the Domestic Ultimate
                company.
            organizationSizeCategory:
              type: object
              properties:
                description:
                  type: string
                  description: The description of the company size.
                  example: Medium
                dnbCode:
                  type: integer
                  description: >-
                    A unique code assigned by Dun & Bradstreet to identify the
                    company size.<br/>Refer to Reference code table "493
                    [Organization Size Category]" for all possible values.
                  example: 20548
              description: >-
                The details about the entity's size. The size of an entity is
                determined using factors such as the net worth, total employee
                quantity, and sales amount.
            employerDesignation:
              type: object
              properties:
                scoreDate:
                  type: string
                  description: The date when this score was calculated.
                  example: '2018-09-12'
                indexScore:
                  type: number
                  description: >-
                    Underlying score (0 to 1) that determines Employment
                    Classification for Modeled Classification, where higher
                    scores are assigned as Employers and lower scores assigned
                    as Non-Employers.
                  example: 0.3
                designation:
                  type: object
                  properties:
                    description:
                      type: string
                      description: >-
                        Text that denotes the classification derived based on
                        the data available for this organization.
                      example: Employer
                    dnbCode:
                      type: integer
                      description: >-
                        A unique code assigned by Dun&Bradstreet that denotes
                        the classification derived based on the data available
                        for this organization.<br/>Refer to Reference code table
                        "825 [Employer Designation]" for all possible values.
                      example: 36133
                  description: >-
                    Records the classification derived based on the data
                    available for this organization.
                reliability:
                  type: object
                  properties:
                    description:
                      type: string
                      description: >-
                        Text that records the reliability of employer
                        designation type; e.g., audited, actual, estimated,
                        modeled.
                      example: Actual
                    dnbCode:
                      type: integer
                      description: >-
                        A unique code assigned by Dun & Bradstreet that records
                        the reliability of employer designation type; e.g.,
                        audited, actual, estimated, modeled.<br/>Refer to
                        Reference code table "171 [Reliability]" for all
                        possible values.
                      example: 9092
                  description: >-
                    Records the reliability of this figure definition; e.g.,
                    audited, actual, estimated, modeled.
              description: >-
                Three category classification of a business in relation to its
                employment status: Non-employers, Employers, and Holding
                Companies. Non-employers are businesses that have no paid
                employees, including self-employed individuals operating
                unincorporated business (sole proprietors). Non-employers
                constitute most active DUNS in the D&B Data Cloud. Employers are
                businesses that have paid employees. Some employers have complex
                corporate ownership structures, where some entities exist for
                the purpose of controlling companies or holding assets, such as
                real estate, patents, or stocks. These entities, classified as
                Holding Companies, have very few or no employees and does not
                conduct any operations or active tasks. This newly created
                classification provides D&B customers with improved targeting of
                businesses relevant to their use case.
            preferredLanguage:
              type: object
              properties:
                description:
                  type: string
                  description: >-
                    Text defining the language in which the organization prefers
                    to do business.
                  example: English
                dnbCode:
                  type: integer
                  description: >-
                    A unique code assigned by Dun & Bradstreet, defining the
                    language in which the organization prefers to do
                    business.<br/>Refer to Reference code table "3 [Language]"
                    for all possible values.
                  example: 39
              description: >-
                Records the language in which the organization prefers to do
                business.
            multiLingualSearchNames:
              type: array
              description: >-
                Records the names in different languages created by D&B to
                facilitate name matching.
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: A name created by D&B to facilitate name matching.
                  language:
                    type: object
                    properties:
                      description:
                        type: string
                        description: >-
                          Text that records the language in which this
                          information was recorded.
                        example: Japanese
                      dnbCode:
                        type: integer
                        description: >-
                          A unique code assigned by Dun&Bradstreet that records
                          the language in which this information was
                          recorded.<br/>Refer to Reference code table "3
                          [Language]" for all possible values.
                        example: 3807
                    description: >-
                      Records the language in which this information was
                      recorded.
                  writingScript:
                    type: object
                    properties:
                      description:
                        type: string
                        description: >-
                          Text denoting the type of writing system for the
                          language that was used in recording this textual
                          information. For example, textual information recorded
                          in the language 'Japanese' can be written in any of
                          the following scripts: kanji, katakana, hiragana or
                          romaji.
                        example: Kana
                      dnbCode:
                        type: integer
                        description: >-
                          A unique code assigned by Dun&Bradstreet denoting the
                          type of writing system for the language that was used
                          in recording this textual information. For example,
                          textual information recorded in the language
                          'Japanese' can be written in any of the following
                          scripts: kanji, katakana, hiragana or
                          romaji.<br/>Refer to Reference code table "466
                          [Writing Script]" for all possible values.
                        example: 19347
                    description: >-
                      Records the type of writing system for the language that
                      was used in recording this textual information. For
                      example, textual information recorded in the language
                      'Japanese' can be written in any of the following scripts:
                      kanji, katakana, hiragana or romaji.
            imperialCalendarStartYear:
              type: string
              description: >-
                This is the year in which the operations undertaken by the
                subject were first started, expressed in terms of Japanese
                Emperial calendar eg.Bunkyu 1st year
            businessTrustIndex:
              type: object
              properties:
                scoreDate:
                  type: string
                  description: The date when this score was calculated.
                  example: '2021-01-31'
                trustIndex:
                  type: number
                  description: >-
                    Index ranging from 0 to 1 representing the likelihood of a
                    business record being created to enable the company to
                    continue doing business with the government while
                    obfuscating a past violation, debarment, or novation fraud. 
                    1 indicates the highest likelihood  and 0 indicates the
                    lowest
                  example: 0.4
                trustClass:
                  type: object
                  properties:
                    description:
                      type: string
                      description: >-
                        Textual description of the score representing likelihood
                        of a business record being created to enable the company
                        to continue doing business with the government while
                        obfuscating a past violation, debarment, or novation
                        fraud.
                      example: Low
                    dnbCode:
                      type: integer
                      description: >-
                        A unique code assigned by Dun&Bradstreet, representing
                        the likelihood of a business record being created to
                        enable the company to continue doing business with the
                        government while obfuscating a past violation,
                        debarment, or novation fraud.<br/>Refer to Reference
                        code table "354 [Range Position]" for all possible
                        values.
                      example: 13693
                  description: >-
                    1 to 5 class score (Lowest Risk to Highest Risk)
                    representing the likelihood of a business record being
                    created to enable the company to continue doing business
                    with the government while obfuscating a past violation,
                    debarment, or novation fraud.<br/>13693 = 1 (Lowest
                    Risk)<br/>13694 = 2 (Low Risk)<br/>13695 = 3 (Moderate
                    Risk)<br/>13700 = 4 (High Risk)<br/>13702 = 5 (Higest Risk)
                nationalPercentile:
                  type: number
                  description: >-
                    A numerical value between 1 to 100 as a percentile score
                    representing likelihood of a business record being created
                    to enable the company to continue doing business with the
                    government while obfuscating a past violation, debarment, or
                    novation fraud, where 100 indicates highest likelihood and 1
                    indicates lowest.
                  example: 75
                dataProvider:
                  type: object
                  properties:
                    description:
                      type: string
                      description: >-
                        Details on the data source from which the excluded
                        business was drawn from.
                      example: Debarment
                    dnbCode:
                      type: integer
                      description: >-
                        A unique code assigned by Dun & Bradstreet to identify
                        the data source from which the excluded business was
                        drawn from.<br/>36140 = DEBARMENT <br/>35904 = OFCCP
                        <br/>24144 = ERCR<br/>Refer to Reference code table "29
                        [Data Provider]" for all possible values.
                      example: 36140
                  description: Data source from which the excluded business was drawn from.
                scoreReasons:
                  type: array
                  description: >-
                    The highest contributing factor to attach the Active DUNS to
                    the Excluded DUNS.
                  items:
                    type: object
                    properties:
                      description:
                        type: string
                        description: >-
                          Textual description of the highest contributing factor
                          to attach the Active DUNS to the Excluded DUNS.
                        example: >-
                          The subject's URL is found to have a similar match in
                          D&B's repository of high risk businesses.
                      dnbCode:
                        type: integer
                        description: >-
                          A unique code assigned by Dun&Bradstreet, representing
                          the highest contributing factor to attach the Active
                          DUNS to the Excluded DUNS.<br/>11111 = TELEPHONE
                          NUMBER<br/>22222 = URL<br/>33333 = BUSINESS
                          NAME<br/>27677 = HIGH RISK INDIVIDUAL<br/>27647 =
                          HIGH_RISK_ADDRESS<br/>44444 = CEO_NAME<br/>55555 =
                          FIRST_EXECUTIVE_NAME<br/>66666 = CEO_FE_NAME<br/>77777
                          = BUSINESS_ADDRESS<br/>88888 = LAST_NAME<br/>99999 =
                          LINKAGE<br/>Refer to Reference code table "173 [Score
                          Commentary]" for all possible values.
                        example: 11111
                excludedOrganization:
                  type: object
                  properties:
                    duns:
                      type: string
                      description: >-
                        The D-U-N-S Number of the debarred/high risk business
                        with highest value of Business Trust Index with the
                        scored DUNS.
                      example: '804735132'
                    name:
                      type: string
                      description: >-
                        Single name by which debarred/high risk business with
                        highest value of Business Trust Index with the scored
                        DUNS is primarily known or identified.
                      example: GORMAN MANUFACTURING COMPANY, INC.
                    address:
                      type: object
                      properties:
                        streetAddressLines:
                          type: array
                          description: >-
                            Primary street address details of the debarred/high
                            risk business with highest value of Business Trust
                            Index with the scored DUNS.
                          items:
                            type: object
                            properties:
                              line1:
                                type: string
                                description: >-
                                  The first line of the Primary Address where
                                  the organization is located or conducts
                                  operations. For example The Point in the
                                  address<br/><br/>The Point<br/>37 North Wharf
                                  Road<br/>London<br/>W2 1AF
                                example: The Point
                      description: >-
                        Primary address of the debarred/high risk business with
                        highest value of Business Trust Index with the scored
                        DUNS.
                  description: >-
                    Business name of the debarred/high risk business with
                    highest value of Business Trust Index with the scored DUNS.
              description: Records the likelihood of a business attempting evasion.
            securitiesReportID:
              type: string
              description: >-
                The reference identifier of the document that states the trade
                name of the company, financial conditions of the corporate group
                to which the company belongs and other important matters
                concerning the company's business.
              example: E04991
            corporateLinkage:
              type: object
              properties:
                familytreeRolesPlayed:
                  type: array
                  description: >-
                    The details of the roles the entity plays as a member of an
                    ownership structured family tree.
                  items:
                    type: object
                    properties:
                      description:
                        type: string
                        description: >-
                          The role the entity plays as a member of an ownership
                          structured family tree (e.g., a branch, division, a
                          parent, headquarters, subsidiary, global ultimate,
                          domestic ultimate).
                        example: Parent/Headquarters
                      dnbCode:
                        type: integer
                        description: >-
                          A unique code assigned by Dun & Bradstreet to identify
                          describing family tree role.<br/>Refer to Reference
                          code table "202 [Family Tree Role]" for all possible
                          values.
                        example: 9141
                hierarchyLevel:
                  type: integer
                  description: >-
                    The number of family-tree levels below the global ultimate
                    the entity is in its corporate hierarchy. The hierarchy
                    level value of the global ultimate will always be 1. Each
                    subsidiary level below the global ultimate is incremented by
                    1. Branch locations in a family tree will have the same
                    hierarchy code as its associated headquarter.
                  example: 1
                globalUltimateFamilyTreeMembersCount:
                  type: integer
                  description: >-
                    The total number of entities in the entity's Family tree
                    starting from Global Ultimate.
                  example: 9000
                branchesCount:
                  type: integer
                  description: >-
                    The total number of branch companies that report to the
                    subject in the family tree.
                  example: 27
                globalUltimate:
                  type: object
                  properties:
                    duns:
                      type: string
                      description: >-
                        The unique identification number assigned by Dun and
                        Bradstreet identifying the top most organisation in the
                        family tree.
                      example: '804735132'
                    primaryName:
                      type: string
                      description: >-
                        Single name by which the organization is primarily known
                        or identified.
                      example: GORMAN MANUFACTURING COMPANY, INC.
                    primaryAddress:
                      type: object
                      properties:
                        addressCountry:
                          type: object
                          properties:
                            name:
                              type: string
                              description: >-
                                The Country or Region where the organization's
                                Primary Address is located or conducts
                                operations .
                              example: United States
                            isoAlpha2Code:
                              type: string
                              description: >-
                                The 2 letter alpha country code assigned by the
                                International Organization for Standardization
                                (ISO) identifying the Country/Region where the
                                organization's Primary address is located or
                                conducts operations .
                              example: US
                          description: >-
                            The details of the country or region where the
                            address of the organization is located or conducts
                            operations.
                        continentalRegion:
                          type: object
                          properties:
                            name:
                              type: string
                              description: >-
                                The name of the continent where the Primary
                                Address of the organization is located or
                                conducts operations.<br/>Possible values
                                <br/>Africa<br/>Asia
                                Pacific<br/>Europe<br/>North America<br/>Middle
                                East<br/>South America
                              example: North America
                          description: >-
                            The details of the Continent in which the Primary
                            Address of the organisation is located or conducts
                            operations.
                        addressLocality:
                          type: object
                          properties:
                            name:
                              type: string
                              description: >-
                                The name of the locality where the
                                organization's Primary Address is located or
                                conducts operations. Locality defined as a
                                district population cluster. City, town,
                                township, village, borough etc.
                              example: SAN FRANCISCO
                          description: >-
                            The details of the locality where the organization's
                            Primary Address is located or conducts operations.
                            Locality defined as a district population cluster.
                            City, town, township, village, borough etc.
                        addressRegion:
                          type: object
                          properties:
                            name:
                              type: string
                              description: >-
                                The name of the geographical area where the
                                organization's Primary Address is located or
                                conducts operations. For Example New Jersey.
                              example: California
                            abbreviatedName:
                              type: string
                              description: >-
                                The shortened name of the geographical area
                                where the organization's Primary Address is
                                located or conducts operations For example NJ
                                for the US State New Jersey within Country
                                United States.
                              example: CA
                          description: >-
                            Details of the type of geographical area where the
                            organization's Primary Address is located or
                            conducts operations.<br/>Different markets have
                            their own way of subdividing the country into
                            smaller parts. <br/>Examples:<br/>Departments
                            (France)<br/>States (USA)<br/>Provinces
                            (Netherlands)<br/>Counties (UK)<br/>Bundeslander
                            (Germany)<br/>Provinces and Territories (Canada)
                        postalCode:
                          type: string
                          description: >-
                            The postal code of the organization's Primary
                            Address.<br/><br/>Also known locally in various
                            English-speaking countries throughout the world as a
                            postcode, post code, Eircode, PIN or ZIP Code) is a
                            series of letters or digits or both, sometimes
                            including spaces or punctuation, included in a
                            postal address for the purpose of sorting mail. The
                            code is used by the country&#39;s postal authority
                            to identify the address where the organization is
                            located or conducts operations .
                          example: '941109999'
                        streetAddress:
                          type: object
                          properties:
                            line1:
                              type: string
                              description: >-
                                The first line of the address where the entity
                                is located.<br/><br/>The first line of the
                                Primary Address where the organization is
                                located or conducts operations. For example The
                                Point in the address<br/><br/>The Point<br/>37
                                North Wharf Road<br/>London<br/>W2 1AF
                              example: 492 KOLLER ST
                            line2:
                              type: string
                              description: >-
                                The second line of the Primary Address where the
                                organization is located or conducts
                                operations<br/>For example 37 North Wharf Road
                                in the address<br/>The Point<br/>37 North Wharf
                                Road<br/>London<br/>W2 1AF
                              example: Suite 100
                          description: >-
                            The details of the street address where the
                            organization's Primary Address is located.
                      description: >-
                        The details of the Primary Address at which the
                        organization is located or conducts operations.
                  description: >-
                    The details of the top most organizationin the family tree,
                    tracing each parent up to its own parent. For example,
                    organizationA is based in the US and has organizationB as
                    its parent also in the US. In turn organizationB is owned by
                    organizationC, also in the US, which is owned by
                    organizationD which is in the UK. Thus, the Global Ultimate
                    of this family tree (and therefore of each member of the
                    family tree) is organization D.
                domesticUltimate:
                  type: object
                  properties:
                    duns:
                      type: string
                      description: >-
                        The D-U-N-S number of the highest ranking member of a
                        family tree within the same country/region within a limb
                        of a family tree.
                      example: '804735132'
                    primaryName:
                      type: string
                      description: >-
                        Single name by which the organization is primarily known
                        or identified.
                      example: GORMAN MANUFACTURING COMPANY, INC.
                    primaryAddress:
                      type: object
                      properties:
                        addressCountry:
                          type: object
                          properties:
                            name:
                              type: string
                              description: >-
                                The Country or Region where the organization's
                                Primary Address is located or conducts
                                operations .
                              example: United States
                            isoAlpha2Code:
                              type: string
                              description: >-
                                The 2 letter alpha country code assigned by the
                                International Organization for Standardization
                                (ISO) identifying the Country/Region where the
                                organization's Primary address is located or
                                conducts operations .
                              example: US
                          description: >-
                            The details of the country or region where the
                            address of the organization is located or conducts
                            operations.
                        continentalRegion:
                          type: object
                          properties:
                            name:
                              type: string
                              description: >-
                                The name of the continent where the Primary
                                Address of the organization is located or
                                conducts operations.<br/>Possible values
                                <br/>Africa<br/>Asia
                                Pacific<br/>Europe<br/>North America<br/>Middle
                                East<br/>South America
                              example: North America
                          description: >-
                            The details of the Continent in which the Primary
                            Address of the organisation is located or conducts
                            operations.
                        addressLocality:
                          type: object
                          properties:
                            name:
                              type: string
                              description: >-
                                The name of the locality where the
                                organization's Primary Address is located or
                                conducts operations. Locality defined as a
                                district population cluster. City, town,
                                township, village, borough etc.
                              example: SAN FRANCISCO
                          description: >-
                            The details of the locality where the organization's
                            Primary Address is located or conducts operations.
                            Locality defined as a district population cluster.
                            City, town, township, village, borough etc.
                        addressRegion:
                          type: object
                          properties:
                            name:
                              type: string
                              description: >-
                                The name of the geographical area where the
                                organization's Primary Address is located or
                                conducts operations. For Example New Jersey.
                              example: California
                            abbreviatedName:
                              type: string
                              description: >-
                                The shortened name of the geographical area
                                where the organization's Primary Address is
                                located or conducts operations For example NJ
                                for the US State New Jersey within Country
                                United States.
                              example: CA
                          description: >-
                            Details of the type of geographical area where the
                            organization's Primary Address is located or
                            conducts operations.<br/>Different markets have
                            their own way of subdividing the country into
                            smaller parts. <br/>Examples:<br/>Departments
                            (France)<br/>States (USA)<br/>Provinces
                            (Netherlands)<br/>Counties (UK)<br/>Bundeslander
                            (Germany)<br/>Provinces and Territories (Canada)
                        postalCode:
                          type: string
                          description: >-
                            The postal code of the organization's Primary
                            Address.<br/><br/>Also known locally in various
                            English-speaking countries throughout the world as a
                            postcode, post code, Eircode, PIN or ZIP Code) is a
                            series of letters or digits or both, sometimes
                            including spaces or punctuation, included in a
                            postal address for the purpose of sorting mail. The
                            code is used by the country&#39;s postal authority
                            to identify the address where the organization is
                            located or conducts operations .
                          example: '941109999'
                        streetAddress:
                          type: object
                          properties:
                            line1:
                              type: string
                              description: >-
                                The first line of the address where the entity
                                is located.<br/><br/>The first line of the
                                Primary Address where the organization is
                                located or conducts operations. For example The
                                Point in the address<br/><br/>The Point<br/>37
                                North Wharf Road<br/>London<br/>W2 1AF
                              example: 492 KOLLER ST
                            line2:
                              type: string
                              description: >-
                                The second line of the Primary Address where the
                                organization is located or conducts
                                operations<br/>For example 37 North Wharf Road
                                in the address<br/>The Point<br/>37 North Wharf
                                Road<br/>London<br/>W2 1AF
                              example: Suite 100
                          description: >-
                            The details of the street address where the
                            organization's Primary Address is located.
                      description: >-
                        The details of the Primary Address at which the
                        organization is located or conducts operations.
                  description: >-
                    The details of the highest ranking member of a family tree
                    within the same country/region within a limb of a
                    family.<br/><br/><br/><br/>For example, Company A is based
                    in the US and has Company B as its parent also in the US. In
                    turn Company B is owned by Company C, also in the US, which
                    is owned by Company D which is in the UK. Thus, the Domestic
                    Ultimate of Company A is actually Company C as this is the
                    last entity in the parent chain that is in the US.
                parent:
                  type: object
                  properties:
                    duns:
                      type: string
                      description: >-
                        The D-U-N-S number of the organization that owns more
                        than 50% of the subject organization.
                      example: '804735132'
                    primaryName:
                      type: string
                      description: >-
                        Single name by which the organization is primarily known
                        or identified.
                      example: GORMAN MANUFACTURING COMPANY, INC.
                    primaryAddress:
                      type: object
                      properties:
                        addressCountry:
                          type: object
                          properties:
                            name:
                              type: string
                              description: >-
                                The Country or Region where the organization's
                                Primary Address is located or conducts
                                operations .
                              example: United States
                            isoAlpha2Code:
                              type: string
                              description: >-
                                The 2 letter alpha country code assigned by the
                                International Organization for Standardization
                                (ISO) identifying the Country/Region where the
                                organization's Primary address is located or
                                conducts operations .
                              example: US
                          description: >-
                            The details of the country or region where the
                            address of the organization is located or conducts
                            operations.
                        continentalRegion:
                          type: object
                          properties:
                            name:
                              type: string
                              description: >-
                                The name of the continent where the Primary
                                Address of the organization is located or
                                conducts operations.<br/>Possible values
                                <br/>Africa<br/>Asia
                                Pacific<br/>Europe<br/>North America<br/>Middle
                                East<br/>South America
                              example: North America
                          description: >-
                            The details of the Continent in which the Primary
                            Address of the organisation is located or conducts
                            operations.
                        addressLocality:
                          type: object
                          properties:
                            name:
                              type: string
                              description: >-
                                The name of the locality where the
                                organization's Primary Address is located or
                                conducts operations. Locality defined as a
                                district population cluster. City, town,
                                township, village, borough etc.
                              example: SAN FRANCISCO
                          description: >-
                            The details of the locality where the organization's
                            Primary Address is located or conducts operations.
                            Locality defined as a district population cluster.
                            City, town, township, village, borough etc.
                        addressRegion:
                          type: object
                          properties:
                            name:
                              type: string
                              description: >-
                                The name of the geographical area where the
                                organization's Primary Address is located or
                                conducts operations. For Example New Jersey.
                              example: California
                            abbreviatedName:
                              type: string
                              description: >-
                                The shortened name of the geographical area
                                where the organization's Primary Address is
                                located or conducts operations For example NJ
                                for the US State New Jersey within Country
                                United States.
                              example: CA
                          description: >-
                            Details of the type of geographical area where the
                            organization's Primary Address is located or
                            conducts operations.<br/>Different markets have
                            their own way of subdividing the country into
                            smaller parts. <br/>Examples:<br/>Departments
                            (France)<br/>States (USA)<br/>Provinces
                            (Netherlands)<br/>Counties (UK)<br/>Bundeslander
                            (Germany)<br/>Provinces and Territories (Canada)
                        postalCode:
                          type: string
                          description: >-
                            The postal code of the organization's Primary
                            Address.<br/><br/>Also known locally in various
                            English-speaking countries throughout the world as a
                            postcode, post code, Eircode, PIN or ZIP Code) is a
                            series of letters or digits or both, sometimes
                            including spaces or punctuation, included in a
                            postal address for the purpose of sorting mail. The
                            code is used by the country&#39;s postal authority
                            to identify the address where the organization is
                            located or conducts operations .
                          example: '941109999'
                        streetAddress:
                          type: object
                          properties:
                            line1:
                              type: string
                              description: >-
                                The first line of the address where the entity
                                is located.<br/><br/>The first line of the
                                Primary Address where the organization is
                                located or conducts operations. For example The
                                Point in the address<br/><br/>The Point<br/>37
                                North Wharf Road<br/>London<br/>W2 1AF
                              example: 492 KOLLER ST
                            line2:
                              type: string
                              description: >-
                                The second line of the Primary Address where the
                                organization is located or conducts
                                operations<br/>For example 37 North Wharf Road
                                in the address<br/>The Point<br/>37 North Wharf
                                Road<br/>London<br/>W2 1AF
                              example: Suite 100
                          description: >-
                            The details of the street address where the
                            organization's Primary Address is located.
                      description: >-
                        The details of the Primary Address at which the
                        organization is located or conducts operations.
                  description: >-
                    The details of the organization that owns more than 50% of
                    the subject organization.
                headQuarter:
                  type: object
                  properties:
                    duns:
                      type: string
                      description: >-
                        The D-U-N-S number of the Headquarters organization 
                        that serves as the administrative office for its
                        branches.
                      example: '804735132'
                    primaryName:
                      type: string
                      description: >-
                        Single name by which the organization is primarily known
                        or identified.
                      example: GORMAN MANUFACTURING COMPANY, INC.
                    primaryAddress:
                      type: object
                      properties:
                        addressCountry:
                          type: object
                          properties:
                            name:
                              type: string
                              description: >-
                                The Country or Region where the organization's
                                Primary Address is located or conducts
                                operations .
                              example: United States
                            isoAlpha2Code:
                              type: string
                              description: >-
                                The 2 letter alpha country code assigned by the
                                International Organization for Standardization
                                (ISO) identifying the Country/Region where the
                                organization's Primary address is located or
                                conducts operations .
                              example: US
                          description: >-
                            The details of the country or region where the
                            address of the organization is located or conducts
                            operations.
                        continentalRegion:
                          type: object
                          properties:
                            name:
                              type: string
                              description: >-
                                The name of the continent where the Primary
                                Address of the organization is located or
                                conducts operations.<br/>Possible values
                                <br/>Africa<br/>Asia
                                Pacific<br/>Europe<br/>North America<br/>Middle
                                East<br/>South America
                              example: North America
                          description: >-
                            The details of the Continent in which the Primary
                            Address of the organisation is located or conducts
                            operations.
                        addressLocality:
                          type: object
                          properties:
                            name:
                              type: string
                              description: >-
                                The name of the locality where the
                                organization's Primary Address is located or
                                conducts operations. Locality defined as a
                                district population cluster. City, town,
                                township, village, borough etc.
                              example: SAN FRANCISCO
                          description: >-
                            The details of the locality where the organization's
                            Primary Address is located or conducts operations.
                            Locality defined as a district population cluster.
                            City, town, township, village, borough etc.
                        addressRegion:
                          type: object
                          properties:
                            name:
                              type: string
                              description: >-
                                The name of the geographical area where the
                                organization's Primary Address is located or
                                conducts operations. For Example New Jersey.
                              example: California
                            abbreviatedName:
                              type: string
                              description: >-
                                The shortened name of the geographical area
                                where the organization's Primary Address is
                                located or conducts operations For example NJ
                                for the US State New Jersey within Country
                                United States.
                              example: CA
                          description: >-
                            Details of the type of geographical area where the
                            organization's Primary Address is located or
                            conducts operations.<br/>Different markets have
                            their own way of subdividing the country into
                            smaller parts. <br/>Examples:<br/>Departments
                            (France)<br/>States (USA)<br/>Provinces
                            (Netherlands)<br/>Counties (UK)<br/>Bundeslander
                            (Germany)<br/>Provinces and Territories (Canada)
                        postalCode:
                          type: string
                          description: >-
                            The postal code of the organization's Primary
                            Address.<br/><br/>Also known locally in various
                            English-speaking countries throughout the world as a
                            postcode, post code, Eircode, PIN or ZIP Code) is a
                            series of letters or digits or both, sometimes
                            including spaces or punctuation, included in a
                            postal address for the purpose of sorting mail. The
                            code is used by the country&#39;s postal authority
                            to identify the address where the organization is
                            located or conducts operations .
                          example: '941109999'
                        streetAddress:
                          type: object
                          properties:
                            line1:
                              type: string
                              description: >-
                                The first line of the address where the entity
                                is located.<br/><br/>The first line of the
                                Primary Address where the organization is
                                located or conducts operations. For example The
                                Point in the address<br/><br/>The Point<br/>37
                                North Wharf Road<br/>London<br/>W2 1AF
                              example: 492 KOLLER ST
                            line2:
                              type: string
                              description: >-
                                The second line of the Primary Address where the
                                organization is located or conducts
                                operations<br/>For example 37 North Wharf Road
                                in the address<br/>The Point<br/>37 North Wharf
                                Road<br/>London<br/>W2 1AF
                              example: Suite 100
                          description: >-
                            The details of the street address where the
                            organization's Primary Address is located.
                      description: >-
                        The details of the Primary Address at which the
                        organization is located or conducts operations.
                  description: >-
                    The details of the organization that serves as the
                    administrative office for its branches.
                branches:
                  type: array
                  description: >-
                    Records the entities with a valid linkage/association to a
                    business record which is its Headquarters.
                  items:
                    type: object
                    properties:
                      multiLingualNames:
                        type: array
                        description: >-
                          The details of the name by which the entity is
                          primarily known or identified presented in multiple
                          languages.
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              description: >-
                                The name by which the entity is primarily known
                                or identified.
                            language:
                              type: object
                              properties:
                                description:
                                  type: string
                                  description: >-
                                    The language in which this name was
                                    recorded.
                                  example: Japanese
                                dnbCode:
                                  type: integer
                                  description: >-
                                    A unique code assigned by Dun & Bradstreet
                                    to identify the language in which this
                                    address was recorded.<br/>Refer to Reference
                                    code table "3 [Language]" for all possible
                                    values.
                                  example: 39
                              description: >-
                                The details of the language in which this name
                                was recorded.
              description: >-
                Details of organization to organization relationships based on
                majority ownership or control (>50%). There are two types of
                relationships, branch/division to Headquarter and Subsidiary to
                Parent.
            industrialPlantsCount:
              type: integer
              description: >-
                The number of facilities necessary for an industrial or
                manufacturing operation i.e. the equipment, including machinery,
                tools, instruments, and fixtures and the buildings containing
                them.
              example: 23
            principalsSummary:
              type: object
              properties:
                currentPrincipalsCount:
                  type: integer
                  description: >-
                    The number of current principals that are associated with
                    the entity.
                  example: 10
                otherAssociationsCount:
                  type: integer
                  description: >-
                    The number of relationships where the active principals are
                    associated with other companies currently or in the past.
                  example: 4
                inactiveAssociationsCount:
                  type: integer
                  description: >-
                    The number of relationships where the active principals are
                    associated with other companies that are out of business.
                  example: 7
                unfavorableInactiveAssociationsCount:
                  type: integer
                  description: >-
                    The number of relationships where the principals are
                    associated with other companies that was involved in an
                    unfavorable bankruptcy event.
                  example: 5
                favorableInactiveAssociationsCount:
                  type: integer
                  description: >-
                    The number of relationships where the principals are
                    associated with other companies that was involved in a
                    favorable bankruptcy event.
                  example: 2
                detrimentalPrincipalsCount:
                  type: integer
                  description: >-
                    The number of principals that are associated with negative
                    legal events.
                  example: 2
                detrimentalPrincipalsPercentage:
                  type: number
                  description: >-
                    The percentage of total active principals that are
                    associated with negative legal events.
                  example: 20
              description: >-
                The summary information for the principals associated with the
                entity.
            currentPrincipals:
              type: array
              description: >-
                The detail of the person identified as a key stakeholder of the
                business or organization by the local registry or other official
                sources. The key stakeholder can be a natural person or an
                organization. Unless clearly defined as "former" or "most
                senior"  the definitions below refer to the current key
                stakeholder.
              items:
                type: object
                properties:
                  givenName:
                    type: string
                    description: >-
                      The given name of the key stakeholder who is an
                      individual. In western cultures this is usually presented
                      first.
                    example: Leslie
                  middleName:
                    type: string
                    description: >-
                      Additional name associated to the key stakeholder to
                      distinguish them from other people with the same given
                      name and surname. In several cultures, the middle name is
                      a portion of a personal name that is written between the
                      key stakeholder's given name and their surname. In some
                      countries such as the US, a single letter can be populated
                      in this field.
                    example: Ann
                  familyName:
                    type: string
                    description: >-
                      The family or surname of the key stakeholder who is an
                      individual. In western cultures this is usually presented
                      last.
                    example: Smith
                  fullName:
                    type: string
                    description: >-
                      The key stakeholder's given and surname in addition to the
                      middle name and name suffix (when available) listed on one
                      field if the key stakeholder is an individual. This will
                      be submitted in the appropriate format for the local
                      country. If the key stakeholder is an organization, the
                      name of the organization will be populated in the full
                      name field.
                    example: Leslie Ann Smith
                  namePrefix:
                    type: string
                    description: >-
                      The correct form of address for the key stakeholder (e.g.,
                      Dr., Professor, Lord).
                    example: Dr.
                  nameSuffix:
                    type: string
                    description: >-
                      Letters listed after the key stakeholder's last name to
                      provide additional details about the person's family
                      generation(e.g., Senior, Junior, III. ) or their
                      professional/qualification (e.g., MD, PhD etc.) Populated
                      when available.
                    example: PhD
                  associationStartDate:
                    type: string
                    description: >-
                      The date when this principal first became a principal of
                      the subject. This is not necessarily the date that the
                      principal first took up their current position.
                    example: '2013-09-30'
                  otherLanguageNames:
                    type: array
                    description: Records the names of the principal in other languages.
                    items:
                      type: object
                      properties:
                        givenName:
                          type: string
                          description: >-
                            Records the first name of the principal in other
                            languages.
                        familyName:
                          type: string
                          description: >-
                            Records the last name of the principal in other
                            languages.
                  gender:
                    type: object
                    properties:
                      description:
                        type: string
                        description: >-
                          Text description of the binary classification or
                          unknown classification based on the key stakeholder's
                          personal identity when key stakeholder is an
                          individual.
                        example: Female
                      dnbCode:
                        type: integer
                        description: >-
                          A unique code assigned by Dun & Bradstreet to identify
                          the male/female binary classification or unknown
                          classification when the key stakeholder is an
                          individual.<br/>Possible values:<br/>- 190: Male<br/>-
                          191: Female<br/>- 3581: not specified<br/>Refer to
                          Reference code table "18 [Gender]" for all possible
                          values.
                        example: 191
                    description: >-
                      The detail of the binary classification or unknown
                      classification based on the key stakeholder's personal
                      identity when key stakeholder is an individual.
                  jobTitles:
                    type: array
                    description: >-
                      The detail of the text string that denotes a position held
                      by the key stakeholder in the organization or recording of
                      the title used by the organization to describe this
                      person's job e.g., Leader Global Communication, Manager
                      National Technical Support Center.
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          description: >-
                            Text string that denotes a position held by the key
                            stakeholder in the organization or recording of the
                            title used by the organization to describe this
                            person's job e.g., Leader Global Communication,
                            Manager National Technical Support Center.
                          example: President
                  managementResponsibilities:
                    type: array
                    description: >-
                      The details of the standardized alphanumeric
                      classification code generated by Dun & Bradstreet used to
                      identify the business function and hierarchical level of
                      the key stakeholder based on their professional job title.
                    items:
                      type: object
                      properties:
                        description:
                          type: string
                          description: >-
                            A text description of the standardized alphanumeric
                            classification code generated by Dun & Bradstreet
                            that identifies the business function and
                            hierarchical level of the key stakeholder based on
                            their professional job title.<br/><br/>For example "
                            Chief Executive Officer" in<br/>A1A7 Chief Executive
                            Officer
                          example: President
                        mrcCode:
                          type: string
                          description: >-
                            A standardized alphanumeric classification code
                            generated by Dun & Bradstreet that identifies the
                            business function of the key stakeholder based on
                            the associated job title data. This information is
                            expressed as a standard Management Responsibility
                            Code (MRC).<br/><br/>For example " A1A7" in<br/>A1A7
                            Chief Executive Officer<br/>Refer to Reference code
                            table "27751[MRC]" for all possible values.
                          example: A1A6
                  idNumbers:
                    type: array
                    description: >-
                      The details of the identification/registration numbers for
                      the key stakeholder of the business or organization
                    items:
                      type: object
                      properties:
                        idNumber:
                          type: string
                          description: >-
                            A number assigned by an external body or by Dun &
                            Bradstreet which either uniquely identifies or helps
                            to identify the key stakeholder of the business or
                            organization.
                          example: '11356097'
                        idType:
                          type: object
                          properties:
                            description:
                              type: string
                              description: >-
                                Text that identifies the type of "Principal
                                Identification Number", e.g., Social Security
                                Number.
                              example: Super Person ID
                            dnbCode:
                              type: integer
                              description: >-
                                A unique code assigned by Dun & Bradstreet that
                                identifies the type of "Principal Identification
                                Number", e.g., Social Security Number.<br/>Refer
                                to Reference code table "7 [Registration Number
                                Type]" for all possible values.
                              example: 11694
                          description: >-
                            The details that identifies the type of key
                            stakeholder Identification Number, e.g., Social
                            Security Number.
            mostSeniorPrincipals:
              type: array
              description: >-
                The person identified as a highest ranking key stakeholder of a
                business or organization by the local registry or other official
                sources. A key stakeholder can be a natural person or an
                organization.
              items:
                type: object
                properties:
                  givenName:
                    type: string
                    description: >-
                      The given name of the highest ranking key stakeholder who
                      is an individual. In western cultures this is usually
                      presented first.
                    example: Leslie
                  middleName:
                    type: string
                    description: >-
                      Additional name associated to the highest ranking key
                      stakeholder to distinguish them from other people with the
                      same given name and surname. In several cultures, the
                      middle name is a portion of a personal name that is
                      written between the highest ranking key stakeholder's
                      given name and their surname. In some countries such as
                      the US, a single letter can be populated in this field.
                    example: Ann
                  familyName:
                    type: string
                    description: >-
                      The family or surname of the highest ranking key
                      stakeholder who is an individual. In western cultures this
                      is usually presented last.
                    example: Smith
                  fullName:
                    type: string
                    description: >-
                      The highest ranking key stakeholder's given and surname in
                      addition to the middle name and name suffix (when
                      available) listed on one field if the key stakeholder is
                      an individual. This will be submitted in the appropriate
                      format for the local country. If the highest ranking key
                      stakeholder is an organization, the name of the
                      organization will be populated in the full name field.
                    example: Leslie Ann Smith
                  namePrefix:
                    type: string
                    description: >-
                      The correct form of address for the highest ranking key
                      stakeholder (e.g., Dr., Professor, Lord).
                    example: Dr.
                  nameSuffix:
                    type: string
                    description: >-
                      Letters listed after the highest ranking key stakeholder's
                      last name to provide additional details about the person's
                      family generation(e.g., Senior, Junior, III. ) or their
                      professional/qualification (e.g., MD, PhD etc.) Populated
                      when available.
                    example: PhD
                  associationStartDate:
                    type: string
                    description: >-
                      The date when this principal first became a principal of
                      the subject. This is not necessarily the date that the
                      principal first took up their current position.
                    example: '2013-09-30'
                  otherLanguageNames:
                    type: array
                    description: Records the names of the principal in other languages.
                    items:
                      type: object
                      properties:
                        givenName:
                          type: string
                          description: >-
                            Records the first name of the principal in other
                            languages.
                        familyName:
                          type: string
                          description: >-
                            Records the last name of the principal in other
                            languages.
                        fullName:
                          type: string
                          description: >-
                            The full name of the most senior principal in other
                            local languages.
                        language:
                          type: object
                          properties:
                            description:
                              type: string
                              description: >-
                                Text that records the language in which this
                                information was recorded.<br/>Refer to Reference
                                code table "3 [Language]" for all possible
                                values.
                              example: Japanese
                            dnbCode:
                              type: integer
                              description: >-
                                A unique code assigned by Dun&Bradstreet that
                                records the language in which this information
                                was recorded.<br/>Refer to Reference code table
                                "3 [Language]" for all possible values.
                              example: 3807
                          description: >-
                            Records the language in which this information was
                            recorded.
                        writingScript:
                          type: object
                          properties:
                            description:
                              type: string
                              description: >-
                                Text denoting the type of writing system for the
                                language that was used in recording this textual
                                information. For example, textual information
                                recorded in the language 'Japanese' can be
                                written in any of the following scripts: kanji,
                                katakana, hiragana or romaji.
                              example: Kana
                            dnbCode:
                              type: integer
                              description: >-
                                A unique code assigned by Dun&Bradstreet
                                denoting the type of writing system for the
                                language that was used in recording this textual
                                information. For example, textual information
                                recorded in the language 'Japanese' can be
                                written in any of the following scripts: kanji,
                                katakana, hiragana or romaji.<br/>Refer to
                                Reference code table "466 [Writing Script]" for
                                all possible values.
                              example: 19347
                          description: >-
                            Records the type of writing system for the language
                            that was used in recording this textual information.
                            For example, textual information recorded in the
                            language 'Japanese' can be written in any of the
                            following scripts: kanji, katakana, hiragana or
                            romaji.
                  gender:
                    type: object
                    properties:
                      description:
                        type: string
                        description: >-
                          Text description of the binary classification or
                          unknown classification based on the highest ranking
                          key stakeholder's personal identity when key
                          stakeholder is an individual.
                        example: Female
                      dnbCode:
                        type: integer
                        description: >-
                          A unique code assigned by Dun & Bradstreet to identify
                          to define the male/female binary classification or
                          unknown classification when the highest ranking key
                          stakeholder is an individual.<br/>Possible
                          values:<br/>- 190: Male<br/>- 191: Female<br/>- 3581:
                          not specified<br/>Refer to Reference code table "18
                          [Gender]" for all possible values.
                        example: 191
                    description: >-
                      The detail of the binary classification or unknown
                      classification based on the highest ranking key
                      stakeholder's personal identity when key stakeholder is an
                      individual.
                  jobTitles:
                    type: array
                    description: >-
                      Text string that denotes a position held by the highest
                      ranking key stakeholder in the organization or recording
                      of the title used by the organization to describe this
                      person's job e.g., Leader Global Communication, Manager
                      National Technical Support Center.
                    items:
                      properties:
                        title:
                          type: string
                          example: President
                          description: >-
                            Text string that denotes a position held by the key
                            stakeholder in the organization or recording of the
                            title used by the organization to describe this
                            person's job e.g., Leader Global Communication,
                            Manager National Technical Support Center.
                      type: object
                  managementResponsibilities:
                    type: array
                    description: >-
                      The details of the standardized alphanumeric
                      classification code generated by Dun & Bradstreet used to
                      identify the business function and hierarchical level of
                      the key stakeholder based on their professional job title.
                    items:
                      type: object
                      properties:
                        description:
                          type: string
                          description: >-
                            A text description of the standardized alphanumeric
                            classification code generated by Dun & Bradstreet
                            that identifies the business function and
                            hierarchical level of the highest ranking key
                            stakeholder of the business or organization based on
                            their professional job title.<br/><br/>For example "
                            Chief Executive Officer" in<br/>A1A7 Chief Executive
                            Officer
                          example: President
                        mrcCode:
                          type: string
                          description: >-
                            A standardized alphanumeric classification code
                            generated by Dun & Bradstreet that identifies the
                            business function of the highest ranking key
                            stakeholder based on the associated job title data.
                            This information is expressed as a standard
                            Management Responsibility Code (MRC).<br/><br/>For
                            example " A1A7" in<br/>A1A7 Chief Executive
                            Officer<br/>Refer to Reference code table
                            "27751[MRC]" for all possible values.
                          example: A1A6
                  idNumbers:
                    type: array
                    description: >-
                      Identification/registration numbers for the highest
                      ranking key stakeholder of the organization
                    items:
                      type: object
                      properties:
                        idNumber:
                          type: string
                          description: >-
                            A number assigned by an external body or by Dun &
                            Bradstreet which either uniquely identifies or helps
                            to identify the highest ranking key stakeholder of
                            the organization.
                          example: '11356097'
                        idType:
                          type: object
                          properties:
                            description:
                              type: string
                              description: >-
                                Text that identifies the type of "Principal
                                Identification Number", e.g., Social Security
                                Number for the highest ranking key stakeholder
                                of the organization
                              example: Super Person ID
                            dnbCode:
                              type: integer
                              description: >-
                                A unique code assigned by Dun & Bradstreet that
                                identifies the type of "Principal Identification
                                Number", e.g., Social Security Number for the
                                highest ranking key stakeholder of the
                                organization<br/>Refer to Reference code table
                                "7 [Registration Number Type]" for all possible
                                values.
                              example: 11694
                          description: >-
                            Identifies the type of "Principal Identification
                            Number", e.g., Social Security Number for the
                            highest ranking key stakeholder of the organization.
          description: The details of the entity.
    BusinessPartnerExternalId:
      type: string
      description: >-
        ID the record has in the external system where the record originates
        from.
    ProcessingLogId:
      type: string
      example: CURATION_LOG
      description: Unique identifier of a processing log.
    AdditionalInformation:
      type: object
      description: >-
        Object provide additional informations from the request to the external
        service like headers, requestor id etc.
      properties:
        key:
          description: Key of the generic key/value map
          type: string
          example: KEY
        value:
          description: Key of the generic key/value map
          example: 1
          type: string
    NameTypeUrl:
      type: string
    NameTypeName:
      type: string
    NameTypeTechnicalKey:
      type: string
    NameValue:
      type: string
    NameShortName:
      type: string
    LanguageName:
      type: string
      description: ISO 639-1 name of language
      example: German
    LanguageTechnicalKey:
      type: string
      description: ISO 639-1 two-letter code of languages
      example: DE
    LegalFormName:
      type: string
    LegalFormUrl:
      type: string
      example: https://meta.cdq.com/Business_partner/legal_form/technical_key/DE_9866
    LegalFormTechnicalKey:
      description: Technical Key of a Legal Form
      type: string
      example: DE_9866
    schemas-Language:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/LanguageName'
        technicalKey:
          $ref: '#/components/schemas/LanguageTechnicalKey'
    LegalFormMainAbbreviation:
      type: string
    IdentifierTypeUrl:
      type: string
    IdentifierTypeName:
      type: string
    schemas-IdentifierTypeTechnicalKey:
      type: string
    IdentifierValue:
      type: string
    IssuingBodyName:
      type: string
    IssuingBodyUrl:
      type: string
    IssuingBodyTechnicalKey:
      type: string
    IdentifierStatusName:
      type: string
    IdentifierStatusTechnicalKey:
      type: string
    BusinessPartnerCategoryName:
      type: string
    BusinessPartnerCategoryUrl:
      type: string
    BusinessPartnerCategoryTechnicalKey:
      type: string
    BusinessPartnerStatusTypeName:
      type: string
    BusinessPartnerStatusTypeUrl:
      type: string
    BusinessPartnerStatusTypeTechnicalKey:
      type: string
    BusinessPartnerStatusOfficialDenotation:
      type: string
    BusinessPartnerStatusValidFrom:
      type: string
    BusinessPartnerStatusValidUntil:
      type: string
    MinorityIndicatorValue:
      type: string
    ClassificationValue:
      type: string
    ClassificationCode:
      type: string
    ClassificationTypeName:
      type: string
    ClassificationTypeUrl:
      type: string
    PhoneNumberCountryPrefix:
      type: string
      description: The country prefix of a phone number
    PhoneNumberNumber:
      type: string
      description: The complete phone number without any country prefixes.
    PhoneNumberTypeName:
      type: string
    PhoneNumberTypeUrl:
      type: string
    PhoneNumberValue:
      type: string
      description: The actual complete phone number incl. country prefix
    WebsiteUrl:
      type: string
    WebsiteTypeName:
      type: string
    WebsiteTypeUrl:
      type: string
    WebsiteTypeTechnicalKey:
      type: string
    ContactEmailValue:
      type: string
    BusinessPartnerRelationStartedAt:
      type: string
      description: ISO 8601 representation of the timestamp when the relation was created
      example: 2019-08-31T16:47+00:00
    BusinessPartnerRelationEndedAt:
      type: string
      description: ISO 8601 representation of the timestamp when the relation ended
      example: 2019-08-31T16:47+00:00
    BusinessPartnerRelationTypeName:
      type: string
      example: Organizational Unit
    BusinessPartnerRelationTypeTechnicalKey:
      type: string
      example: BRANCH
    BusinessPartnerRelationClassName:
      type: string
      example: CDQ Hierarchy
    BusinessPartnerRelationClassTechnicalKey:
      type: string
      example: BUSINESS_PARTNER_RELATION_CLASS_CDQ_HIERARCHY
    BusinessPartnerRelationStartNode:
      type: string
      description: CDQ ID of the starting node
      example: FR.RC:5664645
    CountryShortName:
      type: string
      example: CH
      description: Country code (ISO 3166-1 alpha-2).
    CountryValue:
      type: string
      example: Switzerland
      description: Country name (ISO 3166-1 alpha-2)
    PostCodeValue:
      type: string
    PostCodeTypeName:
      type: string
    PostCodeTypeUrl:
      type: string
    PostCodeTypeTechnicalKey:
      type: string
    LocalityTypeName:
      type: string
    LocalityTypeUrl:
      type: string
    LocalityTypeTechnicalKey:
      type: string
    LocalityShortName:
      type: string
    LocalityValue:
      type: string
    ThoroughfareTypeName:
      type: string
    ThoroughfareTypeUrl:
      type: string
    ThoroughfareTypeTechnicalKey:
      type: string
    ThoroughfareShortName:
      type: string
    ThoroughfareNumber:
      type: string
    ThoroughfareValue:
      type: string
    ThoroughfareName:
      type: string
    ThoroughfareDirection:
      type: string
    BusinessPartnerRelationEndNode:
      type: string
      description: CDQ ID of the target node
      example: FR.RC:5664645
    BusinessPartnerTypeName:
      type: string
    BusinessPartnerTypeUrl:
      type: string
    BusinessPartnerTypeTechnicalKey:
      type: string
    AddressExternalId:
      type: string
      description: >-
        ID the address has in the external system where the record originates
        from.
    CharacterSetName:
      type: string
      description: >-
        Name of character set. Supported character sets can be found
        [here](https://meta.cdq.com/Address/version/character_set).
      example: International
    CharacterSetTechnicalKey:
      type: string
      description: >-
        Technical key of character set. Supported character sets can be found
        [here](https://meta.cdq.com/Address/version/character_set).
      example: INTERNATIONAL
    AddressIdentifyingNameValue:
      type: string
      description: >-
        An identifying name assigned to an address. In most cases the
        identifying name refers to the name of a registered agent.
    CareOfValue:
      type: string
    AddressContextValue:
      type: string
    AdministrativeAreaValue:
      type: string
    AdministrativeAreaShortName:
      type: string
    AdministrativeAreaTypeName:
      type: string
    AdministrativeAreaTypeUrl:
      type: string
    AdministrativeAreaTypeTechnicalKey:
      type: string
    schemas-AdministrativeAreaType:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/AdministrativeAreaTypeName'
        url:
          $ref: '#/components/schemas/AdministrativeAreaTypeUrl'
        technicalKey:
          $ref: '#/components/schemas/AdministrativeAreaTypeTechnicalKey'
    PremiseValue:
      type: string
    PremiseShortName:
      type: string
    PremiseNumber:
      type: string
    PremiseTypeName:
      type: string
    PremiseTypeUrl:
      type: string
    PremiseTypeTechnicalKey:
      type: string
    PostalDeliveryPointTypeName:
      type: string
    PostalDeliveryPointTypeUrl:
      type: string
    PostalDeliveryPointTypeTechnicalKey:
      type: string
    PostalDeliveryPointShortName:
      type: string
    PostalDeliveryPointNumber:
      type: string
    PostalDeliveryPointValue:
      type: string
    GeographicCoordinatesLatitude:
      description: '47.424167'
      type: number
      format: double
    GeographicCoordinatesLongitude:
      description: '9.370833'
      type: number
      format: double
    AddressTypeName:
      type: string
    AddressTypeUrl:
      type: string
    AddressTypeTechnicalKey:
      type: string
    ProvenanceName:
      type: string
    ProvenanceUrl:
      type: string
    ProvenanceTechnicalKey:
      type: string
    ProvenanceCdqId:
      type: string
    InternationalBankAccountIdentifier:
      type: string
      description: The IBAN of a bank account.
    InternationalBankIdentifier:
      type: string
      description: (BIC/SWIFT) Bank identifier which is globally unique.
    NationalBankAccountIdentifier:
      type: string
      description: Identifier of a bank account in a national context, i.e. for a country.
    NationalBankIdentifier:
      type: string
      description: >-
        Bank identifier which is unique in a national context, i.e. for a
        country.
    BankAccountCountryCode:
      type: string
      description: ISO code to identify the country a bank account is registered in.
    FormattedSapRecordName1:
      type: string
    FormattedSapRecordName2:
      type: string
    FormattedSapRecordName3:
      type: string
    FormattedSapRecordName4:
      type: string
    FormattedSapRecordNameCo:
      type: string
    FormattedSapRecordLegalEntity:
      type: string
    FormattedSapRecordLegalForm:
      type: string
    FormattedSapRecordIndSector:
      type: string
    FormattedSapRecordNarp:
      type: string
    FormattedSapRecordStceg:
      type: string
    FormattedSapRecordStcd1:
      type: string
    FormattedSapRecordStcd2:
      type: string
    FormattedSapRecordStcd3:
      type: string
    FormattedSapRecordStcd4:
      type: string
    FormattedSapRecordStcd5:
      type: string
    FormattedSapRecordUrl:
      type: string
    FormattedSapRecordTelNumber:
      type: string
    FormattedSapRecordCountry:
      type: string
    FormattedSapRecordCountryCode:
      type: string
    FormattedSapRecordRegion:
      type: string
    FormattedSapRecordRegionCodeSap:
      type: string
    FormattedSapRecordRegionCode:
      type: string
    FormattedSapRecordCounty:
      type: string
    FormattedSapRecordCountyCode:
      type: string
    FormattedSapRecordTownship:
      type: string
    FormattedSapRecordTownshipCode:
      type: string
    FormattedSapRecordCity:
      type: string
    FormattedSapRecordDistrict:
      type: string
    FormattedSapRecordPostalCode:
      type: string
    FormattedSapRecordPostalCode3:
      type: string
    FormattedSapRecordStreet1:
      type: string
    FormattedSapRecordStreet2:
      type: string
    FormattedSapRecordStreet5:
      type: string
    FormattedSapRecordHouseNum:
      type: string
    FormattedSapRecordHouseNum2:
      type: string
    FormattedSapRecordBuilding:
      type: string
    FormattedSapRecordFloor:
      type: string
    FormattedSapRecordRoomnumber:
      type: string
    FormattedSapRecordPoBoxCountry:
      type: string
    FormattedSapRecordPoBoxCity:
      type: string
    FormattedSapRecordPoBoxPostalCode:
      type: string
    FormattedSapRecordPoBox:
      type: string
    FormattedSapRecordLatitude:
      type: string
    FormattedSapRecordLongitude:
      type: string
    FormattedSapRecord:
      description: >-
        Provides business partner and address information in a data structure
        similar to SAP Business Partner table BUT000 and SAP Business Address
        Services table ADRC. Field names are equal or very similar to SAP field
        names in order to simplify field mapping. Data for name and street
        fields is already split into chunks of max. 35 characters.
      type: object
      properties:
        name1:
          $ref: '#/components/schemas/FormattedSapRecordName1'
        name2:
          $ref: '#/components/schemas/FormattedSapRecordName2'
        name3:
          $ref: '#/components/schemas/FormattedSapRecordName3'
        name4:
          $ref: '#/components/schemas/FormattedSapRecordName4'
        nameCo:
          $ref: '#/components/schemas/FormattedSapRecordNameCo'
        legalEntity:
          $ref: '#/components/schemas/FormattedSapRecordLegalEntity'
        legalForm:
          $ref: '#/components/schemas/FormattedSapRecordLegalForm'
        indSector:
          $ref: '#/components/schemas/FormattedSapRecordIndSector'
        narp:
          $ref: '#/components/schemas/FormattedSapRecordNarp'
        stceg:
          $ref: '#/components/schemas/FormattedSapRecordStceg'
        stcd1:
          $ref: '#/components/schemas/FormattedSapRecordStcd1'
        stcd2:
          $ref: '#/components/schemas/FormattedSapRecordStcd2'
        stcd3:
          $ref: '#/components/schemas/FormattedSapRecordStcd3'
        stcd4:
          $ref: '#/components/schemas/FormattedSapRecordStcd4'
        stcd5:
          $ref: '#/components/schemas/FormattedSapRecordStcd5'
        url:
          $ref: '#/components/schemas/FormattedSapRecordUrl'
        telNumber:
          $ref: '#/components/schemas/FormattedSapRecordTelNumber'
        country:
          $ref: '#/components/schemas/FormattedSapRecordCountry'
        countryCode:
          $ref: '#/components/schemas/FormattedSapRecordCountryCode'
        region:
          $ref: '#/components/schemas/FormattedSapRecordRegion'
        regionCodeSap:
          $ref: '#/components/schemas/FormattedSapRecordRegionCodeSap'
        regionCode:
          $ref: '#/components/schemas/FormattedSapRecordRegionCode'
        county:
          $ref: '#/components/schemas/FormattedSapRecordCounty'
        countyCode:
          $ref: '#/components/schemas/FormattedSapRecordCountyCode'
        township:
          $ref: '#/components/schemas/FormattedSapRecordTownship'
        townshipCode:
          $ref: '#/components/schemas/FormattedSapRecordTownshipCode'
        city:
          $ref: '#/components/schemas/FormattedSapRecordCity'
        district:
          $ref: '#/components/schemas/FormattedSapRecordDistrict'
        postalCode:
          $ref: '#/components/schemas/FormattedSapRecordPostalCode'
        postalCode3:
          $ref: '#/components/schemas/FormattedSapRecordPostalCode3'
        street1:
          $ref: '#/components/schemas/FormattedSapRecordStreet1'
        street2:
          $ref: '#/components/schemas/FormattedSapRecordStreet2'
        street5:
          $ref: '#/components/schemas/FormattedSapRecordStreet5'
        houseNum:
          $ref: '#/components/schemas/FormattedSapRecordHouseNum'
        houseNum2:
          $ref: '#/components/schemas/FormattedSapRecordHouseNum2'
        building:
          $ref: '#/components/schemas/FormattedSapRecordBuilding'
        floor:
          $ref: '#/components/schemas/FormattedSapRecordFloor'
        roomnumber:
          $ref: '#/components/schemas/FormattedSapRecordRoomnumber'
        poBoxCountry:
          $ref: '#/components/schemas/FormattedSapRecordPoBoxCountry'
        poBoxCity:
          $ref: '#/components/schemas/FormattedSapRecordPoBoxCity'
        poBoxPostalCode:
          $ref: '#/components/schemas/FormattedSapRecordPoBoxPostalCode'
        poBox:
          $ref: '#/components/schemas/FormattedSapRecordPoBox'
        latitude:
          $ref: '#/components/schemas/FormattedSapRecordLatitude'
        longitude:
          $ref: '#/components/schemas/FormattedSapRecordLongitude'
    DataMonitorId:
      type: string
      example: bfdfd6f7-562f-4d4a-921f-e68cba60d5cf
    DataMonitorTypeName:
      type: string
      description: Readable name of data monitor type
    DataMonitorTypeTechnicalKey:
      type: string
      example: DATA_QUALITY_PROFILING
      description: Technical key of a data monitor
    BusinessPartnerStorageDataSourceId:
      type: string
      description: Unique identifier for a data source of a storage
      example: 18d06d2d-bc67-4d2b-944e-a8fc52fa981a
    BusinessPartnerStorageDataSourceName:
      type: string
      description: Name of a data source of a storage
      example: Internal customers
    DataMonitorToggle:
      type: boolean
      example: true
    ConfigurationId:
      type: string
      description: Uniquely identifies a configuration
    DataMonitorExecutionTypeTechnicalKey:
      type: string
      description: Technical key of a data monitor execution type
    DataMonitorFrequency:
      type: string
      example: BI_WEEKLY
    BuildToggle:
      type: boolean
      description: Enable to generate this report
      example: false
      default: false
    schemas-CountryShortName:
      type: string
      example: DE
      description: Optional parameter to limit on specific country only
    schemas-DataSource:
      type: string
      description: Optional parameter to limit on specified data source only
      example: 444s28f64a8726d834
    SubscriptionReportFeature:
      type: string
      description: Feature which influence the behavior of the Subscription Report.
      example: FETCH_VALIDATION_RESULTS
    SubcriptionReportConfiguration:
      description: Configures if and how subcription report is generated
      type: object
      properties:
        build:
          $ref: '#/components/schemas/BuildToggle'
        countryShortNames:
          type: array
          items:
            $ref: '#/components/schemas/schemas-CountryShortName'
        dataSource:
          $ref: '#/components/schemas/schemas-DataSource'
        provenanceTechnicalKeys:
          type: array
          items:
            $ref: '#/components/schemas/ProvenanceTechnicalKey'
          description: >-
            An array that contains Provenance Technical Keys. Provenances answer
            the question of where is subscription coming from
          example: '[''CH_UIDR'', ''LEI'' ,''VIES'']'
        featuresOn:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionReportFeature'
          description: An array of additional features for Subscription Report
          example: '[''FETCH_VALIDATION_RESULTS'']'
    PropertyChangeTypeTechnicalKey:
      type: string
      example: MODIFIED
      description: |
        Change Type
         * `ADDED` - Property has been added
         * `MODIFIED` - Property has been modified
         * `DELETED` - Property has been deleted
    ConceptTechnicalKey:
      type: string
      example: BUSINESS_PARTNER
    UpdatesReportConfiguration:
      description: Configures if and how updates report is generated
      type: object
      properties:
        build:
          $ref: '#/components/schemas/BuildToggle'
        from:
          type: string
          example: 2019-12-31T08:35
          description: >-
            Only show updates which have been modified after this date (ISO
            8601). Default is to show the 'last seven days' and farthest in the
            past is 'since three month'
        to:
          type: string
          example: 2019-12-31T16:47
          description: Only show updates which have been modified to this date (ISO 8601).
        dataSourceIds:
          type: array
          items:
            $ref: '#/components/schemas/BusinessPartnerStorageDataSourceId'
          description: An array which contains Data Source Ids of given Storage
          example: '[''5d78014f5fda44000191d020'', ''5ea2d5a3e1cb86000159675c'']'
        countryShortNames:
          type: array
          items:
            $ref: '#/components/schemas/schemas-CountryShortName'
          description: An array which contains country short names (ISO-2 Format)
          example: '[''PL'', ''DE'', ''CZ'', ''SK'']'
        provenanceTechnicalKeys:
          type: array
          items:
            $ref: '#/components/schemas/ProvenanceTechnicalKey'
          description: >-
            An array that contains Provenance Technical Keys. Provenances answer
            the question of who is responsible for an update
          example: '[''ORGANIZATION'', ''DATA_SHARING_REVIEW'', ''LEI'' ,''VIES'']'
        propertyChangeTypeTechnicalKeys:
          type: array
          items:
            $ref: '#/components/schemas/PropertyChangeTypeTechnicalKey'
          description: >-
            An array which contains Property Change Type. It can be only one of
            the following keys  ADDED, MODIFIED or DELETED'
          example: '[''ADDED'',''MODIFIED'', ''DELETED'']'
        affectedConceptTechnicalKeys:
          type: array
          items:
            $ref: '#/components/schemas/ConceptTechnicalKey'
          description: >-
            An Array which contains Affected Concepts. Uses a Technical Key of a
            data model concept as defined in CDQ Wiki
          example: '[''NAME'',''ADDRESS'',''IDENTIFIER'']'
    BusinessPartnerReportsConfiguration:
      type: object
      description: Configures if and how business partner reports are generated
      properties:
        subscription:
          $ref: '#/components/schemas/SubcriptionReportConfiguration'
        updates:
          $ref: '#/components/schemas/UpdatesReportConfiguration'
    JobId:
      type: string
      example: 35f23c03-1c22-45fe-9484-3ffe769325de
      description: Unique identifier of a job.
    JobName:
      description: Name of a Job.
      type: string
      example: Process vendor data
    JobDescription:
      description: Detailed description of a Job.
      type: string
      example: I started this job to improve quality of our data.
    schemas-JobStatus:
      description: Job execution status.
      type: string
      example: RUNNING
    FileResourceUrl:
      type: string
      description: Url of the file resource linking to s3
      example: customer-upload/user/file.xlsx
    Tag:
      description: String describing and identifying a resource.
      type: string
    Tags:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    schemas-FileResource:
      description: File resource which can be uploaded or downloaded
      type: object
      properties:
        url:
          $ref: '#/components/schemas/FileResourceUrl'
        tags:
          $ref: '#/components/schemas/Tags'
    schemas-Job:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/JobId'
        name:
          $ref: '#/components/schemas/JobName'
        description:
          $ref: '#/components/schemas/JobDescription'
        status:
          $ref: '#/components/schemas/schemas-JobStatus'
        statusMessage:
          type: string
        createdAt:
          type: string
        user:
          type: string
        progress:
          type: integer
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/schemas-FileResource'
    NumberOfUpdates:
      description: Shows the number of updates
      type: integer
      example: 342
    NumberOfCountries:
      description: Shows the number of countries
      type: integer
      example: 23
    UpdatesReportSummary:
      type: object
      properties:
        numberOfUpdates:
          $ref: '#/components/schemas/NumberOfUpdates'
        numberOfCountries:
          $ref: '#/components/schemas/NumberOfCountries'
    BusinessPartnerReportsSummary:
      type: object
      properties:
        updates:
          $ref: '#/components/schemas/UpdatesReportSummary'
    DnBDumpReportConfiguration:
      type: object
      properties:
        build:
          $ref: '#/components/schemas/BuildToggle'
        countryShortNames:
          type: array
          items:
            $ref: '#/components/schemas/CountryShortName'
          description: An array which contains country short names (ISO-2 Format)
          example: '[''PL'', ''DE'', ''CZ'', ''SK'']'
    FeatureProperty:
      type: string
    StorageDumpReportConfiguration:
      type: object
      properties:
        build:
          $ref: '#/components/schemas/BuildToggle'
        countryShortNames:
          type: array
          items:
            $ref: '#/components/schemas/CountryShortName'
          description: An array which contains country short names (ISO-2 Format)
          example: '[''PL'', ''DE'', ''CZ'', ''SK'']'
        dataSourceIds:
          type: array
          items:
            $ref: '#/components/schemas/BusinessPartnerStorageDataSourceId'
          description: An array which contains Data Source IDs
          example: '[''61236a2781bf2e000164bac8'']'
        featuresOn:
          type: array
          items:
            x-apimatic-facade: '#/components/schemas/FeaturePropertyParam'
            $ref: '#/components/schemas/FeatureProperty'
    StorageDumpReportsConfiguration:
      description: Configures if and how storage dump reports are generated
      type: object
      properties:
        dnbDumpReport:
          $ref: '#/components/schemas/DnBDumpReportConfiguration'
        storageDumpReport:
          $ref: '#/components/schemas/StorageDumpReportConfiguration'
    schemas-BusinessPartnerStorageId:
      type: string
      example: 297de304-bf4a-4812-b49e-4249d2ccf3e4
    FeaturePropertyParam:
      type: string
      enum:
        - STORE_TECHNICAL_PROFILE
      x-enumDescriptions:
        STORE_TECHNICAL_PROFILE: >-
          Technical profile is stored in MSSQL database and not deleted
          immediately after report creation.
      example: STORE_TECHNICAL_PROFILE
    TechnicalProfilerReportConfiguration:
      type: object
      properties:
        build:
          $ref: '#/components/schemas/BuildToggle'
        sourceFileUrl:
          $ref: '#/components/schemas/FileResourceUrl'
        storageId:
          $ref: '#/components/schemas/schemas-BusinessPartnerStorageId'
        featuresOn:
          type: array
          items:
            $ref: '#/components/schemas/FeaturePropertyParam'
    TechnicalReportsConfiguration:
      description: Configures if and how technical reports are generated
      type: object
      properties:
        technicalProfiler:
          $ref: '#/components/schemas/TechnicalProfilerReportConfiguration'
    DataMonitorTypeTechnicalKeyEnum:
      type: string
      enum:
        - CURATION
        - DATA_QUALITY_PROFILING
        - DATA_QUALITY_SHARING
        - DUPLICATE
    Limit:
      type: integer
      description: Number of items per page
      example: 100
    StartAfter:
      type: string
      description: The ID which is used to read the page
      example: 5712566172571652
    NextStartAfter:
      type: string
      description: The ID which can be used as startAfter for the next page
      example: 5712566172571652
    PageTotal:
      description: Total number of items which can be paged
      type: integer
      example: 67
    DataMonitorExecutionTypeTechnicalKeyEnum:
      type: string
      enum:
        - JOB
        - TRIGGER
    DataMonitorFrequencyEnum:
      type: string
      example: BI_WEEKLY
      enum:
        - BI_WEEKLY
        - MONTHLY
        - QUARTERLY
    ExternalIdValue:
      type: string
    ConceptName:
      type: string
      description: Name of the concept
      example: Business Partner
    PropertyName:
      type: string
      description: Name of the property
      example: Minority Indicator Value
    PropertyTechnicalKey:
      type: string
      description: Technical key of the property
      example: MINORITY_INDICATOR_VALUE
    PropertyContentSelector:
      type: string
      description: JSON path to the property in the provided JSON object
      example: $.partnerProfile.minorityIndicator.value
    PropertyContentInstanceSelectorKey:
      type: string
      description: >-
        JSON subpath to the property allowing to select concrete instance of a
        property in the provided JSON object.
      example: type.technicalKey
    PropertyContentInstanceSelectorValue:
      type: string
      description: >-
        Value of a JSON subpath to the property allowing to select concrete
        instance of a property in the provided JSON object.
      example: CH_UID
    PropertyChangeClassification:
      type: string
      example: MAJOR
      description: >
        Gives a user an indicator how "much" the attribute was changed OR how
        important the change was. Allowed values are
         * `MINOR` - Minor change
         * `MAJOR` - Major change
    PropertyChangeConfidenceScore:
      type: number
      description: >-
        Confidence score which shows how confident CDQ is about enrichment of
        that property. Calculation dependes on property type, see here for a
        complete description.
      minimum: 0
    PropertyChangeMaxConfidenceScore:
      type: number
      description: >-
        Maximum confidence score which is achievable for this property type.
        Note that the max value will change over time depending on the
        udnerlying algorithm which will be continously improved.
    JobProgress:
      type: integer
      description: Progres (%) of the job.
      example: 77
      maximum: 100
      minimum: 0
    SharingScopeDescription:
      type: string
      example: Share customers from France.
      maxLength: 50
    SharingScopeId:
      type: string
      example: bfdfd6f7-562f-4d4a-921f-e68cba60d5cf
    CorrelationId:
      type: string
      description: ID which uniquely chains a set of request()s and or task(s)
      example: 123e4567-e89b-12d3-a456-426614174000
    UserId:
      type: string
      example: johndoe
      description: Unique ID of a user
    Task:
      type: object
      description: A task is a unit of work
      properties:
        correlationId:
          $ref: '#/components/schemas/CorrelationId'
        userId:
          $ref: '#/components/schemas/UserId'
        jobId:
          $ref: '#/components/schemas/JobId'
    ReplyQueue:
      type: string
      description: >-
        Technical descriptor of reply queue where workers should put back the
        result
      example: 647328648329632-34890742-3432
    Worker:
      type: string
      description: Worker which generated the result
      example: pod-647328648329632-34890742-3432
    TaskStatus:
      type: string
      description: |
        status:
         * `OK` - Task has been processed succesful
         * `FAILED` - Task has been failed
      example: OK
    TaskMessage:
      type: string
      description: Details task status
      example: The validation was successful
    TaskResult:
      type: object
      description: Result or outcome of a task
      properties:
        worker:
          $ref: '#/components/schemas/Worker'
        status:
          $ref: '#/components/schemas/TaskStatus'
        message:
          $ref: '#/components/schemas/TaskMessage'
